(function(e) {
    function n(r) {
        if (t[r])
            return t[r].exports;
        var i = t[r] = {
            exports: {},
            id: r,
            loaded: false
        };
        e[r].call(i.exports, i, i.exports, n);
        i.loaded = true;
        return i.exports
    }
    var t = {};
    n.m = e;
    n.c = t;
    n.p = "//q.qunarzz.com/piao/prd/";
    return n(0)
})({
    0: function(e, t, n) {
        e.exports = n(775)
    },
    297: function(e, t) {
        var n = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(e) {
                return typeof e
            } :
            function(e) {
                return e && typeof Symbol === "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            };
        var r = false;
        var i = false;
        (function(e, t) {
            if (typeof r === "function") {
                if (r.amd) {
                    r(function() {
                        return t()
                    })
                } else if (r.cmd) {
                    r(function(e, n, r) {
                        r.exports = t()
                    })
                }
            } else if ((typeof i === "undefined" ? "undefined" : n(i)) === "object" && n(i.exports) === "object") {
                i.exports = t()
            } else {
                e.QunarAPI = t()
            }
        })(typeof window !== "undefined" ? window : undefined, function() {
            "use strict";

            function p(e) {
                return typeof e === "function"
            }

            function d(e) {
                return Object.prototype.toString.call(e) === "[object String]"
            }

            function v(t, n) {
                for (var r in t) {
                    e.register(r, t[r], n)
                }
            }

            function m() {
                if (s.length > 0) {
                    s.forEach(function(t) {
                        e.invoke(t.key, t.callback, t.param)
                    });
                    s = []
                }
            }

            function g(e) {
                if (o.length > 0) {
                    o.forEach(function(t) {
                        t(e)
                    })
                }
            }

            function y() {
                if (l.wechat) {
                    var t = n.getElementsByTagName("head")[0];
                    var r = n.createElement("script");
                    r.setAttribute("src", u.wechatApiUrl);
                    t.appendChild(r);
                    r.onload = function() {
                        for (var t in wx) {
                            e[t] = wx[t]
                        }
                        e["onMenuShare"] = function(t) {
                            for (var n in w.share.wechat) {
                                e[n](t)
                            }
                        };
                        e.isReady = true;
                        s.forEach(function(t) {
                            e[t.key](t.param)
                        });
                        s = []
                    }
                } else if (l.qunar) {
                    e.hy.onInitData = function(t) {
                        e.hy.getInitData({
                            success: function(n) {
                                p(t.success) && t.success(n)
                            }
                        })
                    };
                    window.addEventListener("load", function() {
                        setTimeout(function() {
                            if (!e.bridge) {
                                g({
                                    ret: false,
                                    errcode: -1,
                                    errmsg: "bridge注入失败"
                                })
                            }
                        }, 600)
                    })
                }
            }

            function b(t, n, r) {
                if (!n) {
                    console.error("Parameters are not allowed to be empty!");
                    return
                }
                if (h[r]) {
                    n = h[r](n)
                }
                var s = n.success,
                    o = n.fail,
                    u = n.complete;
                var a = function f(a) {
                    i.debug && console.log(a);
                    var h = Array.prototype.slice.call(arguments, 0);
                    if (!a || typeof a.ret === "undefined") {
                        p(s) && s.apply(null, h);
                        c.api[r] && c.api[r].call(n, a || {})
                    } else if (a.ret) {
                        h[0] = a.data;
                        p(s) && s.apply(null, h);
                        c.api[r] && c.api[r].call(n, a.data || {})
                    } else {
                        p(o) && o.apply(null, h)
                    }
                    p(u) && u.apply(null, h);
                    if (l.qunar && a && a.errcode != -1 && c.bridge.method(r)) {
                        e.invoke(t, f, n, r)
                    }
                };
                return e.invoke(t, a, n, r)
            }
            var e = {};
            var t = window;
            var n = t.document;
            var r = t.navigator.userAgent;
            var i = {};
            var s = [];
            var o = [];
            var u = {
                wechatApiUrl: "//res.wx.qq.com/open/js/jweixin-1.6.0.js"
            };
            var a = {};
            var f = {};
            var l = function() {
                if (/MicroMessenger/i.test(r)) {
                    return {
                        wechat: true,
                        version: ""
                    }
                } else if (/Qunar/i.test(r)) {
                    return {
                        qunar: true,
                        version: ""
                    }
                } else {
                    return {
                        h5: true,
                        version: ""
                    }
                }
            }();
            var c = {
                api: {
                    openWebView: function() {
                        p(this.onViewBack) && e.hy.onceReceiveData({
                            success: this.onViewBack
                        })
                    }
                },
                bridge: {
                    method: function(t) {
                        return w.share.wechat[t] || w.share.hy[t] ? "invoke" : ""
                    }
                }
            };
            var h = {
                checkJsApi: function(t) {
                    var n = a;
                    var r = t.success;
                    var i = t.jsApiList.slice(0);
                    t.jsApiList = i.map(function(e) {
                        return n[e] || e
                    });
                    t.success = function(e) {
                        var t = {};
                        i.forEach(function(r) {
                            var i = n[r] || r;
                            t[r] = e[i] || false
                        });
                        p(r) && r.call(null, t)
                    };
                    return t
                },
                log: function(t) {
                    if (d(t)) {
                        var n = {
                            message: t
                        };
                        return n
                    }
                    return t
                }
            };
            var w = {
                common: {
                    chooseImage: "chooseImage",
                    previewImage: "previewImage",
                    uploadImage: "uploadImage",
                    uploadImage_v1: "uploadImage.v1",
                    downloadImage: "downloadImage",
                    getNetworkType: "network.getType",
                    openLocation: "openLocation",
                    getLocation: "geolocation.getCurrentPosition",
                    closeWindow: "webview.back",
                    hideOptionMenu: "hideOptionMenu",
                    showOptionMenu: "showOptionMenu",
                    hideMenuItems: "hideMenuItems",
                    showMenuItems: "showMenuItems",
                    hideAllNonBaseMenuItem: "hideAllNonBaseMenuItem",
                    showAllNonBaseMenuItem: "showAllNonBaseMenuItem",
                    hideLoadView: "webview.hideLoadView",
                    onLoadingClose: "loadingview.close",
                    scanQRCode: "scanQRCode",
                    abTest: "abTest",
                    checkJsApi: "checkJsApi"
                },
                share: {
                    wechat: {
                        onMenuShareTimeline: "onMenuShareTimeline",
                        onMenuShareAppMessage: "onMenuShareAppMessage"
                    },
                    hy: {
                        onMenuShareWeiboApp: "onMenuShareWeiboApp",
                        onMenuShareSMS: "onMenuShareSMS",
                        onMenuShareEmail: "onMenuShareEmail",
                        onMenuShare: "onMenuShare",
                        onMenuShareQunarIM: "onMenuShareQunarIM"
                    }
                },
                hy: {
                    openWebView: "webview.open",
                    closeWebView: "webview.back",
                    setWebViewAttr: "webview.attribute",
                    getInitData: "webview.getInitData",
                    enableBackGesture: "qunarnative.gesturesView",
                    schemeForResult: "schemeForResult",
                    onShow: "webview.onShow",
                    onHide: "webview.onHide",
                    onReceiveData: "webview.onReceiveData",
                    onceReceiveData: "webview.onReceiveData",
                    onCloseWebView: "webview.targetClosed",
                    onceCloseWebView: "webview.targetClosed",
                    onBeforeShow: "webview.onBeforeShow",
                    onBeforeHide: "webview.onBeforeHide",
                    onDestroy: "webview.onDestroy",
                    navRefresh: "navigation.refresh",
                    getNavDisplayStatus: "navigation.displayStatus",
                    setNavDisplayStatus: "navigation.display",
                    onNavClick: "navigation.click",
                    setStatus: "qunarnative.status",
                    shareTimeline: "shareTimeline",
                    shareAppMessage: "sendAppMessage",
                    shareWeiboApp: "shareWeiboApp",
                    shareSMS: "shareSMS",
                    shareEmail: "shareEmail",
                    shareQunarIM: "shareQunarIM",
                    shareImageToTimeline: "shareImageToTimeline",
                    showShareItems: "doShare",
                    getDeviceInfo: "native.getDeviceInfo",
                    login: "login.start",
                    syncLoginFromTouch: "syncLoginFromTouch",
                    log: "debug.log",
                    uelog: "hy.uelog",
                    qaf: "qaf"
                },
                h5: {
                    getLocation: function(t, n) {
                        if (navigator.geolocation) {
                            navigator.geolocation.getCurrentPosition(n.success, n.fail, {
                                enableHighAccuracy: n.enableHighAccuracy || true,
                                timeout: n.timeout || 5e3
                            })
                        } else {
                            t({
                                ret: false,
                                errcode: -1,
                                errmsg: "Geolocation is not supported!"
                            })
                        }
                    },
                    login: function(t, n) {
                        var r, i, s, o = "";
                        i = "https://user.qunar.com/mobile/login.jsp";
                        r = {
                            ret: n.ret || encodeURIComponent(location.href),
                            goback: n.goback || "",
                            backUrl: n.backUrl || ""
                        };
                        for (s in r) {
                            if (r.hasOwnProperty(s) && r[s] !== "") {
                                o += s + "=" + r[s]
                            }
                        }
                        location.href = i + "?" + o
                    },
                    checkJsApi: function(t, n) {
                        var r = n.jsApiList || [];
                        var i = {},
                            s;
                        r.forEach(function(e) {
                            s = f[e];
                            i[e] = !!w.h5[s]
                        });
                        t(i)
                    },
                    notSupport: function(t, n, r, i) {
                        if (!p(t))
                            return;
                        t({
                            ret: false,
                            errcode: -1,
                            errmsg: '浏览器环境下不支持"' + i + '"接口调用'
                        })
                    }
                }
            };
            e = {
                version: "1.1.3",
                isReady: false,
                bridge: null,
                sniff: l,
                ready: function(t) {
                    var r = this;
                    if (l.qunar) {
                        n.addEventListener("WebViewJavascriptBridgeReady", function(e) {
                            r.isReady = true;
                            r.bridge = e.bridge;
                            p(t) && t.call(r);
                            m()
                        })
                    } else if (l.h5) {
                        r.isReady = true;
                        p(t) && t.call(r)
                    } else if (l.wechat) {
                        p(t) && t.call(r)
                    }
                },
                config: function(t) {
                    b("config", i = t)
                },
                error: function(t) {
                    if (p(t)) {
                        o.push(t)
                    }
                },
                invoke: function(n, r, i, o) {
                    if (!p(r))
                        return;
                    if (e.isReady) {
                        if (l.qunar) {
                            o = o || n;
                            var u = "invoke";
                            if (o.indexOf("once") === 0) {
                                u = "once"
                            } else if (o.indexOf("on") === 0) {
                                u = "on"
                            }
                            this.bridge[c.bridge.method(o) || u](n, r, i);
                            if (u == "on") {
                                return r
                            }
                        } else if (l.wechat) {
                            this[n] && this[n](i)
                        } else if (l.h5) {
                            w.h5[w.h5[o] ? o : "notSupport"](r, i, n, o)
                        }
                    } else {
                        s.push({
                            key: n,
                            callback: r,
                            param: i
                        })
                    }
                },
                off: function(t, n) {
                    if (!p(n))
                        return;
                    var r = a[t];
                    if (!r)
                        return;
                    this.bridge.off(r, n);
                    n = null
                },
                register: function(t, n, r) {
                    var i = this,
                        s = this;
                    r && (i[r] ? s = i[r] : s = i[r] = {});
                    a[t] = n;
                    f[n] = t;
                    s[t] = function(e) {
                        if (!e) {
                            e = {}
                        }
                        return b(n, e, t)
                    }
                }
            };
            v(w.share.wechat);
            v(w.share.hy);
            v(w.common);
            v(w.hy, "hy");
            y();
            return e
        });
        (function(e) {
            var t = e.hy.openWebView;
            e.hy.openWebView = function(e) {
                if (e.url.indexOf("http") != 0 && e.url.indexOf("https") != 0) {
                    e.url = location.protocol + e.url
                }
                t(e)
            }
        })(QunarAPI)
    },
    298: function(e, t, n) {
        var r = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(e) {
                return typeof e
            } :
            function(e) {
                return e && typeof Symbol === "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            };
        n(297);
        n(299);
        n(300);
        n(301);
        $.provide("ptouch.Page");
        ptouch.Page = function(e) {
            this.context = e || {};
            this.setRunOn();
            ptouch.Page.runOn = this.runOn;
            this.view = new ptouch.page.View(this.runOn);
            this.dot = new ptouch.page.Dot(this.context)
        };
        ptouch.Page.prototype.setRunOn = function() {
            var e = navigator.userAgent.toLocaleLowerCase();
            if (e.indexOf("micromessenger") > -1) {
                this.runOn = "weixin";
                return
            }
            if (!this.context.scheme) {
                var t = e.match(/(qunar[a-z]+)\/(\d+)/);
                if (t && t.length) {
                    this.runOn = "app"
                } else {
                    this.runOn = "touch"
                }
                return
            }
            if (this.context.scheme.indexOf("qunariphone") > -1 || this.context.scheme.indexOf("qunaraphone") > -1) {
                this.runOn = "app"
            } else {
                this.runOn = "touch"
            }
        };
        ptouch.Page.prototype.init = function(e) {
            try {
                if (this.runOn == "app") {
                    this.handleScriptTemplate();
                    if (e instanceof $.zepto.Z) {
                        e = e.selector
                    }
                }
                e = $(e);
                if (e.length) {
                    this.view.decorate(e)
                } else {
                    this.view.render(document.body)
                }
                this.preventInject();
                this.autoDispatchBeacon();
                if (this.runOn == "app") {
                    $.listen(window, "load", function() {
                        setTimeout($.proxy(this.init_, this), 0)
                    }, this)
                } else {
                    this.init_()
                }
                this.dot.dispatchTimeConsume()
            } catch (t) {
                this.dot.dispatchException(t);
                throw t
            }
        };
        ptouch.Page.prototype.handleScriptTemplate = function() {
            var e = $('script[type="text/html"]');
            if (!e.length)
                return;
            e.each(function(t) {
                var n = e.eq(t);
                $(n.html()).insertBefore(n);
                n.remove()
            })
        };
        ptouch.Page.prototype.autoDispatchBeacon = function() {
            this.dot.dispatchBeacon()
        };
        ptouch.Page.prototype.preventInject = function() {
            if (location.protocol == "https:") {
                return
            }
            ptouch.page.Util.handleInject(document.head);
            ptouch.page.Util.handleInject(document.body)
        };
        ptouch.Page.prototype.bindShare = function(e, t, n, r, i, s) {
            ptouch.page.Util.bindShare.apply(this, arguments)
        };
        ptouch.Page.prototype.triggerShare = function() {
            ptouch.page.Util.triggerShare(this.runOn)
        };
        ptouch.Page.prototype.setHeader = function(e, t, n, i, s) {
            if (t || s || this.runOn == "weixin" || this.runOn == "touch") {
                this.view.setHeader(e, i, n);
                if (t) {
                    this.view.enableScrollHeader();
                    this.view.setUseAppHeader(false)
                }
            } else if (this.runOn == "app") {
                var o = {};
                if (e) {
                    if ((typeof e === "undefined" ? "undefined" : r(e)) == "object") {
                        if (e.text) {
                            document.title = e.text
                        }
                        o["title"] = e
                    } else if (typeof e == "string") {
                        document.title = e;
                        o["title"] = {
                            text: e,
                            style: "text"
                        }
                    }
                }
                if (i) {
                    if ((typeof i === "undefined" ? "undefined" : r(i)) == "object") {
                        o["left"] = i
                    } else if (typeof e == "string") {
                        o["left"] = {
                            text: i,
                            style: "text"
                        }
                    }
                }
                if (n) {
                    if ((typeof n === "undefined" ? "undefined" : r(n)) == "object") {
                        o["right"] = n
                    } else if (typeof e == "string") {
                        o["right"] = {
                            text: n,
                            style: "text"
                        }
                    }
                }
                QunarAPI.ready(function() {
                    QunarAPI.hy.navRefresh(o)
                });
                this.view.setUseAppHeader(true)
            }
        };
        ptouch.Page.prototype.setContent = function(e) {
            this.view.setContent(e);
            this.dot.handlePageReady()
        };
        ptouch.Page.prototype.getView = function() {
            return this.view
        };
        ptouch.Page.prototype.openWebView = function(e) {
            ptouch.page.Util.openWebView(e, this.runOn)
        };
        ptouch.Page.prototype.closeWebView = function(e) {
            ptouch.page.Util.closeWebView(e, this.runOn)
        };
        ptouch.Page.prototype.navRefresh = function(e) {
            ptouch.page.Util.navRefresh(e)
        };
        ptouch.Page.prototype.getInitData = function(e) {
            if (this.runOn == "app") {
                QunarAPI.ready(function() {
                    QunarAPI.hy.getInitData({
                        success: function(n) {
                            e(n)
                        },
                        fail: function() {
                            e()
                        }
                    })
                })
            } else {
                e()
            }
        };
        ptouch.Page.prototype.updateAndroidVersionInfo = function(e) {
            if ($.os.android) {
                if (e) {
                    QunarAPI.ready(function() {
                        QunarAPI.onLoadingClose({
                            success: function(t, n) {
                                n({
                                    data: true
                                })
                            }
                        })
                    })
                }
                ptouch.page.Util.getDeviceInfo(this.updateVersionCookie, {
                    needReload: e
                })
            }
        };
        ptouch.Page.prototype.updateVersionCookie = function(e, t) {
            var n = e.atomversion || {},
                r = n.sight,
                i = false;
            if (t && t.needReload) {
                i = true
            }
            if (n && r) {
                var s = $.cookie("QN278"),
                    o = JSON.parse(decodeURIComponent(s || "{}"));
                if (s && o.sight == r) {
                    QunarAPI.hideLoadView({})
                } else {
                    var u = {
                        sight: r
                    };
                    $.cookie("QN278", JSON.stringify(u), {
                        expires: 365,
                        path: "/"
                    });
                    if (i) {
                        window.location.reload()
                    }
                }
            } else {
                QunarAPI.hideLoadView({})
            }
            ptouch.Page.prototype.eventHandler.trigger("updateVersionCookieDone")
        };
        ptouch.Page.prototype.eventHandler = {
            eventObj: {},
            on: function(t, n) {
                var r = this;
                if (!this.eventObj[t]) {
                    this.eventObj[t] = []
                }
                if (typeof n !== "function") {
                    return
                }
                var i = false;
                this.eventObj[t].forEach(function(e, s) {
                    if (typeof e === "function" && e.name === n.name) {
                        r.eventObj[t].splice(s, 1, n);
                        i = true
                    }
                }, this);
                if (!i) {
                    this.eventObj[t].push(n)
                }
            },
            trigger: function(t) {
                var n = this;
                for (var r = arguments.length, i = Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++) {
                    i[s - 1] = arguments[s]
                }
                if (!this.eventObj[t] || this.eventObj[t].length === 0) {
                    return
                }
                this.eventObj[t].forEach(function(e) {
                    if (typeof e === "function") {
                        e.apply(n, i)
                    }
                })
            },
            off: function(t) {
                var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "all";
                if (!this.eventObj[t] || this.eventObj[t].length === 0) {
                    return
                }
                if (n === "all") {
                    this.eventObj[t] = [];
                    return
                }
                var r = this.eventObj[t].findIndex(function(e) {
                    var t = typeof n === "function" ? n.name : n;
                    return e.name === t
                });
                if (r > -1) {
                    this.eventObj[t].splice(r, 1)
                }
            }
        }
    },
    299: function(e, t) {
        $.provide("ptouch.page.Dot");
        ptouch.page.Dot = function(e) {
            this.context = e;
            this.analytics = ptouch.Analytics.getInstance()
        };
        ptouch.page.Dot.prototype.handlePageReady = function() {
            if (this.context && this.context.touchTimeObj && this.context.touchTimeObj.windowStartTime) {
                this.analytics.dispatch("fe", {
                    a: "touch_firstscreen_time",
                    value: {
                        firstScreenTime: +(new Date) - this.context.touchTimeObj.windowStartTime,
                        url: window.location.href
                    }
                });
                $(document).listen("touchstart", this.handleFirstTouch, this)
            }
        };
        ptouch.page.Dot.prototype.handleFirstTouch = function() {
            $(document).unlisten("touchstart", this.handleFirstTouch, this);
            this.analytics.dispatch("fe", {
                a: "touch_firsttouch_time",
                value: {
                    firstTouchTime: +(new Date) - this.context.touchTimeObj.windowStartTime,
                    url: window.location.href
                }
            })
        };
        ptouch.page.Dot.prototype.dispatchException = function(e) {
            this.analytics.dispatchException(e)
        };
        ptouch.page.Dot.prototype.dispatchTimeConsume = function() {
            var e = this.context.touchTimeObj;
            if (!e) {
                return
            }
            if (e.windowStartTime && e.cssLoadedTime && e.scriptsStartTime && e.scriptsLoadedTime) {
                this.analytics.dispatch("fe", {
                    a: "touch_page_time",
                    value: {
                        cssLoadTime: e.cssLoadedTime - e.windowStartTime,
                        htmlShowTime: e.scriptsStartTime - e.cssLoadedTime,
                        jsLoadTime: e.scriptsLoadedTime - e.scriptsStartTime,
                        jsRunTime: +(new Date) - e.scriptsLoadedTime,
                        url: window.location.href
                    }
                })
            }
        };
        ptouch.page.Dot.prototype.dispatchClick = function(e) {
            return this.analytics.dispatchClick(e)
        };
        ptouch.page.Dot.prototype.dispatchBeacon = function(e) {
            return this.analytics.dispatchBeacon(e)
        };
        ptouch.page.Dot.prototype.getGlobalParams = function() {
            return {
                s: this.analytics.getPageId(),
                gid: $.env.gid,
                vid: $.env.vid,
                uniid: ptouch.Analytics.getUniId()
            }
        }
    },
    300: function(e, t) {
        $.provide("ptouch.page.Util");
        var n = false;
        document.addEventListener("WebViewJavascriptBridgeReady", function(e) {
            n = true
        });
        ptouch.page.Util.isLegalURI = function(e) {
            var t = ["qunar.com", "qunarzz.com", "baidu.com", "bdimg.com", "bdstatic.com", "res.wx.qq.com", "google.cn", "google.com", "gstatic.com", "gstatic.cn", "googleapis.com", "googleapis.cn", "c-ctrip.com"];
            for (var n = 0; n < t.length; n++) {
                if (e.indexOf(t[n]) > -1) {
                    return true
                }
            }
            return false
        };
        ptouch.page.Util.handleInject = function(e) {
            var t = e.appendChild;
            e.appendChild = function(n) {
                if (!n) {
                    return
                }
                var r = n.tagName;
                if (r == "IFRAME" || r == "SCRIPT") {
                    if (!ptouch.page.Util.isLegalURI(n.src)) {
                        return
                    }
                }
                t.call(e, n);
                return n
            }
        };
        ptouch.page.Util.openWebView = function(e, t) {
            if (t == "app") {
                if (!e.url) {
                    alert("网页链接错误");
                    return
                }
                if (e.url.indexOf("http") != 0 && e.url.indexOf("https") != 0 && e.url.indexOf("//") != 0) {
                    e.url = location.protocol + "//" + location.host + e.url
                }
                if (!e.type) {
                    e.type = "navibar-none"
                }
                if (n) {
                    QunarAPI.ready(function() {
                        QunarAPI.hy.openWebView(e)
                    })
                } else {
                    var r = $.env.scheme + "://hy?url=" + encodeURIComponent(e.url) + "&navigation=" + encodeURIComponent(JSON.stringify(e.navigation || {})) + "&type=" + e.type;
                    window.location.href = r
                }
            } else {
                if (e.url) {
                    location.href = e.url
                }
            }
        };
        ptouch.page.Util.navRefresh = function(e) {
            QunarAPI.ready(function() {
                QunarAPI.hy.navRefresh(e)
            })
        };
        ptouch.page.Util.closeWebView = function(e, t) {
            if (t == "app") {
                QunarAPI.ready(function() {
                    QunarAPI.hy.closeWebView(e)
                })
            } else {
                if (e.url) {
                    window.location.href = e.url
                } else {
                    history.back()
                }
            }
        };
        ptouch.page.Util.bindShare = function(e, t, n, r, i, s) {
            n = ptouch.page.Util.completeLink(n);
            r = ptouch.page.Util.completeLink(r);
            if (this.runOn == "weixin") {
                var o = window.location.protocol;
                var u = o + "//q.qunarzz.com/piao_base/prd/scripts/release/wxshare@1.0.2.js";
                $.getScript(u, function() {
                    e = e ? e : "";
                    t = t ? t : "";
                    n = n ? n : o + "//simg1.qunarzz.com/piao/images/touch/app_logo100.png";
                    r = r ? r : window.location.href;
                    $.util.WxShare(e, t, n, r)
                })
            } else if (this.runOn == "app") {
                var a = {
                    title: e,
                    link: r,
                    desc: t,
                    imgUrl: n,
                    success: i || function() {},
                    fail: s || function() {}
                };
                QunarAPI.ready(function() {
                    QunarAPI.onMenuShare(a)
                })
            }
        };
        ptouch.page.Util.completeLink = function(e) {
            if (!e) {
                return
            }
            if (e.indexOf("http") !== 0 && e.indexOf("https") !== 0) {
                var t = window.location.protocol;
                var n = window.location.host;
                if (/^\/\/(.+)/.test(e)) {
                    e = t + e
                } else if (/^\/[^\/](.+)/.test(e)) {
                    e = t + "//" + n + e
                }
            }
            return e
        };
        ptouch.page.Util.triggerShare = function(e) {
            if (e != "app") {
                return
            }
            QunarAPI.ready(function() {
                QunarAPI.hy.showShareItems({})
            })
        };
        ptouch.page.Util.getDeviceInfo = function(e, t) {
            QunarAPI.ready(function() {
                QunarAPI.hy.getDeviceInfo({
                    success: function(r) {
                        if (typeof e === "function") {
                            e(r, t)
                        }
                    }
                })
            })
        };
        ptouch.page.Util.doLogin = function() {
            var e = $.env.scheme || "";
            var t = $.env.scheme ? true : false;
            if (t) {
                if ($.env.scheme.indexOf("qunartravel") == 0) {
                    window.location.href = "com.qunar.gonglue://login"
                } else {
                    if (n) {
                        QunarAPI.ready(function() {
                            QunarAPI.hy.login({
                                shouldOpenLogin: true,
                                success: function(t) {
                                    window.location.reload()
                                },
                                fail: function(t) {
                                    console.log("%s %s", t.code, t.errmsg)
                                }
                            })
                        })
                    } else {
                        window.location.href = e + "://uc/login"
                    }
                }
            } else {
                window.location.href = window.location.protocol + "//touch.qunar.com/h5/user/login"
            }
        }
    },
    301: function(e, t) {
        var n = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(e) {
                return typeof e
            } :
            function(e) {
                return e && typeof Symbol === "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            };
        $.provide("ptouch.page.View");
        ptouch.page.View = function(e) {
            this.element = null;
            this.bannerHeight = null;
            this.runOn = e;
            this.userAgent = navigator.userAgent.toLowerCase()
        };
        ptouch.page.View.prototype.useAppHeader = true;
        ptouch.page.View.prototype.init = function(e) {
            if (!e instanceof $.zepto.Z) {
                e = $(e)
            }
            this.setElement(e);
            this.header = e.find(".mp-header");
            this.contentWrap = e.find(".mp-main");
            this.headerLeft = this.header.role("left");
            this.headerTitle = this.header.role("title");
            this.headerRight = this.header.role("right");
            if (this.runOn == "app" && this.header.length) {
                if (this.useAppHeader) {
                    this.header.addClass("mp-header-inapp")
                } else {
                    var t = this.systemInfo();
                    var n = t.immersiveInfo || {};
                    var r = n.immersive ? n.immersiveOffset : 0;
                    this.padHeader(r)
                }
            }
            if (this.runOn == "app" && this.contentWrap.length) {
                if (this.isIphoneX()) {
                    var i = "mp-content-iniphonex"
                } else if (this.isIPhone()) {
                    var i = "mp-content-iniphone"
                } else {
                    var i = "mp-content-inaphone"
                }
                this.contentWrap.addClass(i)
            }
            this.bindEvents()
        };
        ptouch.page.View.prototype.padHeader = function(e) {
            this.header.css("padding-top", e + "px");
            this.headerLeft.css("top", e + "px");
            this.headerRight.css("top", e + "px")
        };
        ptouch.page.View.prototype.setBannerHeight = function(e) {
            this.bannerHeight = e
        };
        ptouch.page.View.prototype.render = function(e) {
            var t = $('<div class="mp-page" id="main-page">' + '<div class="mp-header" style="display:none;">' + '<a class="mp-header-left mpg-iconfont" mp-role="left">&#xf3cd;</a>' + '<h1 class="mp-header-title" mp-role="title"></h1>' + '<span class="mp-header-right" mp-role="right"></span>' + "</div>" + '<div class="mp-main" id="mp-main">' + "</div>" + "</div>");
            t.appendTo(e);
            this.init(t)
        };
        ptouch.page.View.prototype.decorate = function(e) {
            this.init(e)
        };
        ptouch.page.View.prototype.isIPhone = function() {
            return this.userAgent.indexOf("iphone") > -1
        };
        ptouch.page.View.prototype.isAndroid = function() {
            return this.userAgent.indexOf("android") > -1
        };
        ptouch.page.View.prototype.isIphoneX = function() {
            var e = this.isIPhone(),
                t = /(m\/10.3|m\/10.6|m\/11.1|m\/11.2|m\/11.3|m\/11.4|m\/11.5|m\/11.6)/.test(this.userAgent);
            return e && t
        };
        ptouch.page.View.prototype.systemInfo = function() {
            var e = this;
            try {
                if (navigator.userAgent.match(/[(iPad)|(iPod)|(iPhone)].*OS\s([\d_]+)/)) {
                    if (typeof __getSystemInfo !== "undefined") {
                        return typeof __getSystemInfo === "string" ? JSON.parse(__getSystemInfo) : __getSystemInfo
                    }
                    return {
                        immersiveInfo: {
                            immersive: true,
                            immersiveOffset: e.isIphoneX ? 44 : 20
                        }
                    }
                } else if (navigator.userAgent.match(/(Android);?[\s\/]+([\d.]+)?/)) {
                    if (typeof WebViewJavascriptBridgeNative !== "undefined" && WebViewJavascriptBridgeNative.__getSystemInfo) {
                        var t = WebViewJavascriptBridgeNative.__getSystemInfo();
                        return typeof t === "string" ? JSON.parse(t) : t
                    }
                }
            } catch (n) {
                return {}
            }
            return {}
        };
        ptouch.page.View.prototype.bindEvents = function() {
            $(document.body).listen("touchstart", function() {}, this);
            if (this.runOn == "app") {
                this.element.delegate("a[hybrid-link]", "click", $.proxy(this.handleLinkClick, this))
            }
            if (this.useAppHeader) {
                this.bindNativeHeaderClick({
                    success: $.proxy(this.handleHeaderClick, this)
                })
            }
            this.bindDomHeaderClick();
            FastClick.attach(document.body)
        };
        ptouch.page.View.prototype.bindDomHeaderClick = function() {
            if (this.headerLeft.length > 0) {
                this.headerLeft.listen("click", this.handleHeaderClick, this)
            }
            if (this.headerTitle.length > 0) {
                this.headerTitle.listen("click", this.handleHeaderClick, this)
            }
            if (this.headerRight.length > 0) {
                this.headerRight.listen("click", this.handleHeaderClick, this)
            }
        };
        ptouch.page.View.prototype.setUseAppHeader = function(e) {
            this.useAppHeader = e
        };
        ptouch.page.View.prototype.handleHeaderClick = function(e) {
            var t = this.runOn == "app" && e.button && !e.currentTarget;
            var n = t ? e.button : $(e.currentTarget);
            var r = t ? e.button : n.attr("mp-role");
            var i = t ? "native" : "dom";
            var s = null;
            switch (r) {
                case "left":
                    s = new $.Event("headerleftclick", {
                        element: n,
                        srcType: i
                    });
                    $(this).triggerHandler(s);
                    if (!s.isDefaultPrevented() && (!this.useAppHeader || this.runOn != "app")) {
                        ptouch.page.Util.closeWebView({}, this.runOn)
                    }
                    break;
                case "title":
                    s = new $.Event("headertitleclick", {
                        element: n,
                        srcType: i
                    });
                    $(this).triggerHandler(s);
                    break;
                case "right":
                    s = new $.Event("headerrightclick", {
                        element: n,
                        srcType: i
                    });
                    $(this).triggerHandler(s);
                    break;
                default:
                    break
            }
            if (s && s.isDefaultPrevented()) {
                return false
            }
        };
        ptouch.page.View.prototype.bindNativeHeaderClick = function(e) {
            QunarAPI.ready(function() {
                QunarAPI.hy.onNavClick(e)
            })
        };
        ptouch.page.View.prototype.setElement = function(e) {
            this.element = e
        };
        ptouch.page.View.prototype.enableScrollHeader = function() {
            this.scrollHeader = true;
            this.header.css({
                position: "fixed",
                width: "100%",
                top: 0,
                left: 0
            });
            this.setHeaderVisible(false);
            this.createBackElement();
            $(window).listen("scroll", this.handleHeaderScroll, this)
        };
        ptouch.page.View.prototype.handleBackElementClick = function() {
            ptouch.page.Util.closeWebView({}, this.runOn)
        };
        ptouch.page.View.prototype.disableScrollHeader = function() {
            this.scrollHeader = false;
            this.header.css("position", "relative");
            this.setHeaderVisible(true);
            this.removeBackElement();
            $(window).unlisten("scroll", this.handleHeaderScroll, this)
        };
        ptouch.page.View.prototype.createBackElement = function() {
            var e = $('<a class="mp-header-back mpg-iconfont"><span class="mp-headerback-bg"></span><span class="mp-headerback-icon">&#xe458;</span></a>');
            e.appendTo(this.element);
            if (this.runOn == "app") {
                var t = this.systemInfo();
                var n = t.immersiveInfo || {};
                if (n.immersive) {
                    e.css("top", n.immersiveOffset / 50 + "rem")
                }
            }
            this.backElement = e;
            this.backElement.listen("click", this.handleBackElementClick, this)
        };
        ptouch.page.View.prototype.removeBackElement = function() {
            this.backElement.unlisten("click", this.handleBackElementClick, this);
            this.backElement.remove()
        };
        ptouch.page.View.prototype.handleHeaderScroll = function() {
            var e = this.bannerHeight || 180;
            var t = $(window).scrollTop();
            if (t <= e) {
                this.backElement && this.backElement.hide();
                var n = t / e;
                this.header.css({
                    display: "block",
                    opacity: n
                });
                if (t == 0) {
                    this.header.hide();
                    this.backElement && this.backElement.show()
                }
            } else {
                this.header.css({
                    display: "block",
                    opacity: 1
                })
            }
        };
        ptouch.page.View.prototype.setContent = function(e) {
            this.contentWrap.html(e)
        };
        ptouch.page.View.prototype.setHeader = function(e, t, r) {
            if (e) {
                if ((typeof e === "undefined" ? "undefined" : n(e)) == "object") {
                    this.headerTitle.html(e.html)
                } else if (typeof e == "string") {
                    this.headerTitle.html(e)
                }
            }
            if (t) {
                if ((typeof t === "undefined" ? "undefined" : n(t)) == "object") {
                    this.headerLeft.html(t.html)
                } else if (typeof t == "string") {
                    this.headerLeft.html(t)
                }
            }
            if (r) {
                if ((typeof r === "undefined" ? "undefined" : n(r)) == "object") {
                    this.headerRight.html(r.html)
                } else if (typeof r == "string") {
                    this.headerRight.html(r)
                }
            }
            this.setHeaderVisible(true)
        };
        ptouch.page.View.prototype.getElement = function() {
            return this.element
        };
        ptouch.page.View.prototype.getHeader = function() {
            return this.header
        };
        ptouch.page.View.prototype.getContent = function() {
            return this.contentWrap
        };
        ptouch.page.View.prototype.setHeaderVisible = function(e) {
            if (e) {
                this.header.show()
            } else {
                this.header.hide()
            }
        };
        ptouch.page.View.prototype.handleLinkClick = function(e) {
            e.preventDefault();
            var t = e.currentTarget.href;
            var n = e.currentTarget.title;
            var r = $(e.currentTarget).attr("hy-header");
            var i = !n || r == "false" ? "navibar-none" : "navibar-normal";
            ptouch.page.Util.openWebView({
                url: t,
                animate: "moveFromRight",
                type: i,
                onViewBack: $.proxy(this.handleViewBack, this),
                navigation: {
                    title: {
                        style: "text",
                        text: n
                    }
                }
            }, this.runOn);
            return false
        };
        ptouch.page.View.prototype.handleViewBack = function(e) {
            $(this).triggerHandler("viewback", [e])
        }
    },
    303: function(e, t, n) {
        n(304);
        $.provide("ptouch.ui.PictureSlider");
        ptouch.ui.PictureSlider = function(e) {
            this.setItems(e)
        };
        $.inherits(ptouch.ui.PictureSlider, $.ui.Slider);
        ptouch.ui.PictureSlider.prototype.create = function(e) {
            this.createDom();
            this.bindEvents();
            this.element.appendTo(e)
        };
        ptouch.ui.PictureSlider.prototype.createDom = function() {
            var e = '<div class="mp-slide-closebutton"><span class="mpg-iconfont">&#xf3f4;</span></div>' + '<div class="mp-imgswipe-show js-slider-picture mp-imgswipe-current">' + "</div>" + '<div class="mp-imgswipe-show js-slider-picture-back">' + "</div>" + '<div class="mp-imgswipe-bar">' + '<div class="mp-imgswipe-note"><em class="js-slider-name"></em><span class="js-slider-namesub"></span></div>' + '<div class="mp-imgswipe-turn mp-imgswipe-prev"><span class="mpg-iconfont">&#xf3cc;</span></div>' + '<div class="mp-imgswipe-turn mp-imgswipe-next"><span class="mpg-iconfont">&#xf3cc;</span></div>' + "</div>";
            this.element = $("<div>").addClass("mp-imgswipe").html(e);
            this.picContainer = this.element.find(".js-slider-picture");
            this.backPicContainer = this.element.find(".js-slider-picture-back");
            this.titleElem = this.element.find(".js-slider-name");
            this.indexElem = this.element.find(".js-slider-namesub");
            this.leftButton = this.element.find(".mp-imgswipe-prev");
            this.rightButton = this.element.find(".mp-imgswipe-next");
            this.touchContainer = this.element.find(".mp-imgswipe-current")
        };
        ptouch.ui.PictureSlider.prototype.bindEvents = function() {
            this.leftButton.listen("click", this.handleLeftButtonClick, this);
            this.rightButton.listen("click", this.handleRightButtonClick, this);
            this.picContainer.listen("click", this.handleCloseSlider, this);
            var e = this.getItemCount();
            if (e > 1) {
                this.touchContainer.listen("touchstart", this.handleTouchStart, this);
                this.touchContainer.listen("touchmove", this.handleTouchMove, this);
                this.touchContainer.listen("touchend", this.handleTouchEnd, this)
            }
        };
        ptouch.ui.PictureSlider.prototype.getTouchPoint = function(e) {
            return e.targetTouches[0]
        };
        ptouch.ui.PictureSlider.prototype.handleTouchStart = function(e) {
            this.startX = this.getTouchPoint(e).screenX;
            this.showBack = false;
            if ($.os && $.os.ios) {
                e.preventDefault()
            }
        };
        ptouch.ui.PictureSlider.prototype.handleTouchMove = function(e) {
            var t = this.getTouchPoint(e).screenX;
            var n = this.getItemCount();
            var r = t - this.startX;
            this.touchContainer.addClass("mp-imgswipe-move");
            if (r > 0) {
                this.backPicContainer.html(this.index_ <= 0 ? "" : this.getImageElem(this.getPrevItem().url, this.getPrevItem().smallUrl));
                this.touchContainer.css("-webkit-transform", "translateX(" + (this.index_ <= 0 ? r / 2 : r) + "px)")
            } else {
                this.backPicContainer.html(this.index_ >= n - 1 ? "" : this.getImageElem(this.getNextItem().url, this.getNextItem().smallUrl));
                this.touchContainer.css("-webkit-transform", "translateX(" + (this.index_ >= n - 1 ? r / 2 : r) + "px)")
            }
            this.currentX = t
        };
        ptouch.ui.PictureSlider.prototype.handleTouchEnd = function(e) {
            var t = this.currentX - this.startX;
            var n = this.getItemCount();
            if (t > 0) {
                if (this.index_ <= 0 || Math.abs(t) < 40) {
                    this.touchContainer.css({
                        "-webkit-transition": ".2s -webkit-transform ease-in-out",
                        "-webkit-transform": "translateX(0px)"
                    });
                    setTimeout($.proxy(function() {
                        this.touchContainer.removeClass("mp-imgswipe-move");
                        this.touchContainer.css({
                            "-webkit-transition": ""
                        })
                    }, this), 200)
                } else {
                    this.touchContainer.css({
                        "-webkit-transition": ".2s -webkit-transform ease-in-out",
                        "-webkit-transform": "translateX(500px)"
                    });
                    setTimeout($.proxy(function() {
                        this.handleLeftButtonClick();
                        this.touchContainer.css({
                            "-webkit-transition": "",
                            "-webkit-transform": "translateX(0px)"
                        })
                    }, this), 200)
                }
            } else if (t < 0) {
                if (this.index_ >= n - 1 || Math.abs(t) < 40) {
                    this.touchContainer.css({
                        "-webkit-transition": ".2s -webkit-transform ease-in-out",
                        "-webkit-transform": "translateX(0px)"
                    });
                    setTimeout($.proxy(function() {
                        this.touchContainer.removeClass("mp-imgswipe-move");
                        this.touchContainer.css({
                            "-webkit-transition": ""
                        })
                    }, this), 200)
                } else {
                    this.touchContainer.css({
                        "-webkit-transition": ".2s -webkit-transform ease-in-out",
                        "-webkit-transform": "translateX(-500px)"
                    });
                    setTimeout($.proxy(function() {
                        this.handleRightButtonClick();
                        this.touchContainer.css({
                            "-webkit-transition": "",
                            "-webkit-transform": "translateX(0px)"
                        })
                    }, this), 200)
                }
            }
        };
        ptouch.ui.PictureSlider.prototype.getPrevItem = function() {
            var e = this.getItemCount();
            var t = (this.index_ - 1 + e) % e;
            return this.getItem(t)
        };
        ptouch.ui.PictureSlider.prototype.getNextItem = function() {
            var e = this.getItemCount();
            var t = (this.index_ + 1) % e;
            return this.getItem(t)
        };
        ptouch.ui.PictureSlider.loadedImageStack = [];
        ptouch.ui.PictureSlider.prototype.getImageElem = function(e, t) {
            if (ptouch.ui.PictureSlider.loadedImageStack.length == 0 || $.inArray(e, ptouch.ui.PictureSlider.loadedImageStack) != -1) {
                var n = $('<div class="mp-imgswipe-img" style="background-image:url(' + e + ')" />')
            } else {
                var n = $('<div class="mp-imgswipe-img" style="background-image:url(' + t + ')" />');
                var r = $("<img>").load(function() {
                    n.css({
                        "background-image": "url(" + e + ")"
                    });
                    ptouch.ui.PictureSlider.loadedImageStack.push(e)
                }).attr({
                    src: e
                })
            }
            return n
        };
        ptouch.ui.PictureSlider.prototype.setIndex = function(e) {
            var t = this.getItemCount();
            e = Math.max(Math.min(e, t - 1), -1);
            ptouch.ui.PictureSlider.superClass_.setIndex.call(this, e);
            var n = this.getItem(e);
            if (n) {
                this.touchContainer.removeClass("mp-imgswipe-move");
                this.touchContainer.css("left", 0);
                var r = this.getImageElem(n.url, n.smallUrl);
                this.picContainer.html(r);
                this.titleElem.html(n.title);
                this.indexElem.html(e + 1 + " / " + t);
                if (this.index_ <= 0) {
                    this.leftButton.addClass("mp-imgswipe-disabled")
                } else {
                    this.leftButton.removeClass("mp-imgswipe-disabled")
                }
                if (this.index_ >= t - 1) {
                    this.rightButton.addClass("mp-imgswipe-disabled")
                } else {
                    this.rightButton.removeClass("mp-imgswipe-disabled")
                }
            }
        };
        ptouch.ui.PictureSlider.prototype.handleLeftButtonClick = function() {
            this.setIndex(--this.index_)
        };
        ptouch.ui.PictureSlider.prototype.handleRightButtonClick = function() {
            this.setIndex(++this.index_)
        };
        ptouch.ui.PictureSlider.prototype.handleCloseSlider = function() {
            this.element.remove()
        }
    },
    304: function(e, t) {
        $.provide("$.ui.Slider");
        $.ui.Slider = function() {};
        $.ui.Slider.prototype.items = null;
        $.ui.Slider.prototype.index_ = -1;
        $.ui.Slider.prototype.setItems = function(e) {
            this.items_ = e
        };
        $.ui.Slider.prototype.getItems = function() {
            return this.items_
        };
        $.ui.Slider.prototype.getItem = function(e) {
            return this.items_[e] || null
        };
        $.ui.Slider.prototype.getItemCount = function() {
            return this.items_ ? this.items_.length : 0
        };
        $.ui.Slider.prototype.setIndex = function(e) {
            this.index_ = e
        };
        $.ui.Slider.prototype.getIndex = function() {
            return this.index_
        }
    },
    389: function(e, t) {
        var n = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(e) {
                return typeof e
            } :
            function(e) {
                return e && typeof Symbol === "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            };
        $.provide("$.IScroll");
        (function(e, t) {
            function O(e) {
                if (s === "")
                    return e;
                e = e.charAt(0).toUpperCase() + e.substr(1);
                return s + e
            }
            var r = Math,
                i = t.createElement("div").style,
                s = function() {
                    var e = "t,webkitT,MozT,msT,OT".split(","),
                        t, n = 0,
                        r = e.length;
                    for (; n < r; n++) {
                        t = e[n] + "ransform";
                        if (t in i) {
                            return e[n].substr(0, e[n].length - 1)
                        }
                    }
                    return false
                }(),
                o = s ? "-" + s.toLowerCase() + "-" : "",
                u = O("transform"),
                a = O("transitionProperty"),
                f = O("transitionDuration"),
                l = O("transformOrigin"),
                c = O("transitionTimingFunction"),
                h = O("transitionDelay"),
                p = /android/gi.test(navigator.appVersion),
                d = /iphone|ipad/gi.test(navigator.appVersion),
                v = /hp-tablet/gi.test(navigator.appVersion),
                m = O("perspective") in i,
                g = "ontouchstart" in e && !v,
                y = s !== false,
                b = O("transition") in i,
                w = "onorientationchange" in e ? "orientationchange" : "resize",
                E = g ? "touchstart" : "mousedown",
                S = g ? "touchmove" : "mousemove",
                x = g ? "touchend" : "mouseup",
                T = g ? "touchcancel" : "mouseup",
                N = function() {
                    if (s === false)
                        return false;
                    var e = {
                        "": "transitionend",
                        webkit: "webkitTransitionEnd",
                        Moz: "transitionend",
                        O: "otransitionend",
                        ms: "MSTransitionEnd"
                    };
                    return e[s]
                }(),
                C = function() {
                    return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function(e) {
                        return setTimeout(e, 1)
                    }
                }(),
                k = function() {
                    return e.cancelRequestAnimationFrame || e.webkitCancelAnimationFrame || e.webkitCancelRequestAnimationFrame || e.mozCancelRequestAnimationFrame || e.oCancelRequestAnimationFrame || e.msCancelRequestAnimationFrame || clearTimeout
                }(),
                L = m ? " translateZ(0)" : "",
                A = function(i, s) {
                    var h = this,
                        v;
                    h.wrapper = (typeof i === "undefined" ? "undefined" : n(i)) == "object" ? i : t.getElementById(i);
                    h.wrapper.style.overflow = "hidden";
                    h.scroller = h.wrapper.children[0];
                    h.options = {
                        hScroll: true,
                        vScroll: true,
                        x: 0,
                        y: 0,
                        bounce: true,
                        bounceLock: false,
                        momentum: true,
                        lockDirection: true,
                        useTransform: true,
                        useTransition: false,
                        topOffset: 0,
                        checkDOMChanges: false,
                        handleClick: true,
                        hScrollbar: true,
                        vScrollbar: true,
                        fixedScrollbar: p,
                        hideScrollbar: d,
                        fadeScrollbar: d && m,
                        scrollbarClass: "",
                        zoom: false,
                        zoomMin: 1,
                        zoomMax: 4,
                        doubleTapZoom: 2,
                        wheelAction: "scroll",
                        snap: false,
                        snapThreshold: 1,
                        onRefresh: null,
                        onBeforeScrollStart: function(t) {
                            var n = t.target;
                            while (n.nodeType != 1) {
                                n = n.parentNode
                            }
                            if (n.tagName != "SELECT" && n.tagName != "INPUT" && n.tagName != "TEXTAREA")
                                t.preventDefault()
                        },
                        onScrollStart: null,
                        onBeforeScrollMove: null,
                        onScrollMove: null,
                        onBeforeScrollEnd: null,
                        onScrollEnd: null,
                        onTouchEnd: null,
                        onDestroy: null,
                        onZoomStart: null,
                        onZoom: null,
                        onZoomEnd: null
                    };
                    for (v in s) {
                        h.options[v] = s[v]
                    }
                    h.x = h.options.x;
                    h.y = h.options.y;
                    h.options.useTransform = y && h.options.useTransform;
                    h.options.hScrollbar = h.options.hScroll && h.options.hScrollbar;
                    h.options.vScrollbar = h.options.vScroll && h.options.vScrollbar;
                    h.options.zoom = h.options.useTransform && h.options.zoom;
                    h.options.useTransition = b && h.options.useTransition;
                    if (h.options.zoom && p) {
                        L = ""
                    }
                    h.scroller.style[a] = h.options.useTransform ? o + "transform" : "top left";
                    h.scroller.style[f] = "0";
                    h.scroller.style[l] = "0 0";
                    if (h.options.useTransition)
                        h.scroller.style[c] = "cubic-bezier(0.33,0.66,0.66,1)";
                    if (h.options.useTransform)
                        h.scroller.style[u] = "translate(" + h.x + "px," + h.y + "px)" + L;
                    else
                        h.scroller.style.cssText += ";position:absolute;top:" + h.y + "px;left:" + h.x + "px";
                    if (h.options.useTransition)
                        h.options.fixedScrollbar = true;
                    h.refresh();
                    h._bind(w, e);
                    h._bind(E);
                    if (!g) {
                        if (h.options.wheelAction != "none") {
                            h._bind("DOMMouseScroll");
                            h._bind("mousewheel")
                        }
                    }
                    if (h.options.checkDOMChanges)
                        h.checkDOMTime = setInterval(function() {
                            h._checkDOMChanges()
                        }, 500)
                };
            A.prototype = {
                enabled: true,
                x: 0,
                y: 0,
                steps: [],
                scale: 1,
                currPageX: 0,
                currPageY: 0,
                pagesX: [],
                pagesY: [],
                aniTime: null,
                wheelZoomCount: 0,
                handleEvent: function(t) {
                    var n = this;
                    switch (t.type) {
                        case E:
                            if (!g && t.button !== 0)
                                return;
                            n._start(t);
                            break;
                        case S:
                            n._move(t);
                            break;
                        case x:
                        case T:
                            n._end(t);
                            break;
                        case w:
                            n._resize();
                            break;
                        case "DOMMouseScroll":
                        case "mousewheel":
                            n._wheel(t);
                            break;
                        case N:
                            n._transitionEnd(t);
                            break
                    }
                },
                _checkDOMChanges: function() {
                    if (this.moved || this.zoomed || this.animating || this.scrollerW == this.scroller.offsetWidth * this.scale && this.scrollerH == this.scroller.offsetHeight * this.scale)
                        return;
                    this.refresh()
                },
                _scrollbar: function(n) {
                    var i = this,
                        s;
                    if (!i[n + "Scrollbar"]) {
                        if (i[n + "ScrollbarWrapper"]) {
                            if (y)
                                i[n + "ScrollbarIndicator"].style[u] = "";
                            i[n + "ScrollbarWrapper"].parentNode.removeChild(i[n + "ScrollbarWrapper"]);
                            i[n + "ScrollbarWrapper"] = null;
                            i[n + "ScrollbarIndicator"] = null
                        }
                        return
                    }
                    if (!i[n + "ScrollbarWrapper"]) {
                        s = t.createElement("div");
                        if (i.options.scrollbarClass)
                            s.className = i.options.scrollbarClass + n.toUpperCase();
                        else
                            s.style.cssText = "position:absolute;z-index:100;" + (n == "h" ? "height:7px;bottom:1px;left:2px;right:" + (i.vScrollbar ? "7" : "2") + "px" : "width:7px;bottom:" + (i.hScrollbar ? "7" : "2") + "px;top:2px;right:1px");
                        s.style.cssText += ";pointer-events:none;" + o + "transition-property:opacity;" + o + "transition-duration:" + (i.options.fadeScrollbar ? "350ms" : "0") + ";overflow:hidden;opacity:" + (i.options.hideScrollbar ? "0" : "1");
                        i.wrapper.appendChild(s);
                        i[n + "ScrollbarWrapper"] = s;
                        s = t.createElement("div");
                        if (!i.options.scrollbarClass) {
                            s.style.cssText = "position:absolute;z-index:100;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);" + o + "background-clip:padding-box;" + o + "box-sizing:border-box;" + (n == "h" ? "height:100%" : "width:100%") + ";" + o + "border-radius:3px;border-radius:3px"
                        }
                        s.style.cssText += ";pointer-events:none;" + o + "transition-property:" + o + "transform;" + o + "transition-timing-function:cubic-bezier(0.33,0.66,0.66,1);" + o + "transition-duration:0;" + o + "transform: translate(0,0)" + L;
                        if (i.options.useTransition)
                            s.style.cssText += ";" + o + "transition-timing-function:cubic-bezier(0.33,0.66,0.66,1)";
                        i[n + "ScrollbarWrapper"].appendChild(s);
                        i[n + "ScrollbarIndicator"] = s
                    }
                    if (n == "h") {
                        i.hScrollbarSize = i.hScrollbarWrapper.clientWidth;
                        i.hScrollbarIndicatorSize = r.max(r.round(i.hScrollbarSize * i.hScrollbarSize / i.scrollerW), 8);
                        i.hScrollbarIndicator.style.width = i.hScrollbarIndicatorSize + "px";
                        i.hScrollbarMaxScroll = i.hScrollbarSize - i.hScrollbarIndicatorSize;
                        i.hScrollbarProp = i.hScrollbarMaxScroll / i.maxScrollX
                    } else {
                        i.vScrollbarSize = i.vScrollbarWrapper.clientHeight;
                        i.vScrollbarIndicatorSize = r.max(r.round(i.vScrollbarSize * i.vScrollbarSize / i.scrollerH), 8);
                        i.vScrollbarIndicator.style.height = i.vScrollbarIndicatorSize + "px";
                        i.vScrollbarMaxScroll = i.vScrollbarSize - i.vScrollbarIndicatorSize;
                        i.vScrollbarProp = i.vScrollbarMaxScroll / i.maxScrollY
                    }
                    i._scrollbarPos(n, true)
                },
                _resize: function() {
                    var t = this;
                    setTimeout(function() {
                        t.refresh()
                    }, p ? 200 : 0)
                },
                _pos: function(t, n) {
                    if (this.zoomed)
                        return;
                    t = this.hScroll ? t : 0;
                    n = this.vScroll ? n : 0;
                    if (this.options.useTransform) {
                        this.scroller.style[u] = "translate(" + t + "px," + n + "px) scale(" + this.scale + ")" + L
                    } else {
                        t = r.round(t);
                        n = r.round(n);
                        this.scroller.style.left = t + "px";
                        this.scroller.style.top = n + "px"
                    }
                    this.x = t;
                    this.y = n;
                    this._scrollbarPos("h");
                    this._scrollbarPos("v")
                },
                _scrollbarPos: function(t, n) {
                    var i = this,
                        s = t == "h" ? i.x : i.y,
                        o;
                    if (!i[t + "Scrollbar"])
                        return;
                    s = i[t + "ScrollbarProp"] * s;
                    if (s < 0) {
                        if (!i.options.fixedScrollbar) {
                            o = i[t + "ScrollbarIndicatorSize"] + r.round(s * 3);
                            if (o < 8)
                                o = 8;
                            i[t + "ScrollbarIndicator"].style[t == "h" ? "width" : "height"] = o + "px"
                        }
                        s = 0
                    } else if (s > i[t + "ScrollbarMaxScroll"]) {
                        if (!i.options.fixedScrollbar) {
                            o = i[t + "ScrollbarIndicatorSize"] - r.round((s - i[t + "ScrollbarMaxScroll"]) * 3);
                            if (o < 8)
                                o = 8;
                            i[t + "ScrollbarIndicator"].style[t == "h" ? "width" : "height"] = o + "px";
                            s = i[t + "ScrollbarMaxScroll"] + (i[t + "ScrollbarIndicatorSize"] - o)
                        } else {
                            s = i[t + "ScrollbarMaxScroll"]
                        }
                    }
                    i[t + "ScrollbarWrapper"].style[h] = "0";
                    i[t + "ScrollbarWrapper"].style.opacity = n && i.options.hideScrollbar ? "0" : "1";
                    i[t + "ScrollbarIndicator"].style[u] = "translate(" + (t == "h" ? s + "px,0)" : "0," + s + "px)") + L
                },
                _start: function(n) {
                    var i = this,
                        s = g ? n.touches[0] : n,
                        o, a, f, l, c;
                    if (!i.enabled)
                        return;
                    if (i.options.onBeforeScrollStart)
                        i.options.onBeforeScrollStart.call(i, n);
                    if (i.options.useTransition || i.options.zoom)
                        i._transitionTime(0);
                    i.moved = false;
                    i.animating = false;
                    i.zoomed = false;
                    i.distX = 0;
                    i.distY = 0;
                    i.absDistX = 0;
                    i.absDistY = 0;
                    i.dirX = 0;
                    i.dirY = 0;
                    if (i.options.zoom && g && n.touches.length > 1) {
                        l = r.abs(n.touches[0].pageX - n.touches[1].pageX);
                        c = r.abs(n.touches[0].pageY - n.touches[1].pageY);
                        i.touchesDistStart = r.sqrt(l * l + c * c);
                        i.originX = r.abs(n.touches[0].pageX + n.touches[1].pageX - i.wrapperOffsetLeft * 2) / 2 - i.x;
                        i.originY = r.abs(n.touches[0].pageY + n.touches[1].pageY - i.wrapperOffsetTop * 2) / 2 - i.y;
                        if (i.options.onZoomStart)
                            i.options.onZoomStart.call(i, n)
                    }
                    if (i.options.momentum) {
                        if (i.options.useTransform) {
                            o = getComputedStyle(i.scroller, null)[u].replace(/[^0-9\-.,]/g, "").split(",");
                            a = +(o[12] || o[4]);
                            f = +(o[13] || o[5])
                        } else {
                            a = +getComputedStyle(i.scroller, null).left.replace(/[^0-9-]/g, "");
                            f = +getComputedStyle(i.scroller, null).top.replace(/[^0-9-]/g, "")
                        }
                        if (a != i.x || f != i.y) {
                            if (i.options.useTransition)
                                i._unbind(N);
                            else
                                k(i.aniTime);
                            i.steps = [];
                            i._pos(a, f);
                            if (i.options.onScrollEnd)
                                i.options.onScrollEnd.call(i)
                        }
                    }
                    i.absStartX = i.x;
                    i.absStartY = i.y;
                    i.startX = i.x;
                    i.startY = i.y;
                    i.pointX = s.pageX;
                    i.pointY = s.pageY;
                    i.startTime = Date.now();
                    if (i.options.onScrollStart)
                        i.options.onScrollStart.call(i, n);
                    i._bind(S, e);
                    i._bind(x, e);
                    i._bind(T, e)
                },
                _move: function(t) {
                    var n = this,
                        i = g ? t.touches[0] : t,
                        s = i.pageX - n.pointX,
                        o = i.pageY - n.pointY,
                        a = n.x + s,
                        f = n.y + o,
                        l, c, h, p = Date.now();
                    if (n.options.onBeforeScrollMove)
                        n.options.onBeforeScrollMove.call(n, t);
                    if (n.options.zoom && g && t.touches.length > 1) {
                        l = r.abs(t.touches[0].pageX - t.touches[1].pageX);
                        c = r.abs(t.touches[0].pageY - t.touches[1].pageY);
                        n.touchesDist = r.sqrt(l * l + c * c);
                        n.zoomed = true;
                        h = 1 / n.touchesDistStart * n.touchesDist * this.scale;
                        if (h < n.options.zoomMin)
                            h = .5 * n.options.zoomMin * Math.pow(2, h / n.options.zoomMin);
                        else if (h > n.options.zoomMax)
                            h = 2 * n.options.zoomMax * Math.pow(.5, n.options.zoomMax / h);
                        n.lastScale = h / this.scale;
                        a = this.originX - this.originX * n.lastScale + this.x;
                        f = this.originY - this.originY * n.lastScale + this.y;
                        this.scroller.style[u] = "translate(" + a + "px," + f + "px) scale(" + h + ")" + L;
                        if (n.options.onZoom)
                            n.options.onZoom.call(n, t);
                        return
                    }
                    n.pointX = i.pageX;
                    n.pointY = i.pageY;
                    if (a > 0 || a < n.maxScrollX) {
                        a = n.options.bounce ? n.x + s / 2 : a >= 0 || n.maxScrollX >= 0 ? 0 : n.maxScrollX
                    }
                    if (f > n.minScrollY || f < n.maxScrollY) {
                        f = n.options.bounce ? n.y + o / 2 : f >= n.minScrollY || n.maxScrollY >= 0 ? n.minScrollY : n.maxScrollY
                    }
                    n.distX += s;
                    n.distY += o;
                    n.absDistX = r.abs(n.distX);
                    n.absDistY = r.abs(n.distY);
                    if (n.absDistX < 6 && n.absDistY < 6) {
                        return
                    }
                    if (n.options.lockDirection) {
                        if (n.absDistX > n.absDistY + 5) {
                            f = n.y;
                            o = 0
                        } else if (n.absDistY > n.absDistX + 5) {
                            a = n.x;
                            s = 0
                        }
                    }
                    n.moved = true;
                    n._pos(a, f);
                    n.dirX = s > 0 ? -1 : s < 0 ? 1 : 0;
                    n.dirY = o > 0 ? -1 : o < 0 ? 1 : 0;
                    if (p - n.startTime > 300) {
                        n.startTime = p;
                        n.startX = n.x;
                        n.startY = n.y
                    }
                    if (n.options.onScrollMove)
                        n.options.onScrollMove.call(n, t)
                },
                _end: function(i) {
                    if (g && i.touches.length !== 0)
                        return;
                    var s = this,
                        o = g ? i.changedTouches[0] : i,
                        a, l, c = {
                            dist: 0,
                            time: 0
                        },
                        h = {
                            dist: 0,
                            time: 0
                        },
                        p = Date.now() - s.startTime,
                        d = s.x,
                        v = s.y,
                        m, y, b, w, E;
                    s._unbind(S, e);
                    s._unbind(x, e);
                    s._unbind(T, e);
                    if (s.options.onBeforeScrollEnd)
                        s.options.onBeforeScrollEnd.call(s, i);
                    if (s.zoomed) {
                        E = s.scale * s.lastScale;
                        E = Math.max(s.options.zoomMin, E);
                        E = Math.min(s.options.zoomMax, E);
                        s.lastScale = E / s.scale;
                        s.scale = E;
                        s.x = s.originX - s.originX * s.lastScale + s.x;
                        s.y = s.originY - s.originY * s.lastScale + s.y;
                        s.scroller.style[f] = "200ms";
                        s.scroller.style[u] = "translate(" + s.x + "px," + s.y + "px) scale(" + s.scale + ")" + L;
                        s.zoomed = false;
                        s.refresh();
                        if (s.options.onZoomEnd)
                            s.options.onZoomEnd.call(s, i);
                        return
                    }
                    if (!s.moved) {
                        if (g) {
                            if (s.doubleTapTimer && s.options.zoom) {
                                clearTimeout(s.doubleTapTimer);
                                s.doubleTapTimer = null;
                                if (s.options.onZoomStart)
                                    s.options.onZoomStart.call(s, i);
                                s.zoom(s.pointX, s.pointY, s.scale == 1 ? s.options.doubleTapZoom : 1);
                                if (s.options.onZoomEnd) {
                                    setTimeout(function() {
                                        s.options.onZoomEnd.call(s, i)
                                    }, 200)
                                }
                            } else if (this.options.handleClick) {
                                s.doubleTapTimer = setTimeout(function() {
                                    s.doubleTapTimer = null;
                                    a = o.target;
                                    while (a.nodeType != 1) {
                                        a = a.parentNode
                                    }
                                    if (a.tagName != "SELECT" && a.tagName != "INPUT" && a.tagName != "TEXTAREA") {
                                        l = t.createEvent("MouseEvents");
                                        l.initMouseEvent("click", true, true, i.view, 1, o.screenX, o.screenY, o.clientX, o.clientY, i.ctrlKey, i.altKey, i.shiftKey, i.metaKey, 0, null);
                                        l._fake = true;
                                        a.dispatchEvent(l)
                                    }
                                }, s.options.zoom ? 250 : 0)
                            }
                        }
                        s._resetPos(400);
                        if (s.options.onTouchEnd)
                            s.options.onTouchEnd.call(s, i);
                        return
                    }
                    if (p < 300 && s.options.momentum) {
                        c = d ? s._momentum(d - s.startX, p, -s.x, s.scrollerW - s.wrapperW + s.x, s.options.bounce ? s.wrapperW : 0) : c;
                        h = v ? s._momentum(v - s.startY, p, -s.y, s.maxScrollY < 0 ? s.scrollerH - s.wrapperH + s.y - s.minScrollY : 0, s.options.bounce ? s.wrapperH : 0) : h;
                        d = s.x + c.dist;
                        v = s.y + h.dist;
                        if (s.x > 0 && d > 0 || s.x < s.maxScrollX && d < s.maxScrollX)
                            c = {
                                dist: 0,
                                time: 0
                            };
                        if (s.y > s.minScrollY && v > s.minScrollY || s.y < s.maxScrollY && v < s.maxScrollY)
                            h = {
                                dist: 0,
                                time: 0
                            }
                    }
                    if (c.dist || h.dist) {
                        b = r.max(r.max(c.time, h.time), 10);
                        if (s.options.snap) {
                            m = d - s.absStartX;
                            y = v - s.absStartY;
                            if (r.abs(m) < s.options.snapThreshold && r.abs(y) < s.options.snapThreshold) {
                                s.scrollTo(s.absStartX, s.absStartY, 200)
                            } else {
                                w = s._snap(d, v);
                                d = w.x;
                                v = w.y;
                                b = r.max(w.time, b)
                            }
                        }
                        s.scrollTo(r.round(d), r.round(v), b);
                        if (s.options.onTouchEnd)
                            s.options.onTouchEnd.call(s, i);
                        return
                    }
                    if (s.options.snap) {
                        m = d - s.absStartX;
                        y = v - s.absStartY;
                        if (r.abs(m) < s.options.snapThreshold && r.abs(y) < s.options.snapThreshold)
                            s.scrollTo(s.absStartX, s.absStartY, 200);
                        else {
                            w = s._snap(s.x, s.y);
                            if (w.x != s.x || w.y != s.y)
                                s.scrollTo(w.x, w.y, w.time)
                        }
                        if (s.options.onTouchEnd)
                            s.options.onTouchEnd.call(s, i);
                        return
                    }
                    s._resetPos(200);
                    if (s.options.onTouchEnd)
                        s.options.onTouchEnd.call(s, i)
                },
                _resetPos: function(t) {
                    var n = this,
                        r = n.x >= 0 ? 0 : n.x < n.maxScrollX ? n.maxScrollX : n.x,
                        i = n.y >= n.minScrollY || n.maxScrollY > 0 ? n.minScrollY : n.y < n.maxScrollY ? n.maxScrollY : n.y;
                    if (r == n.x && i == n.y) {
                        if (n.moved) {
                            n.moved = false;
                            if (n.options.onScrollEnd)
                                n.options.onScrollEnd.call(n)
                        }
                        if (n.hScrollbar && n.options.hideScrollbar) {
                            if (s == "webkit")
                                n.hScrollbarWrapper.style[h] = "300ms";
                            n.hScrollbarWrapper.style.opacity = "0"
                        }
                        if (n.vScrollbar && n.options.hideScrollbar) {
                            if (s == "webkit")
                                n.vScrollbarWrapper.style[h] = "300ms";
                            n.vScrollbarWrapper.style.opacity = "0"
                        }
                        return
                    }
                    n.scrollTo(r, i, t || 0)
                },
                _wheel: function(t) {
                    var n = this,
                        r, i, s, o, u;
                    if ("wheelDeltaX" in t) {
                        if (n.vScroll == false && n.hScroll == true) {
                            i = t.wheelDeltaX / .5;
                            r = t.wheelDeltaY / .5
                        } else {
                            r = t.wheelDeltaX / .5;
                            i = t.wheelDeltaY / .5
                        }
                    } else if ("wheelDelta" in t) {
                        r = i = t.wheelDelta / 12
                    } else if ("detail" in t) {
                        r = i = -t.detail * 3
                    } else {
                        return
                    }
                    if (n.options.wheelAction == "zoom") {
                        u = n.scale * Math.pow(2, 1 / 3 * (i ? i / Math.abs(i) : 0));
                        if (u < n.options.zoomMin)
                            u = n.options.zoomMin;
                        if (u > n.options.zoomMax)
                            u = n.options.zoomMax;
                        if (u != n.scale) {
                            if (!n.wheelZoomCount && n.options.onZoomStart)
                                n.options.onZoomStart.call(n, t);
                            n.wheelZoomCount++;
                            n.zoom(t.pageX, t.pageY, u, 400);
                            setTimeout(function() {
                                n.wheelZoomCount--;
                                if (!n.wheelZoomCount && n.options.onZoomEnd)
                                    n.options.onZoomEnd.call(n, t)
                            }, 400)
                        }
                        return
                    }
                    s = n.x + r;
                    o = n.y + i;
                    if (s > 0)
                        s = 0;
                    else if (s < n.maxScrollX)
                        s = n.maxScrollX;
                    if (o > n.minScrollY)
                        o = n.minScrollY;
                    else if (o < n.maxScrollY)
                        o = n.maxScrollY;
                    if (n.maxScrollY < 0 || n.maxScrollX < 0) {
                        n.scrollTo(s, o, 500)
                    }
                },
                _transitionEnd: function(t) {
                    var n = this;
                    if (t.target != n.scroller)
                        return;
                    n._unbind(N);
                    n._startAni()
                },
                _startAni: function() {
                    var t = this,
                        n = t.x,
                        i = t.y,
                        s = Date.now(),
                        o, u, a;
                    if (t.animating)
                        return;
                    if (!t.steps.length) {
                        t._resetPos(400);
                        return
                    }
                    o = t.steps.shift();
                    if (o.x == n && o.y == i)
                        o.time = 0;
                    t.animating = true;
                    t.moved = true;
                    if (t.options.useTransition) {
                        t._transitionTime(o.time);
                        t._pos(o.x, o.y);
                        t.animating = false;
                        if (o.time)
                            t._bind(N);
                        else
                            t._resetPos(0);
                        return
                    }
                    a = function() {
                        var f = Date.now(),
                            l, c;
                        if (f >= s + o.time) {
                            t._pos(o.x, o.y);
                            t.animating = false;
                            if (t.options.onAnimationEnd)
                                t.options.onAnimationEnd.call(t);
                            t._startAni();
                            return
                        }
                        f = (f - s) / o.time - 1;
                        u = r.sqrt(1 - f * f);
                        l = (o.x - n) * u + n;
                        c = (o.y - i) * u + i;
                        t._pos(l, c);
                        if (t.animating)
                            t.aniTime = C(a)
                    };
                    a()
                },
                _transitionTime: function(t) {
                    t += "ms";
                    this.scroller.style[f] = t;
                    if (this.hScrollbar)
                        this.hScrollbarIndicator.style[f] = t;
                    if (this.vScrollbar)
                        this.vScrollbarIndicator.style[f] = t
                },
                _momentum: function(t, n, i, s, o) {
                    var u = 6e-4,
                        a = r.abs(t) / n,
                        f = a * a / (2 * u),
                        l = 0,
                        c = 0;
                    if (t > 0 && f > i) {
                        c = o / (6 / (f / a * u));
                        i = i + c;
                        a = a * i / f;
                        f = i
                    } else if (t < 0 && f > s) {
                        c = o / (6 / (f / a * u));
                        s = s + c;
                        a = a * s / f;
                        f = s
                    }
                    f = f * (t < 0 ? -1 : 1);
                    l = a / u;
                    return {
                        dist: f,
                        time: r.round(l)
                    }
                },
                _offset: function(t) {
                    var n = -t.offsetLeft,
                        r = -t.offsetTop;
                    while (t = t.offsetParent) {
                        n -= t.offsetLeft;
                        r -= t.offsetTop
                    }
                    if (t != this.wrapper) {
                        n *= this.scale;
                        r *= this.scale
                    }
                    return {
                        left: n,
                        top: r
                    }
                },
                _snap: function(t, n) {
                    var i = this,
                        s, o, u, a, f, l;
                    u = i.pagesX.length - 1;
                    for (s = 0,
                        o = i.pagesX.length; s < o; s++) {
                        if (t >= i.pagesX[s]) {
                            u = s;
                            break
                        }
                    }
                    if (u == i.currPageX && u > 0 && i.dirX < 0)
                        u--;
                    t = i.pagesX[u];
                    f = r.abs(t - i.pagesX[i.currPageX]);
                    f = f ? r.abs(i.x - t) / f * 500 : 0;
                    i.currPageX = u;
                    u = i.pagesY.length - 1;
                    for (s = 0; s < u; s++) {
                        if (n >= i.pagesY[s]) {
                            u = s;
                            break
                        }
                    }
                    if (u == i.currPageY && u > 0 && i.dirY < 0)
                        u--;
                    n = i.pagesY[u];
                    l = r.abs(n - i.pagesY[i.currPageY]);
                    l = l ? r.abs(i.y - n) / l * 500 : 0;
                    i.currPageY = u;
                    a = r.round(r.max(f, l)) || 200;
                    return {
                        x: t,
                        y: n,
                        time: a
                    }
                },
                _bind: function(t, n, r) {
                    (n || this.scroller).addEventListener(t, this, !!r)
                },
                _unbind: function(t, n, r) {
                    (n || this.scroller).removeEventListener(t, this, !!r)
                },
                destroy: function() {
                    var n = this;
                    n.scroller.style[u] = "";
                    n.hScrollbar = false;
                    n.vScrollbar = false;
                    n._scrollbar("h");
                    n._scrollbar("v");
                    n._unbind(w, e);
                    n._unbind(E);
                    n._unbind(S, e);
                    n._unbind(x, e);
                    n._unbind(T, e);
                    if (!n.options.hasTouch) {
                        n._unbind("DOMMouseScroll");
                        n._unbind("mousewheel")
                    }
                    if (n.options.useTransition)
                        n._unbind(N);
                    if (n.options.checkDOMChanges)
                        clearInterval(n.checkDOMTime);
                    if (n.options.onDestroy)
                        n.options.onDestroy.call(n)
                },
                refresh: function() {
                    var t = this,
                        n, i, s, o, u = 0,
                        a = 0;
                    if (t.scale < t.options.zoomMin)
                        t.scale = t.options.zoomMin;
                    t.wrapperW = t.wrapper.clientWidth || 1;
                    t.wrapperH = t.wrapper.clientHeight || 1;
                    t.minScrollY = -t.options.topOffset || 0;
                    t.scrollerW = r.round(t.scroller.offsetWidth * t.scale);
                    t.scrollerH = r.round((t.scroller.offsetHeight + t.minScrollY) * t.scale);
                    t.maxScrollX = t.wrapperW - t.scrollerW;
                    t.maxScrollY = t.wrapperH - t.scrollerH + t.minScrollY;
                    t.dirX = 0;
                    t.dirY = 0;
                    if (t.options.onRefresh)
                        t.options.onRefresh.call(t);
                    t.hScroll = t.options.hScroll && t.maxScrollX < 0;
                    t.vScroll = t.options.vScroll && (!t.options.bounceLock && !t.hScroll || t.scrollerH > t.wrapperH);
                    t.hScrollbar = t.hScroll && t.options.hScrollbar;
                    t.vScrollbar = t.vScroll && t.options.vScrollbar && t.scrollerH > t.wrapperH;
                    n = t._offset(t.wrapper);
                    t.wrapperOffsetLeft = -n.left;
                    t.wrapperOffsetTop = -n.top;
                    if (typeof t.options.snap == "string") {
                        t.pagesX = [];
                        t.pagesY = [];
                        o = t.scroller.querySelectorAll(t.options.snap);
                        for (i = 0,
                            s = o.length; i < s; i++) {
                            u = t._offset(o[i]);
                            u.left += t.wrapperOffsetLeft;
                            u.top += t.wrapperOffsetTop;
                            t.pagesX[i] = u.left < t.maxScrollX ? t.maxScrollX : u.left * t.scale;
                            t.pagesY[i] = u.top < t.maxScrollY ? t.maxScrollY : u.top * t.scale
                        }
                    } else if (t.options.snap) {
                        t.pagesX = [];
                        while (u >= t.maxScrollX) {
                            t.pagesX[a] = u;
                            u = u - t.wrapperW;
                            a++
                        }
                        if (t.maxScrollX % t.wrapperW)
                            t.pagesX[t.pagesX.length] = t.maxScrollX - t.pagesX[t.pagesX.length - 1] + t.pagesX[t.pagesX.length - 1];
                        u = 0;
                        a = 0;
                        t.pagesY = [];
                        while (u >= t.maxScrollY) {
                            t.pagesY[a] = u;
                            u = u - t.wrapperH;
                            a++
                        }
                        if (t.maxScrollY % t.wrapperH)
                            t.pagesY[t.pagesY.length] = t.maxScrollY - t.pagesY[t.pagesY.length - 1] + t.pagesY[t.pagesY.length - 1]
                    }
                    t._scrollbar("h");
                    t._scrollbar("v");
                    if (!t.zoomed) {
                        t.scroller.style[f] = "0";
                        t._resetPos(400)
                    }
                },
                scrollTo: function(t, n, r, i) {
                    var s = this,
                        o = t,
                        u, a;
                    s.stop();
                    if (!o.length)
                        o = [{
                            x: t,
                            y: n,
                            time: r,
                            relative: i
                        }];
                    for (u = 0,
                        a = o.length; u < a; u++) {
                        if (o[u].relative) {
                            o[u].x = s.x - o[u].x;
                            o[u].y = s.y - o[u].y
                        }
                        s.steps.push({
                            x: o[u].x,
                            y: o[u].y,
                            time: o[u].time || 0
                        })
                    }
                    s._startAni()
                },
                scrollToElement: function(t, n) {
                    var i = this,
                        s;
                    t = t.nodeType ? t : i.scroller.querySelector(t);
                    if (!t)
                        return;
                    s = i._offset(t);
                    s.left += i.wrapperOffsetLeft;
                    s.top += i.wrapperOffsetTop;
                    s.left = s.left > 0 ? 0 : s.left < i.maxScrollX ? i.maxScrollX : s.left;
                    s.top = s.top > i.minScrollY ? i.minScrollY : s.top < i.maxScrollY ? i.maxScrollY : s.top;
                    n = n === undefined ? r.max(r.abs(s.left) * 2, r.abs(s.top) * 2) : n;
                    i.scrollTo(s.left, s.top, n)
                },
                scrollToPage: function(t, n, r) {
                    var i = this,
                        s, o;
                    r = r === undefined ? 400 : r;
                    if (i.options.onScrollStart)
                        i.options.onScrollStart.call(i);
                    if (i.options.snap) {
                        t = t == "next" ? i.currPageX + 1 : t == "prev" ? i.currPageX - 1 : t;
                        n = n == "next" ? i.currPageY + 1 : n == "prev" ? i.currPageY - 1 : n;
                        t = t < 0 ? 0 : t > i.pagesX.length - 1 ? i.pagesX.length - 1 : t;
                        n = n < 0 ? 0 : n > i.pagesY.length - 1 ? i.pagesY.length - 1 : n;
                        i.currPageX = t;
                        i.currPageY = n;
                        s = i.pagesX[t];
                        o = i.pagesY[n]
                    } else {
                        s = -i.wrapperW * t;
                        o = -i.wrapperH * n;
                        if (s < i.maxScrollX)
                            s = i.maxScrollX;
                        if (o < i.maxScrollY)
                            o = i.maxScrollY
                    }
                    i.scrollTo(s, o, r)
                },
                disable: function() {
                    this.stop();
                    this._resetPos(0);
                    this.enabled = false;
                    this._unbind(S, e);
                    this._unbind(x, e);
                    this._unbind(T, e)
                },
                enable: function() {
                    this.enabled = true
                },
                stop: function() {
                    if (this.options.useTransition)
                        this._unbind(N);
                    else
                        k(this.aniTime);
                    this.steps = [];
                    this.moved = false;
                    this.animating = false
                },
                zoom: function(t, n, r, i) {
                    var s = this,
                        o = r / s.scale;
                    if (!s.options.useTransform)
                        return;
                    s.zoomed = true;
                    i = i === undefined ? 200 : i;
                    t = t - s.wrapperOffsetLeft - s.x;
                    n = n - s.wrapperOffsetTop - s.y;
                    s.x = t - t * o + s.x;
                    s.y = n - n * o + s.y;
                    s.scale = r;
                    s.refresh();
                    s.x = s.x > 0 ? 0 : s.x < s.maxScrollX ? s.maxScrollX : s.x;
                    s.y = s.y > s.minScrollY ? s.minScrollY : s.y < s.maxScrollY ? s.maxScrollY : s.y;
                    s.scroller.style[f] = i + "ms";
                    s.scroller.style[u] = "translate(" + s.x + "px," + s.y + "px) scale(" + r + ")" + L;
                    s.zoomed = false
                },
                isReady: function() {
                    return !this.moved && !this.zoomed && !this.animating
                }
            };
            i = null;
            e.iScroll = A;
            $.IScroll = A
        })(window, document)
    },
    392: function(e, t, n) {
        $.provide("ptouch.product.MiniDetail");
        n(300);
        n(393);
        n(394);
        n(389);
        n(395);
        n(397);
        n(398);
        n(399);
        ptouch.product.MiniDetail = function(e, t, n, r, i, s) {
            this.page = e || "";
            this.productId = t || "";
            this.orderId = n || "";
            this.showFooter = r || false;
            this.title = i || "购买须知";
            this.isIphoneX = s;
            this.url = ptouch.API_GET_PRODETAIL;
            this.loadingElem_ = $('<div class="mp-loading-container"><span>数据加载中，请稍候...</span></div>');
            this.refreshElem_ = $('<a mp-role="refresh">重试</a>');
            this.introData_ = {};
            this.dock = new ptouch.Dock;
            this.dock.render($("#main-page"), true);
            this.dock.setHeader(this.title);
            this.dock.show()
        };
        $.extend(ptouch.product.MiniDetail.prototype, {
            init: function() {
                this.attachEvent();
                this.getData()
            },
            getData: function() {
                this.dock.setContent(this.loadingElem_);
                $.ajax({
                    type: "get",
                    dataType: "json",
                    data: {
                        productId: this.productId,
                        orderId: this.orderId,
                        page: this.page
                    },
                    url: this.url,
                    success: this.handleGetProductSuccess,
                    error: this.handleGetProductError,
                    timeout: 1e4,
                    context: this
                })
            },
            attachEvent: function() {
                this.refreshElem_.listen("click", this.getData, this)
            },
            handleGetProductSuccess: function(t) {
                if (t.ret) {
                    this.introData_ = this.decorateIntroData(t.data);
                    this.setProductDetailIntro(this.introData_)
                } else {
                    this.dock.setContent(t.errmsg)
                }
            },
            handleGetProductError: function() {
                var t = $('<div class="mp-error-container">请求失败，请</div>');
                t.append(this.refreshElem_);
                this.dock.setContent(t)
            },
            setProductDetailIntro: function(t) {
                this.dock.setHeader(QTMPL.minititle.render(t));
                var n = this.dock.headerElem.height() ? this.dock.headerElem.height() + 90 : 190;
                this.dock.setContent(QTMPL.miniproddetail.render({
                    introData: t,
                    height: $(window).height() - n
                }));
                if (t.showBookBtn && this.showFooter) {
                    this.dock.element.append($(QTMPL.minibookarea.render(t)));
                    this.bookBtn = this.dock.element.find('[mp-role="booking-link"]');
                    this.bookBtn.listen("click", this.handleClickBookBtn, this);
                    this.noRefundInfoBtn = this.dock.element.role("noRefundInfoBtn");
                    this.noRefundInfoBtn.listen("click", this.handleNoRefundInfoBtnClick, this);
                    this.initQchat(t);
                    if (this.isIphoneX) {
                        $(".mpw-dock").css("padding-bottom", ".68rem");
                        $(".mpm-fixbooking-con").css("bottom", ".68rem")
                    }
                }
                this.licenseBtn = this.dock.element.find('[mp-role="mpLicense"]');
                if (this.licenseBtn.length > 0) {
                    this.licenseBtn.listen("click", this.handleShowLicense, this)
                }
                var r = this.dock.element.role("productFeature");
                r && r.listen("click", this.handleClickProductFeature, this);
                this.risktip = (new ptouch.product.RiskTip($.role("mpMiniTicketContent"))).init()
            },
            handleClickProductFeature: function(t) {
                var n = this.productId || this.productId_ || "";
                var r = {
                    url: "//touch.piao.qunar.com/touch/product/showProductFeature.htm?productId=" + n,
                    type: "navibar-normal",
                    navigation: {
                        title: {
                            style: "text",
                            text: "产品特色"
                        }
                    }
                };
                if (ptouch.page && ptouch.page.Util && ptouch.page.Util.openWebView) {
                    ptouch.page.Util.openWebView(r, this.getRunOn())
                } else {
                    location.href = location.protocol + r.url
                }
            },
            getRunOn: function() {
                var t = navigator.userAgent.toLocaleLowerCase();
                if (t.indexOf("micromessenger") > -1) {
                    return "weixin"
                }
                var n = t.match(/(qunar[a-z]+)\/(\d+)/);
                if (n && n.length) {
                    return "app"
                } else {
                    return "touch"
                }
            },
            handleShowLicense: function(t) {
                var n = $(t.currentTarget).attr("data-supplierid");
                var r = "https://piao.qunar.com/touch/supplierInfo.htm?supplierId=" + n;
                var i = this.getRunOn();
                if (i !== "app") {
                    window.open(r)
                } else {
                    ptouch.page.Util.openWebView({
                        type: "navibar-normal",
                        url: r,
                        navigation: {
                            title: {
                                style: "text",
                                text: "代理商信息"
                            }
                        }
                    }, i)
                }
            },
            handleClickBookBtn: function(t) {
                t.preventDefault();
                $(this).trigger(new $.Event("clickBookBtn", {
                    productId: this.productId
                }));
                this.close()
            },
            handleNoRefundInfoBtnClick: function() {
                var t = this.dock.element.role("noRefundInfo");
                if (!this.isNoRefundInfoShown) {
                    this.isNoRefundInfoShown = true;
                    this.noRefundInfoBtn.html("&#xf3ca;");
                    t.show()
                } else {
                    this.isNoRefundInfoShown = false;
                    this.noRefundInfoBtn.html("&#xf3cb;");
                    t.hide()
                }
            },
            initQchat: function(t) {
                var n = t.qchat;
                if (n) {
                    new ptouch.Qchat($(".qchat-button"), n.businessId, t.encryptSupplierId, n.serviceType, this.productId)
                }
            },
            close: function() {
                this.dock.hide()
            },
            show: function() {
                this.dock.show()
            },
            decorateIntroData: function(t) {
                var t = $.extend({}, t),
                    n = t.activitys || [],
                    r = t.infos || {},
                    i = [{
                        infosGroup: []
                    }];
                for (var s = 0, o = n.length; s < o; s++) {
                    if (n[s].type == 9) {
                        n[s].limitTime = true
                    } else {
                        n[s].limitTime = false
                    }
                }
                for (var u = 0, a = r.length; u < a; u++) {
                    var f = r[u];
                    f.content = f.content.replace(/\r*\n/g, "<br />");
                    if (f.typeSign) {
                        if (f.displayType == 0) {
                            i[0].infosGroup.push(f)
                        } else {
                            f.notGroup = true;
                            i.push(f)
                        }
                        f.single = true
                    } else {
                        f.single = false
                    }
                    if (f.type == 13) {
                        f.isIcon = true;
                        if (f.typeName == "不可退") {
                            f.notRefund = true
                        }
                    }
                }
                t.activitys = n;
                t.infos = r;
                t.infosSingle = i;
                if (t.marketingActivityList && t.marketingActivityList.length > 0) {
                    t.hasMarketingActivity = true
                }
                if (t.bookinfos.enterGardenDescription && t.bookinfos.enterGardenDescription.enterType && t.bookinfos.enterGardenDescription.enterType.contents) {
                    var l = t.bookinfos.enterGardenDescription.enterType.contents;
                    for (var c = 0; c < l.length; c++) {
                        if (l[c].contents && l[c].contents.length > 0) {
                            for (var h = 0; h < l[c].contents.length; h++) {
                                if (!l[c].innerContents) {
                                    l[c].innerContents = []
                                }
                                l[c].innerContents.push(l[c].contents[h])
                            }
                        }
                    }
                }
                if (typeof t.payWay != "undefined" && typeof t.qunarPrice != "undefined") {
                    switch (t.payWay) {
                        case "PREPAY":
                            t.showBookBtn = true;
                            t.payWayStr = "在线支付";
                            break;
                        case "CASHPAY":
                            t.showBookBtn = true;
                            t.pwaWayStr = "景区支付";
                            break
                    }
                }
                return t
            }
        })
    },
    393: function(e, t) {
        $.provide("ptouch.Dock");
        ptouch.Dock = function(e) {
            if (!ptouch.Dock.mainPageElement_) {
                ptouch.Dock.mainPageElement_ = $("#main-page")
            }
            if (!e) {
                e = "page-" + ++$.guid
            }
            this.id_ = e;
            $(document).listen("closeAllDock", function(e) {
                this.setVisible(false)
            }, this)
        };
        ptouch.Dock.prototype.id_ = "";
        ptouch.Dock.prototype.visible_ = false;
        ptouch.Dock.prototype.closeback_ = false;
        ptouch.Dock.prototype.element = null;
        ptouch.Dock.prototype.headerElem = null;
        ptouch.Dock.prototype.contentElem = null;
        ptouch.Dock.prototype.animateDuration_ = 200;
        ptouch.Dock.prototype.decorate = function() {};
        ptouch.Dock.prototype.getId = function(e) {
            return this.id_
        };
        ptouch.Dock.prototype.setId = function(e) {
            this.element && this.element.attr("id", this.id_);
            this.id_ = e
        };
        ptouch.Dock.prototype.setCloseBack = function(e) {
            this.closeback_ = e
        };
        ptouch.Dock.prototype.render = function(e, t) {
            this.createDom(t);
            this.parentElem = e || "body";
            this.element.appendTo(this.parentElem);
            this.mask && this.mask.appendTo(this.parentElem);
            this.bindEvents()
        };
        ptouch.Dock.prototype.createDom = function(e) {
            this.element = $('<div id="' + this.id_ + '" class="mpw-dock">').css({
                display: this.visible_ ? "block" : "none"
            });
            this.element.html('<div class="mpw-dock-header mpf-border-bottom mpf-border-top" mp-role="dockHeader"></div>' + '<div class="mpw-dock-content" mp-role="dockContent"></div>' + '<div class="mpg-iconfont mpw-dock-close" mp-role="closeButton">&#xf3f4;</div>');
            if (e) {
                this.mask = $('<div class="mpg-mask"></div>')
            }
            this.closeBtn = this.element.role("closeButton");
            this.headerElem = this.element.role("dockHeader");
            this.contentElem = this.element.role("dockContent");
            if ($.env.scheme && /(m\/10.3|m\/10.6)/.test($.env.ua)) {
                this.element.addClass("mp-iniphonex")
            }
        };
        ptouch.Dock.prototype.bindEvents = function() {
            this.closeBtn.listen("click", this.handleCloseClick, this);
            if (this.mask) {
                this.mask.listen("click", this.handleCloseClick, this)
            }
        };
        ptouch.Dock.prototype.setHeader = function(e) {
            e && this.headerElem.html(e);
            this.headerElem.show()
        };
        ptouch.Dock.prototype.replaceHeader = function(e) {
            e = $(e);
            this.headerElem.replaceWith(e);
            this.headerElem = e;
            this.headerElem.show()
        };
        ptouch.Dock.prototype.setContent = function(e) {
            this.contentElem && this.contentElem.html(e)
        };
        ptouch.Dock.prototype.handleBackClick = function() {
            this.setVisible(false)
        };
        ptouch.Dock.prototype.handleCloseClick = function() {
            if (this.closeback_) {
                this.setVisible(false)
            } else {
                this.setVisible(false);
                $(this).trigger("closeOneDock")
            }
        };
        ptouch.Dock.prototype.isVisible = function() {
            return this.visible_
        };
        ptouch.Dock.prototype.setVisible = function(e) {
            if (this.visible_ != e) {
                if (this.element) {
                    if (e) {
                        this.element.show().addClass("mpw-dock-fadein");
                        this.mask && this.mask.show()
                    } else {
                        this.element.removeClass("mpw-dock-fadein");
                        this.mask && this.mask.hide()
                    }
                }
                this.visible_ = e
            }
        };
        ptouch.Dock.prototype.show = function() {
            this.setVisible(true)
        };
        ptouch.Dock.prototype.hide = function() {
            this.setVisible(false)
        };
        ptouch.Dock.prototype.getElement = function() {
            return this.element
        };
        ptouch.Dock.prototype.getHeaderElement = function() {
            return this.headerElem
        };
        ptouch.Dock.prototype.getContentElement = function() {
            return this.contentElem
        }
    },
    394: function(e, t) {
        $.provide("ptouch.Qchat");
        ptouch.Qchat = function(e, t, n, r, i) {
            this.qchatElem = e;
            this.setQchatParam(t, n, r, i);
            this.importJS()
        };
        ptouch.Qchat.prototype.setQchatParam = function(e, t, n, r) {
            if (!e || !t) {
                this.qchatElem.hide()
            }
            if (typeof QNR == "undefined") {
                window.QNR = {}
            }
            window.QCHAT = {
                businessId: e,
                busiSupplierId: t,
                service_type: n,
                productId: r
            }
        };
        ptouch.Qchat.prototype.init = function() {
            var e = this;
            var t = setInterval(function() {
                if (window.QNR.TouchQChat) {
                    window.QNR.TouchQChat.init({
                        offlineCallback: function() {
                            e.qchatElem.show();
                            return true
                        },
                        onlineCallback: function() {
                            e.qchatElem.show()
                        },
                        hasNoWaiter: function() {
                            e.qchatElem.hide()
                        }
                    });
                    clearInterval(t)
                }
            }, 100)
        };
        ptouch.Qchat.prototype.importJS = function() {
            var e = document.createElement("script");
            e.type = "text/javascript";
            e.src = "//q.qunarzz.com/qunarchat_web/prd/scripts/page/common/touchQchat.js?" + (new Date).getTime();
            document.head.appendChild(e);
            var t = this;
            e.onload = function() {
                t.init()
            }
        }
    },
    395: function(e, t, n) {
        $.provide("ptouch.product.RiskTip");
        n(396);
        ptouch.product.RiskTip = function(e) {
            this.prevCon = e
        };
        $.extend(ptouch.product.RiskTip.prototype, {
            init: function() {
                this.render();
                this.attachEvent()
            },
            render: function() {
                var t = QTMPL.risktip.render({});
                this.prevCon.after($(t))
            },
            attachEvent: function() {
                this.foldArea = $.role("riskTipArea");
                this.foldSwitchBtn = $.role("riskTipUnfoldArea");
                this.foldSwitchBtn.listen("click", this.handleFoldSwitchTip, this)
            },
            handleFoldSwitchTip: function(t) {
                var n = $(t.currentTarget);
                if (n.attr("data-fold") !== "true") {
                    this.foldArea.removeClass("mp-risktip-con-fold");
                    n.attr("data-fold", "true");
                    n.find(".mp-risktip-arrowright").html("E")
                } else {
                    this.foldArea.addClass("mp-risktip-con-fold");
                    n.attr("data-fold", "false");
                    n.find(".mp-risktip-arrowright").html("F")
                }
            },
            getRunOn: function() {
                var t = navigator.userAgent.toLocaleLowerCase();
                if (t.indexOf("micromessenger") > -1) {
                    return "weixin"
                }
                var n = t.match(/(qunar[a-z]+)\/(\d+)/);
                if (n && n.length) {
                    return "app"
                } else {
                    return "touch"
                }
            },
            handleShowLicense: function(t) {
                var n = $(t.currentTarget).attr("data-supplierid");
                var r = "https://piao.qunar.com/touch/supplierInfo.htm?supplierId=" + n;
                var i = this.getRunOn();
                if (i !== "app") {
                    window.open(r)
                } else {
                    ptouch.page.Util.openWebView({
                        type: "navibar-normal",
                        url: r,
                        navigation: {
                            title: {
                                style: "text",
                                text: "营业执照信息"
                            }
                        }
                    }, i)
                }
            },
            handleClickBookBtn: function(t) {},
            handleNoRefundInfoBtnClick: function() {}
        })
    },
    396: function(e, t, n) {
        if (typeof window.QTMPL === "undefined")
            window.QTMPL = {};
        window.QTMPL["risktip"] = new window.Hogan.Template({
            code: function(e, t, n) {
                var r = this;
                r.b(n = n || "");
                r.b("<style>\r");
                r.b("\n" + n);
                r.b("    .mp-risktip-con {\r");
                r.b("\n" + n);
                r.b("        background-color: #fff;\r");
                r.b("\n" + n);
                r.b("        margin: .2rem 0;\r");
                r.b("\n" + n);
                r.b("        padding: 0 .24rem;\r");
                r.b("\n" + n);
                r.b("        color: #616161;\r");
                r.b("\n" + n);
                r.b("    }\r");
                r.b("\n" + n);
                r.b("    .mp-risktip-con-fold {\r");
                r.b("\n" + n);
                r.b("        height: 1rem;\r");
                r.b("\n" + n);
                r.b("        overflow: hidden;\r");
                r.b("\n" + n);
                r.b("    }\r");
                r.b("\n" + n);
                r.b("    .mp-risktip-titlecon {\r");
                r.b("\n" + n);
                r.b("        height: 1rem;\r");
                r.b("\n" + n);
                r.b("        line-height: 1rem;\r");
                r.b("\n" + n);
                r.b("        color: #212121;\r");
                r.b("\n" + n);
                r.b("        font-size:.34rem;\r");
                r.b("\n" + n);
                r.b("    }\r");
                r.b("\n" + n);
                r.b("    .mp-risktip-arrowright {\r");
                r.b("\n" + n);
                r.b("        float: right;\r");
                r.b("\n" + n);
                r.b("        height: 1rem;\r");
                r.b("\n" + n);
                r.b("        line-height: 1rem;\r");
                r.b("\n" + n);
                r.b("        color: #9e9e9e;\r");
                r.b("\n" + n);
                r.b("        font-size: .24rem;\r");
                r.b("\n" + n);
                r.b("    }\r");
                r.b("\n" + n);
                r.b("    .mp-risktip-content {\r");
                r.b("\n" + n);
                r.b("        line-height: .4rem;\r");
                r.b("\n" + n);
                r.b("        margin-bottom: .3rem;\r");
                r.b("\n" + n);
                r.b("        display: inline-block;\r");
                r.b("\n" + n);
                r.b("    }\r");
                r.b("\n" + n);
                r.b("    .mp-risklink {\r");
                r.b("\n" + n);
                r.b("        color:#00bcd4;\r");
                r.b("\n" + n);
                r.b("        text-decoration: none;\r");
                r.b("\n" + n);
                r.b("    }\r");
                r.b("\n" + n);
                r.b("</style>\r");
                r.b("\n" + n);
                r.b('<div class="mp-risktip-con mp-risktip-con-fold" mp-role="riskTipArea">\r');
                r.b("\n" + n);
                r.b('    <div class="mp-risktip-titlecon" mp-role="riskTipUnfoldArea">\r');
                r.b("\n" + n);
                r.b('        温馨提示<span class="mp-risktip-arrowright mpg-iconfont">&#xf3cc;</span>\r');
                r.b("\n" + n);
                r.b("    </div>\r");
                r.b("\n" + n);
                r.b('    <div class="mp-risktip-content">\r');
                r.b("\n" + n);
                r.b('       1.去哪儿网提醒您注意人身安全，参加有一定危险性的室内或户外活动（如跳伞、潜水、滑雪等）前，请务必仔细阅读<a target="_blank" href="https://yun.qunar.com/uploads2/notice/20180801/HighRiskProjectWarning.pdf " class="mp-risklink" mp-role="riskLink">《风险提示》</a>。<br>2.为普及旅游安全知识及旅游文明公约，使您的旅程顺利圆满完成，特制定<a target="_blank" href="https://yun.qunar.com/uploads2/notice/20180711/travelnotes.pdf " class="mp-risklink" mp-role="riskLink">《去哪儿网旅游安全手册》</a>，请您认真阅读并切实遵守。\r');
                r.b("\n" + n);
                r.b("    </div>\r");
                r.b("\n" + n);
                r.b("</div>");
                return r.fl()
            },
            partials: {},
            subs: {}
        }.code);
        if (true)
            e.exports = window.QTMPL["risktip"]
    },
    397: function(e, t, n) {
        if (typeof window.QTMPL === "undefined")
            window.QTMPL = {};
        window.QTMPL["minititle"] = new window.Hogan.Template({
            code: function(e, t, n) {
                var r = this;
                r.b(n = n || "");
                r.b('<div class="mp-prdinfo-title" mp-role="layerTitle">\r');
                r.b("\n" + n);
                r.b('    <h2 class="mp-prdinfo-prdname">');
                r.b(r.v(r.f("ticketName", e, t, 0)));
                r.b("</h2>\r");
                r.b("\n" + n);
                r.b('    <div class="mp-prdinfo-headdetail">\r');
                r.b("\n" + n);
                r.b('        <div class="mp-prdinfo-headtags">\r');
                r.b("\n" + n);
                if (r.s(r.f("hasMarketingActivity", e, t, 1), e, t, 0, 227, 963, "{{ }}")) {
                    r.rs(e, t, function(e, t, r) {
                        r.b("		    <div>\r");
                        r.b("\n" + n);
                        r.b('		        <div style="zoom:1;overflow:hidden;">\r');
                        r.b("\n" + n);
                        if (r.s(r.f("marketingActivityList", e, t, 1), e, t, 0, 327, 897, "{{ }}")) {
                            r.rs(e, t, function(e, t, r) {
                                r.b('		        <div class="mp-prdintro-item" style="margin-top:.2rem;margin-bottom:0;">\r');
                                r.b("\n" + n);
                                r.b('		            <div class="mp-prdintro-icon mp-prdintro-tag">\r');
                                r.b("\n" + n);
                                r.b('		                    <span class="mp-ticket-tag mp-ticket-redpacket" style="position:relative;padding: 0 .1rem;text-align:center;border-color: #ffb1b2;">');
                                r.b(r.v(r.d("activity.label", e, t, 0)));
                                r.b("</span>\r");
                                r.b("\n" + n);
                                r.b("		            </div>\r");
                                r.b("\n" + n);
                                r.b('		            <div class="mp-prdintro-desc">\r');
                                r.b("\n" + n);
                                r.b('		                <div style="font-size:.24rem;color:#616161;">\r');
                                r.b("\n" + n);
                                r.b("		                    ");
                                r.b(r.v(r.f("desc", e, t, 0)));
                                r.b("\r");
                                r.b("\n" + n);
                                r.b("		                </div>\r");
                                r.b("\n" + n);
                                r.b("		            </div>\r");
                                r.b("\n" + n);
                                r.b("		        </div>\r");
                                r.b("\n" + n)
                            });
                            e.pop()
                        }
                        r.b("		        </div>\r");
                        r.b("\n" + n);
                        r.b("		    </div>\r");
                        r.b("\n" + n)
                    });
                    e.pop()
                }
                r.b("        </div>\r");
                r.b("\n" + n);
                r.b("    </div>\r");
                r.b("\n" + n);
                r.b("</div>");
                return r.fl()
            },
            partials: {},
            subs: {}
        }.code);
        if (true)
            e.exports = window.QTMPL["minititle"]
    },
    398: function(e, t, n) {
        if (typeof window.QTMPL === "undefined")
            window.QTMPL = {};
        window.QTMPL["miniproddetail"] = new window.Hogan.Template({
            code: function(e, t, n) {
                var r = this;
                r.b(n = n || "");
                r.b("<style>\r");
                r.b("\n" + n);
                r.b(".mpw-dock-header::after{\r");
                r.b("\n" + n);
                r.b("    content: '';\r");
                r.b("\n" + n);
                r.b("    display: block;\r");
                r.b("\n" + n);
                r.b("    left: 0;\r");
                r.b("\n" + n);
                r.b("    width: 100%;\r");
                r.b("\n" + n);
                r.b("    height: .02rem;\r");
                r.b("\n" + n);
                r.b("    transform: scaleY(.51);\r");
                r.b("\n" + n);
                r.b("    background: #c9cccd;\r");
                r.b("\n" + n);
                r.b("}\r");
                r.b("\n" + n);
                r.b("</style>\r");
                r.b("\n" + n);
                r.b("\r");
                r.b("\n" + n);
                if (r.s(r.f("introData", e, t, 1), e, t, 0, 211, 11220, "{{ }}")) {
                    r.rs(e, t, function(e, t, r) {
                        if (r.s(r.f("infosSingle", e, t, 1), e, t, 0, 233, 2339, "{{ }}")) {
                            r.rs(e, t, function(e, t, r) {
                                if (r.s(r.d("infosGroup.length", e, t, 1), e, t, 0, 265, 699, "{{ }}")) {
                                    r.rs(e, t, function(e, t, r) {
                                        if (r.s(r.f("infosGroup", e, t, 1), e, t, 0, 294, 674, "{{ }}")) {
                                            r.rs(e, t, function(e, t, r) {
                                                r.b('            <div class="mp-group-con mpf-border-bottom">\r');
                                                r.b("\n" + n);
                                                r.b('                <div class="mp-prdintro-item mp-prdintro-boon">\r');
                                                r.b("\n" + n);
                                                r.b('                    <div class="mp-prdintro-icon">');
                                                r.b(r.v(r.f("typeSign", e, t, 0)));
                                                r.b("</div>\r");
                                                r.b("\n" + n);
                                                r.b('                    <div class="mp-prdintro-desc">\r');
                                                r.b("\n" + n);
                                                r.b("                        <div>");
                                                r.b(r.t(r.f("content", e, t, 0)));
                                                r.b("</div>\r");
                                                r.b("\n" + n);
                                                r.b("                    </div>\r");
                                                r.b("\n" + n);
                                                r.b("                </div>\r");
                                                r.b("\n" + n);
                                                r.b("            </div>\r");
                                                r.b("\n" + n)
                                            });
                                            e.pop()
                                        }
                                    });
                                    e.pop()
                                }
                                if (!r.s(r.f("infosGroup", e, t, 1), e, t, 1, 0, 0, "")) {
                                    if (r.s(r.f("notGroup", e, t, 1), e, t, 0, 773, 2295, "{{ }}")) {
                                        r.rs(e, t, function(e, t, r) {
                                            r.b('            <div class="mp-group-con mpf-border-bottom">\r');
                                            r.b("\n" + n);
                                            r.b('                <div class="mp-prdintro-item">\r');
                                            r.b("\n" + n);
                                            r.b('                    <div class="mp-prdintro-icon');
                                            if (r.s(r.f("isIcon", e, t, 1), e, t, 0, 940, 956, "{{ }}")) {
                                                r.rs(e, t, function(e, t, n) {
                                                    n.b(" mp-prdintro-tag")
                                                });
                                                e.pop()
                                            }
                                            r.b('">\r');
                                            r.b("\n" + n);
                                            if (r.s(r.f("isIcon", e, t, 1), e, t, 0, 1006, 1435, "{{ }}")) {
                                                r.rs(e, t, function(e, t, r) {
                                                    if (r.s(r.f("notRefund", e, t, 1), e, t, 0, 1050, 1203, "{{ }}")) {
                                                        r.rs(e, t, function(e, t, r) {
                                                            r.b('                            <span class="mpg-iconfont mp-prdinfo-tag-icon mp-prdinfo-invalid">&#xe159;</span>');
                                                            r.b(r.v(r.f("typeSign", e, t, 0)));
                                                            r.b("\r");
                                                            r.b("\n" + n)
                                                        });
                                                        e.pop()
                                                    }
                                                    if (!r.s(r.f("notRefund", e, t, 1), e, t, 1, 0, 0, "")) {
                                                        r.b('                            <span class="mpg-iconfont mp-prdinfo-tag-icon">&#xe15a;</span>');
                                                        r.b(r.v(r.f("typeSign", e, t, 0)));
                                                        r.b("\r");
                                                        r.b("\n" + n)
                                                    }
                                                });
                                                e.pop()
                                            }
                                            if (!r.s(r.f("isIcon", e, t, 1), e, t, 1, 0, 0, "")) {
                                                r.b("                            ");
                                                r.b(r.v(r.f("typeSign", e, t, 0)));
                                                r.b("\r");
                                                r.b("\n" + n)
                                            }
                                            r.b("                    </div>\r");
                                            r.b("\n" + n);
                                            r.b('                    <div class="mp-prdintro-desc">\r');
                                            r.b("\n" + n);
                                            r.b("                        <div ");
                                            if (r.s(r.f("notRefund", e, t, 1), e, t, 0, 1687, 1721, "{{ }}")) {
                                                r.rs(e, t, function(e, t, n) {
                                                    n.b('class="mp-prdintro-desc-notrefund"')
                                                });
                                                e.pop()
                                            }
                                            r.b(">\r");
                                            r.b("\n" + n);
                                            r.b("                            ");
                                            r.b(r.t(r.f("content", e, t, 0)));
                                            r.b("\r");
                                            r.b("\n" + n);
                                            r.b("                        </div>\r");
                                            r.b("\n" + n);
                                            if (r.s(r.f("notRefund", e, t, 1), e, t, 0, 1850, 1992, "{{ }}")) {
                                                r.rs(e, t, function(e, t, r) {
                                                    r.b("                            ");
                                                    if (r.s(r.f("desc", e, t, 1), e, t, 0, 1889, 1957, "{{ }}")) {
                                                        r.rs(e, t, function(e, t, n) {
                                                            n.b('<div class="mp-notrefund-desc" mp-role="noRefundInfo">');
                                                            n.b(n.v(n.f("desc", e, t, 0)));
                                                            n.b("</div>")
                                                        });
                                                        e.pop()
                                                    }
                                                    r.b("\r");
                                                    r.b("\n" + n)
                                                });
                                                e.pop()
                                            }
                                            r.b("                    </div>\r");
                                            r.b("\n" + n);
                                            if (r.s(r.f("notRefund", e, t, 1), e, t, 0, 2070, 2223, "{{ }}")) {
                                                r.rs(e, t, function(e, t, r) {
                                                    r.b("                        ");
                                                    if (r.s(r.f("desc", e, t, 1), e, t, 0, 2105, 2192, "{{ }}")) {
                                                        r.rs(e, t, function(e, t, n) {
                                                            n.b('<div class="mpg-iconfont mp-notrefund-morebtn" mp-role="noRefundInfoBtn">&#xf3cb;</div>')
                                                        });
                                                        e.pop()
                                                    }
                                                    r.b("\r");
                                                    r.b("\n" + n)
                                                });
                                                e.pop()
                                            }
                                            r.b("                </div>\r");
                                            r.b("\n" + n);
                                            r.b("            </div>\r");
                                            r.b("\n" + n)
                                        });
                                        e.pop()
                                    }
                                }
                            });
                            e.pop()
                        }
                        r.b("    \r");
                        r.b("\n" + n);
                        r.b('    <div style="');
                        if (r.s(r.f("showBookBtn", e, t, 1), e, t, 0, 2395, 2415, "{{ }}")) {
                            r.rs(e, t, function(e, t, n) {
                                n.b("padding-bottom:1rem;")
                            });
                            e.pop()
                        }
                        r.b("height:");
                        r.b(r.v(r.f("height", e, t, 0)));
                        r.b('px;overflow-y:auto;">\r');
                        r.b("\n" + n);
                        r.b('    <div class="mp-productfeature-con" mp-role=\'productFeature\' style="');
                        if (!r.s(r.f("featureSwitch", e, t, 1), e, t, 1, 0, 0, "")) {
                            r.b("display:none")
                        }
                        r.b('">\r');
                        r.b("\n" + n);
                        r.b('        <div class="mp-productfeature-titlecon">\r');
                        r.b("\n" + n);
                        r.b("            产品特色\r");
                        r.b("\n" + n);
                        r.b('            <span class="mp-productfeature-arrowdown mpg-iconfont">&#xf3cc;</span>\r');
                        r.b("\n" + n);
                        r.b("        </div>\r");
                        r.b("\n" + n);
                        r.b("    </div>\r");
                        r.b("\n" + n);
                        r.b('    <div class="mp-group-con mp-mini-content" mp-role="mpMiniContent">\r');
                        r.b("\n" + n);
                        if (r.s(r.f("bookinfos", e, t, 1), e, t, 0, 2868, 11178, "{{ }}")) {
                            r.rs(e, t, function(e, t, r) {
                                r.b('        <div class="mp-prddetail-group">\r');
                                r.b("\n" + n);
                                r.b('            <div class="mp-ticketcontent" mp-role="mpMiniTicketContent">\r');
                                r.b("\n" + n);
                                if (r.s(r.f("bookDescription", e, t, 1), e, t, 0, 3022, 3923, "{{ }}")) {
                                    r.rs(e, t, function(e, t, r) {
                                        r.b('                    <div class="mp-ticketcontent-item">\r');
                                        r.b("\n" + n);
                                        r.b('                        <p class="mp-ticketcontent-title">');
                                        r.b(r.v(r.d("titleInfo.title", e, t, 0)));
                                        r.b("</p>\r");
                                        r.b("\n" + n);
                                        if (r.s(r.f("contents", e, t, 1), e, t, 0, 3201, 3864, "{{ }}")) {
                                            r.rs(e, t, function(e, t, r) {
                                                r.b('                        <div class="mp-ticketcontent-line">\r');
                                                r.b("\n" + n);
                                                r.b('                            <div class="mp-ticketcontent-keyword">');
                                                r.b(r.v(r.f("title", e, t, 0)));
                                                r.b("</div>\r");
                                                r.b("\n" + n);
                                                r.b('                            <div class="mp-ticketcontent-con">\r');
                                                r.b("\n" + n);
                                                if (r.s(r.f("notice", e, t, 1), e, t, 0, 3454, 3679, "{{ }}")) {
                                                    r.rs(e, t, function(e, t, r) {
                                                        r.b('                                <div class="mp-ellipsis">\r');
                                                        r.b("\n" + n);
                                                        r.b('                                    <span class="mp-ticketcontent-light">');
                                                        r.b(r.v(r.f("notice", e, t, 0)));
                                                        r.b("</span>\r");
                                                        r.b("\n" + n);
                                                        r.b("                                </div>\r");
                                                        r.b("\n" + n)
                                                    });
                                                    e.pop()
                                                }
                                                r.b('                                <p class="mp-ticketcontent-desc">');
                                                r.b(r.t(r.f("desc", e, t, 0)));
                                                r.b("</p>\r");
                                                r.b("\n" + n);
                                                r.b("                            </div>\r");
                                                r.b("\n" + n);
                                                r.b("                        </div>\r");
                                                r.b("\n" + n)
                                            });
                                            e.pop()
                                        }
                                        r.b("                    </div>\r");
                                        r.b("\n" + n)
                                    });
                                    e.pop()
                                }
                                r.b("\r");
                                r.b("\n" + n);
                                if (r.s(r.f("enterGardenDescription", e, t, 1), e, t, 0, 3990, 6659, "{{ }}")) {
                                    r.rs(e, t, function(e, t, r) {
                                        r.b('                    <div class="mp-ticketcontent-item">\r');
                                        r.b("\n" + n);
                                        r.b('                        <p class="mp-ticketcontent-title">');
                                        r.b(r.v(r.d("enterGardenTitle.title", e, t, 0)));
                                        r.b("</p>\r");
                                        r.b("\n" + n);
                                        if (r.s(r.f("enterType", e, t, 1), e, t, 0, 4177, 6013, "{{ }}")) {
                                            r.rs(e, t, function(e, t, r) {
                                                r.b('                            <div class="mp-ticketcontent-line">\r');
                                                r.b("\n" + n);
                                                r.b('                                <div class="mp-ticketcontent-keyword">');
                                                r.b(r.v(r.f("title", e, t, 0)));
                                                r.b("</div>\r");
                                                r.b("\n" + n);
                                                r.b('                                <div class="mp-ticketcontent-con">\r');
                                                r.b("\n" + n);
                                                if (r.s(r.f("titleInfo", e, t, 1), e, t, 0, 4449, 4726, "{{ }}")) {
                                                    r.rs(e, t, function(e, t, r) {
                                                        r.b('                                    <div class="mp-ticketcontent-lightcon mp-ellipsis">\r');
                                                        r.b("\n" + n);
                                                        r.b('                                        <span class="mp-ticketcontent-light">');
                                                        r.b(r.v(r.d("titleInfo.notice", e, t, 0)));
                                                        r.b("</span>\r");
                                                        r.b("\n" + n);
                                                        r.b("                                    </div>\r");
                                                        r.b("\n" + n)
                                                    });
                                                    e.pop()
                                                }
                                                r.b("                                </div>\r");
                                                r.b("\n" + n);
                                                r.b("                            </div>\r");
                                                r.b("\n" + n);
                                                if (r.s(r.f("contents", e, t, 1), e, t, 0, 4859, 5974, "{{ }}")) {
                                                    r.rs(e, t, function(e, t, r) {
                                                        if (r.s(r.d("titleInfo.iconUrl", e, t, 1), e, t, 0, 4915, 5260, "{{ }}")) {
                                                            r.rs(e, t, function(e, t, r) {
                                                                r.b('                                    <p class="mp-ticketcontent-sepline">\r');
                                                                r.b("\n" + n);
                                                                r.b('                                        <span class="mp-ticketcontent-linetag"><img class="mp-ticketcontent-innericon" src="');
                                                                r.b(r.v(r.d("titleInfo.iconUrl", e, t, 0)));
                                                                r.b('"/></span>');
                                                                r.b(r.v(r.d("titleInfo.title", e, t, 0)));
                                                                r.b(r.t(r.d("titleInfo.desc", e, t, 0)));
                                                                r.b("\r");
                                                                r.b("\n" + n);
                                                                r.b("                                    </p>\r");
                                                                r.b("\n" + n)
                                                            });
                                                            e.pop()
                                                        }
                                                        if (!r.s(r.d("titleInfo.iconUrl", e, t, 1), e, t, 1, 0, 0, "")) {
                                                            r.b('                                    <p class="mp-ticketcontent-desc">');
                                                            r.b(r.v(r.d("titleInfo.title", e, t, 0)));
                                                            r.b(r.t(r.d("titleInfo.desc", e, t, 0)));
                                                            r.b("</p>\r");
                                                            r.b("\n" + n)
                                                        }
                                                        if (r.s(r.f("innerContents", e, t, 1), e, t, 0, 5559, 5926, "{{ }}")) {
                                                            r.rs(e, t, function(e, t, r) {
                                                                r.b('                                    <p class="mp-ticketcontent-sepline" style="padding-left:.6rem;">\r');
                                                                r.b("\n" + n);
                                                                r.b('                                    <span class="mp-ticketcontent-linetag" style="padding-left:.2rem;"><img class="mp-ticketcontent-innericon" src="');
                                                                r.b(r.v(r.f("iconUrl", e, t, 0)));
                                                                r.b('"/></span>');
                                                                r.b(r.v(r.f("title", e, t, 0)));
                                                                r.b(r.t(r.f("desc", e, t, 0)));
                                                                r.b("\r");
                                                                r.b("\n" + n);
                                                                r.b("                                    </p>\r");
                                                                r.b("\n" + n)
                                                            });
                                                            e.pop()
                                                        }
                                                    });
                                                    e.pop()
                                                }
                                            });
                                            e.pop()
                                        }
                                        r.b("\r");
                                        r.b("\n" + n);
                                        if (r.s(r.f("supplierMessage", e, t, 1), e, t, 0, 6075, 6299, "{{ }}")) {
                                            r.rs(e, t, function(e, t, r) {
                                                r.b('                            <p class="mp-ticketcontent-line"><span class="mp-ticketcontent-keyword">');
                                                r.b(r.v(r.f("title", e, t, 0)));
                                                r.b("</span></p>\r");
                                                r.b("\n" + n);
                                                r.b('                            <p class="mp-ticketcontent-desc">');
                                                r.b(r.t(r.f("desc", e, t, 0)));
                                                r.b("</p>\r");
                                                r.b("\n" + n)
                                            });
                                            e.pop()
                                        }
                                        r.b("\r");
                                        r.b("\n" + n);
                                        if (r.s(r.f("sightOpenTime", e, t, 1), e, t, 0, 6365, 6589, "{{ }}")) {
                                            r.rs(e, t, function(e, t, r) {
                                                r.b('                            <p class="mp-ticketcontent-line"><span class="mp-ticketcontent-keyword">');
                                                r.b(r.v(r.f("title", e, t, 0)));
                                                r.b("</span></p>\r");
                                                r.b("\n" + n);
                                                r.b('                            <p class="mp-ticketcontent-desc">');
                                                r.b(r.t(r.f("desc", e, t, 0)));
                                                r.b("</p>\r");
                                                r.b("\n" + n)
                                            });
                                            e.pop()
                                        }
                                        r.b("\r");
                                        r.b("\n" + n);
                                        r.b("\r");
                                        r.b("\n" + n);
                                        r.b("\r");
                                        r.b("\n" + n);
                                        r.b("                    </div>\r");
                                        r.b("\n" + n)
                                    });
                                    e.pop()
                                }
                                r.b("\r");
                                r.b("\n" + n);
                                if (r.s(r.f("refundDescription", e, t, 1), e, t, 0, 6728, 7673, "{{ }}")) {
                                    r.rs(e, t, function(e, t, r) {
                                        r.b('                    <div class="mp-ticketcontent-item">\r');
                                        r.b("\n" + n);
                                        r.b('                        <p class="mp-ticketcontent-title">');
                                        r.b(r.v(r.d("titleInfo.title", e, t, 0)));
                                        r.b("</p>\r");
                                        r.b("\n" + n);
                                        if (r.s(r.f("contents", e, t, 1), e, t, 0, 6907, 7614, "{{ }}")) {
                                            r.rs(e, t, function(e, t, r) {
                                                r.b('                            <div class="mp-ticketcontent-line">\r');
                                                r.b("\n" + n);
                                                r.b('                                <div class="mp-ticketcontent-keyword">');
                                                r.b(r.v(r.f("title", e, t, 0)));
                                                r.b("</div>\r");
                                                r.b("\n" + n);
                                                r.b('                                <div class="mp-ticketcontent-con">\r');
                                                r.b("\n" + n);
                                                if (r.s(r.f("notice", e, t, 1), e, t, 0, 7176, 7417, "{{ }}")) {
                                                    r.rs(e, t, function(e, t, r) {
                                                        r.b('                                    <div class="mp-ellipsis">\r');
                                                        r.b("\n" + n);
                                                        r.b('                                        <span class="mp-ticketcontent-light">');
                                                        r.b(r.v(r.f("notice", e, t, 0)));
                                                        r.b("</span>\r");
                                                        r.b("\n" + n);
                                                        r.b("                                    </div>\r");
                                                        r.b("\n" + n)
                                                    });
                                                    e.pop()
                                                }
                                                r.b('                                    <p class="mp-ticketcontent-desc">');
                                                r.b(r.t(r.f("desc", e, t, 0)));
                                                r.b("</p>\r");
                                                r.b("\n" + n);
                                                r.b("                                </div>\r");
                                                r.b("\n" + n);
                                                r.b("                            </div>\r");
                                                r.b("\n" + n)
                                            });
                                            e.pop()
                                        }
                                        r.b("                    </div>\r");
                                        r.b("\n" + n)
                                    });
                                    e.pop()
                                }
                                r.b("\r");
                                r.b("\n" + n);
                                if (r.s(r.f("depositDescription", e, t, 1), e, t, 0, 7738, 8683, "{{ }}")) {
                                    r.rs(e, t, function(e, t, r) {
                                        r.b('                    <div class="mp-ticketcontent-item">\r');
                                        r.b("\n" + n);
                                        r.b('                        <p class="mp-ticketcontent-title">');
                                        r.b(r.v(r.d("titleInfo.title", e, t, 0)));
                                        r.b("</p>\r");
                                        r.b("\n" + n);
                                        if (r.s(r.f("contents", e, t, 1), e, t, 0, 7917, 8624, "{{ }}")) {
                                            r.rs(e, t, function(e, t, r) {
                                                r.b('                            <div class="mp-ticketcontent-line">\r');
                                                r.b("\n" + n);
                                                r.b('                                <div class="mp-ticketcontent-keyword">');
                                                r.b(r.v(r.f("title", e, t, 0)));
                                                r.b("</div>\r");
                                                r.b("\n" + n);
                                                r.b('                                <div class="mp-ticketcontent-con">\r');
                                                r.b("\n" + n);
                                                if (r.s(r.f("notice", e, t, 1), e, t, 0, 8186, 8427, "{{ }}")) {
                                                    r.rs(e, t, function(e, t, r) {
                                                        r.b('                                    <div class="mp-ellipsis">\r');
                                                        r.b("\n" + n);
                                                        r.b('                                        <span class="mp-ticketcontent-light">');
                                                        r.b(r.v(r.f("notice", e, t, 0)));
                                                        r.b("</span>\r");
                                                        r.b("\n" + n);
                                                        r.b("                                    </div>\r");
                                                        r.b("\n" + n)
                                                    });
                                                    e.pop()
                                                }
                                                r.b('                                    <p class="mp-ticketcontent-desc">');
                                                r.b(r.t(r.f("desc", e, t, 0)));
                                                r.b("</p>\r");
                                                r.b("\n" + n);
                                                r.b("                                </div>\r");
                                                r.b("\n" + n);
                                                r.b("                            </div>\r");
                                                r.b("\n" + n)
                                            });
                                            e.pop()
                                        }
                                        r.b("                    </div>\r");
                                        r.b("\n" + n)
                                    });
                                    e.pop()
                                }
                                r.b("\r");
                                r.b("\n" + n);
                                if (!r.s(r.f("feeOrderFront", e, t, 1), e, t, 1, 0, 0, "")) {
                                    if (r.s(r.f("usingDescription", e, t, 1), e, t, 0, 8787, 9055, "{{ }}")) {
                                        r.rs(e, t, function(e, t, r) {
                                            r.b('                        <div class="mp-ticketcontent-item">\r');
                                            r.b("\n" + n);
                                            r.b('                            <p class="mp-ticketcontent-title">');
                                            r.b(r.v(r.f("title", e, t, 0)));
                                            r.b("</p>\r");
                                            r.b("\n" + n);
                                            r.b('                            <p class="mp-ticketcontent-line">');
                                            r.b(r.t(r.f("desc", e, t, 0)));
                                            r.b("</p>\r");
                                            r.b("\n" + n);
                                            r.b("                        </div>\r");
                                            r.b("\n" + n)
                                        });
                                        e.pop()
                                    }
                                }
                                r.b("\r");
                                r.b("\n" + n);
                                if (r.s(r.f("feeDescription", e, t, 1), e, t, 0, 9151, 9417, "{{ }}")) {
                                    r.rs(e, t, function(e, t, r) {
                                        r.b('                    <div class="mp-ticketcontent-item">\r');
                                        r.b("\n" + n);
                                        r.b('                        <p class="mp-ticketcontent-title">');
                                        r.b(r.v(r.f("title", e, t, 0)));
                                        r.b("</p>\r");
                                        r.b("\n" + n);
                                        r.b('                        <p class="mp-ticketcontent-line" mp-role="feeDesc">');
                                        r.b(r.t(r.f("desc", e, t, 0)));
                                        r.b("</p>\r");
                                        r.b("\n" + n);
                                        r.b("                    </div>\r");
                                        r.b("\n" + n)
                                    });
                                    e.pop()
                                }
                                r.b("\r");
                                r.b("\n" + n);
                                if (r.s(r.f("feeOrderFront", e, t, 1), e, t, 0, 9474, 9870, "{{ }}")) {
                                    r.rs(e, t, function(e, t, r) {
                                        if (r.s(r.f("usingDescription", e, t, 1), e, t, 0, 9517, 9831, "{{ }}")) {
                                            r.rs(e, t, function(e, t, r) {
                                                r.b('                        <div class="mp-ticketcontent-item" style="display:none;" mp-role="usingDescArea">\r');
                                                r.b("\n" + n);
                                                r.b('                            <p class="mp-ticketcontent-title">');
                                                r.b(r.v(r.f("title", e, t, 0)));
                                                r.b("</p>\r");
                                                r.b("\n" + n);
                                                r.b('                            <p class="mp-ticketcontent-line">');
                                                r.b(r.t(r.f("desc", e, t, 0)));
                                                r.b("</p>\r");
                                                r.b("\n" + n);
                                                r.b("                        </div>\r");
                                                r.b("\n" + n)
                                            });
                                            e.pop()
                                        }
                                    });
                                    e.pop()
                                }
                                r.b("\r");
                                r.b("\n" + n);
                                r.b('                <div class="mp-ticketcontent-more" mp-role="useDescMoreBtn">\r');
                                r.b("\n" + n);
                                r.b('                    <div mp-role="moreShaddow" class="mp-ticketcontent-shadow"></div>\r');
                                r.b("\n" + n);
                                r.b('                    <span mp-role="moreText">更多购票须知</span><span class="mp-iconfont mp-ticketcontent-arrow" mp-role="useDescMoreArrow">&#xf3cb;</span>\r');
                                r.b("\n" + n);
                                r.b("                </div>\r");
                                r.b("\n" + n);
                                r.b("            </div>\r");
                                r.b("\n" + n);
                                if (r.s(r.f("supplierNameInfo", e, t, 1), e, t, 0, 10285, 11131, "{{ }}")) {
                                    r.rs(e, t, function(e, t, r) {
                                        r.b('            <div class="mp-prdinfo-suppliername mp-border-top">\r');
                                        r.b("\n" + n);
                                        if (r.s(r.f("isQunarStraightSale", e, t, 1), e, t, 0, 10392, 10470, "{{ }}")) {
                                            r.rs(e, t, function(e, t, r) {
                                                r.b('                <span class="mp-prdinfo-qunaricon"></span>\r');
                                                r.b("\n" + n)
                                            });
                                            e.pop()
                                        }
                                        r.b("                ");
                                        r.b(r.v(r.d("supplierNameInfo.supplierName", e, t, 0)));
                                        r.b("\r");
                                        r.b("\n" + n);
                                        r.b('                <span class="mp-prdinfo-safeguardtext"><img class="mp-prdinfo-safeguardicon" src="');
                                        r.b(r.v(r.d("supplierNameInfo.enterGardenTag.imgUrl", e, t, 0)));
                                        r.b('">');
                                        r.b(r.v(r.d("supplierNameInfo.enterGardenTag.desc", e, t, 0)));
                                        r.b("</span>\r");
                                        r.b("\n" + n);
                                        r.b("            </div>\r");
                                        r.b("\n" + n);
                                        r.b('            <div class="mp-prdinfo-safeguarddesc">\r');
                                        r.b("\n" + n);
                                        r.b("                ");
                                        r.b(r.v(r.d("supplierNameInfo.enterGardenDesc", e, t, 0)));
                                        r.b("\r");
                                        r.b("\n" + n);
                                        r.b("            </div>\r");
                                        r.b("\n" + n);
                                        r.b('            <div class="mp-prodinfo-licensecon" data-supplierid="');
                                        r.b(r.v(r.d("supplierNameInfo.supplierId", e, t, 0)));
                                        r.b('" mp-role="mpLicense">\r');
                                        r.b("\n" + n);
                                        r.b('                <span class="">查看</span><span class="mp-prodinfo-licensetext">《工商执照信息》</span>\r');
                                        r.b("\n" + n);
                                        r.b("            </div>\r");
                                        r.b("\n" + n)
                                    });
                                    e.pop()
                                }
                                r.b("        </div>\r");
                                r.b("\n" + n)
                            });
                            e.pop()
                        }
                        r.b("\r");
                        r.b("\n" + n);
                        r.b("    </div>\r");
                        r.b("\n" + n);
                        r.b("    </div>\r");
                        r.b("\n" + n)
                    });
                    e.pop()
                }
                return r.fl()
            },
            partials: {},
            subs: {}
        }.code);
        if (true)
            e.exports = window.QTMPL["miniproddetail"]
    },
    399: function(e, t, n) {
        if (typeof window.QTMPL === "undefined")
            window.QTMPL = {};
        window.QTMPL["minibookarea"] = new window.Hogan.Template({
            code: function(e, t, n) {
                var r = this;
                r.b(n = n || "");
                if (r.s(r.f("showBookBtn", e, t, 1), e, t, 0, 16, 967, "{{ }}")) {
                    r.rs(e, t, function(e, t, r) {
                        r.b('<div class="mpm-fixbooking-con mpg-flexbox">\r');
                        r.b("\n" + n);
                        r.b('    <div class="mpm-fixbooking-pricecon mpf-border-top mpg-flexbox-item">\r');
                        r.b("\n" + n);
                        r.b('        <span class="mpm-fixbooking-priceitemsingle">\r');
                        r.b("\n" + n);
                        r.b('            <em class="mpm-fixbooking-priceicon">');
                        r.b(r.v(r.f("payWayStr", e, t, 0)));
                        r.b('&nbsp;&nbsp;</em>&yen;<span class="mpm-fixbooking-price">');
                        r.b(r.v(r.f("qunarPrice", e, t, 0)));
                        r.b("</span>\r");
                        r.b("\n" + n);
                        if (r.s(r.f("marketingPriceDesc", e, t, 1), e, t, 0, 371, 479, "{{ }}")) {
                            r.rs(e, t, function(e, t, r) {
                                r.b('                <span class="mp-price mpm-fixbooking-subprice">');
                                r.b(r.v(r.f("marketingPriceDesc", e, t, 0)));
                                r.b("</span>\r");
                                r.b("\n" + n)
                            });
                            e.pop()
                        }
                        r.b("        </span>\r");
                        r.b("\n" + n);
                        r.b("    </div>\r");
                        r.b("\n" + n);
                        if (r.s(r.f("qchat", e, t, 1), e, t, 0, 547, 773, "{{ }}")) {
                            r.rs(e, t, function(e, t, r) {
                                r.b('    <div class="qchat-button mp-fixbooking-qchat mpf-border-topleft" mp-role="qchatEntrance">\r');
                                r.b("\n" + n);
                                r.b('        <span class="mpg-iconfont mp-qchat-icon">&#xf0ef;</span>\r');
                                r.b("\n" + n);
                                r.b('        <span class="mp-qchat-text">咨询</span>\r');
                                r.b("\n" + n);
                                r.b("    </div>\r");
                                r.b("\n" + n)
                            });
                            e.pop()
                        }
                        r.b('    <div class="mpm-fixbooking-btn mpg-flexbox-item">\r');
                        r.b("\n" + n);
                        r.b('        <a href="" mp-role="booking-link" data-click="true" data-click-value="t_mini_window_buy">立即预订</a>\r');
                        r.b("\n" + n);
                        r.b("    </div>\r");
                        r.b("\n" + n);
                        r.b("</div>\r");
                        r.b("\n" + n)
                    });
                    e.pop()
                }
                return r.fl()
            },
            partials: {},
            subs: {}
        }.code);
        if (true)
            e.exports = window.QTMPL["minibookarea"]
    },
    425: function(e, t) {
        $.provide("ptouch.Purchase");
        ptouch.Purchase = function(e) {
            if (window.context.isShowUnPayOrderAlarm && window.context.isShowUnPayOrderAlarm == "true") {
                this.getOrderNum()
            }
        };
        ptouch.Purchase.prototype = {
            createDom: function() {
                this.entity = $('<a id="purchase-btn" class="mp-purchase" href="#"><div class="purchase-icon"></div></a>');
                this.mainPageElem = $("#main-page") ? $("#main-page") : $(document.body);
                this.mainPageElem.append(this.entity);
                this.entity.css({
                    transform: "translate(-10px, -10px) translateZ(0px);"
                })
            },
            createNotPayNum: function() {
                if (this.data.notPayOrderSize != 0) {
                    this.entity.append($('<div class="nopay">' + (this.data.notPayOrderSize > 99 ? "..." : this.data.notPayOrderSize) + "</div>"))
                }
                this.entity.attr("href", "/touch/order/list.htm")
            },
            getOrderNum: function() {
                $.ajax({
                    url: "/touch/order/queryNotPayOrderSize.json",
                    type: "get",
                    dataType: "json",
                    cache: false,
                    context: this,
                    success: this.handleGetNumSuccess
                })
            },
            handleGetNumSuccess: function(t) {
                if (t.ret && t.data && t.data.notPayOrderSize) {
                    this.data = t.data;
                    this.createDom();
                    this.createNotPayNum()
                }
            }
        }
    },
    503: function(e, t) {
        $.provide("ptouch.calendar");
        ptouch.calendar = function(e) {
            ptouch.calendar.select = e;
            this._holidays = ptouch.calendar.holidays
        };
        ptouch.calendar.holidays = {};
        ptouch.calendar.prototype = {
            _init: function() {
                this._attachEvents()
            },
            _attachEvents: function() {},
            attachEvents: function(t) {},
            render: function(t) {
                var n = this;
                var r = ['<div class="mpw-calendar-body">'];
                var i = 0;
                for (var s in t) {
                    r.push('<div class="mpw-calendar-outer" mp-role="calendaronemonth"><table class="mpw-calendar">');
                    var o = n._parseDate(s);
                    r.push(n._renderHeader(o) + n._renderBody(o, t[s]));
                    r.push("</table></div>");
                    i++
                }
                r.push("</div>");
                return r.join("")
            },
            _renderHeader: function(t) {
                var n = '<caption class="mpw-calendar-caption">' + t.getFullYear() + "年" + (t.getMonth() + 1) + "月" + "</caption>";
                return n
            },
            _renderBody: function(t, n) {
                var r = '<thead>	                        <tr>	                            <th class="mpw-calendar-day">日</th>	                            <th class="mpw-calendar-day">一</th>	                            <th class="mpw-calendar-day">二</th>	                            <th class="mpw-calendar-day">三</th>	                            <th class="mpw-calendar-day">四</th>	                            <th class="mpw-calendar-day">五</th>	                            <th class="mpw-calendar-day">六</th>	                        </tr>	                    </thead>						<tbody>';
                var i = [];
                var s = t.getFullYear();
                var o = t.getMonth();
                var u = this._getDaysInMonth(s, o + 1);
                var a = this._getDayOfWeek(s, o);
                if (a == 0) {
                    a = 1
                } else {
                    a += 1
                }
                var f = a - 1;
                var l = 2 - a;
                var c = f + u;
                for (var h = l, p = 0; h <= c; h++,
                    p++) {
                    var d = new Date(s, o, h);
                    if (p % 7 == 0) {
                        i.push("</tr>", "<tr>")
                    }
                    if (h < 1 || h > u) {
                        i.push('<td class="mpw-calendar-unit"></td>');
                        continue
                    }
                    i.push('<td class="mpw-calendar-unit');
                    var v = d.getDate();
                    if (this._getTodayTime() == d.getTime()) {
                        v = "今天";
                        i.push(" " + "mpw-calendar-current")
                    }
                    var m = s + "-" + (o + 1) + "-" + h;
                    if (this._holidays[m]) {
                        v = this._holidays[m].holidayName
                    }
                    var g = false;
                    if (!n[h - 1]) {
                        i.push(" " + "mpw-calendar-disabled");
                        g = true
                    }
                    i.push('"');
                    if (!g) {
                        i.push(' onclick="ptouch.calendar.select(event' + "," + s + "," + (o + 1) + "," + h + ');return false;"')
                    }
                    i.push(">");
                    i.push('<span class="mpw-calendar-bgc"></span>');
                    i.push('<span class="mpw-calendar-date">');
                    i.push(v);
                    i.push("</span>");
                    if (!g && n[h - 1].price) {
                        i.push('<strong class="mpg-price mpw-calendar-price">&yen;<em class="mpg-price-num">' + n[h - 1].price + "</em></strong>")
                    }
                    i.push("</td>")
                }
                i = i.slice(1, -1);
                r = r + i.join("") + "</tbody></table>";
                return r
            },
            _isWeekend: function(t) {
                return t == 6 || t == 0
            },
            _getTodayTime: function() {
                var t = new Date;
                return (new Date(t.getFullYear(), t.getMonth(), t.getDate())).getTime()
            },
            _getDaysInMonth: function(t, n) {
                var r = null;
                if (arguments.length == 2) {
                    r = new Date(t, n, 0)
                } else {
                    var i = new Date;
                    r = new Date(i.getFullYear(), i.getMonth() + 1, 0)
                }
                return r.getDate()
            },
            _getDayOfWeek: function(t, n, r) {
                if (arguments.length == 3) {
                    return (new Date(t, n, r)).getDay()
                } else if (arguments.length == 2) {
                    return (new Date(t, n, 1)).getDay()
                } else {
                    var i = new Date;
                    return (new Date(i.getFullYear(), i.getMonth(), 1)).getDay()
                }
            },
            _parseDate: function(t) {
                var t = t.split("-");
                return new Date(t[0], parseInt(t[1], 10) - 1, 1)
            }
        }
    },
    504: function(e, t, n) {
        n(503);
        $.provide("ptouch.DateSelect");
        ptouch.DateSelect = function(e, t) {
            this.exchangeToken = e || "";
            this.ignoreUserQualifies = t || false
        };
        ptouch.DateSelect.prototype = {
            init: function(t, n, r, i) {
                this.dateElem = $(t);
                this.pid = n;
                this.classify = r;
                this.showMask = i || false;
                this.dateElem.attr("readonly", true).listen("click", this.handleClick, this);
                this.loadedDateList = {}
            },
            getFullDate: function(t) {
                return t < 10 ? "0" + t : t + ""
            },
            getStrDate: function(t, n) {
                var r = t.split("-");
                if (n) {
                    return r[0] + "年" + parseInt(r[1]) + "月" + parseInt(r[2]) + "日"
                } else {
                    return parseInt(r[1]) + "月" + parseInt(r[2]) + "日"
                }
            },
            handleGetDataSuccess: function(t) {
                this.loadedDateList[this.pid] = t;
                var n = {};
                var r = /(\d+)\-(\d+)\-(\d+)/;
                for (var i = 0, s = t.length; i < s; i++) {
                    var o = t[i];
                    var u = o.date;
                    var a = u.match(r);
                    if (a) {
                        var f = a[1] + "-" + a[2];
                        if (!n[f]) {
                            n[f] = [];
                            n[f].length = 31
                        }
                        if (o.price) {
                            if (this.ignoreUserQualifies) {
                                o.price = o.originQunarPrice
                            }
                            var l = parseInt(a[3], 10) - 1;
                            n[f][l] = {};
                            n[f][l].price = Math.round(parseFloat(o.price) * 100) / 100;
                            if (typeof o.minBuyCount != "undefined" && typeof o.maxBuyCount != "undefined") {
                                n[f][l].max = parseInt(o.maxBuyCount, 10);
                                n[f][l].min = parseInt(o.minBuyCount, 10)
                            }
                        }
                    }
                }
                this.calendarPopup.setHeader('<span class="mpg-iconfont mpw-dock-back" mp-role="calendarback" style="display:none;">&#xe458;</span>选择时间');
                this.calendar = new ptouch.calendar($.proxy(this.onSelect, this));
                this.calendarElemTpl = this.calendar.render(n);
                this.calendarPopup.setContent(this.calendarElemTpl);
                this.calendar.attachEvents(this.calendarPopup.element);
                $('[mp-role="calendarback"]').listen("click", function() {
                    this.calendarPopup.hide()
                }, this)
            },
            handleGetFailed: function(t) {
                this.calendarPopup.setHeader("加载失败")
            },
            handleClick: function(t) {
                if (!this.calendarPopup) {
                    var n = this;
                    this.calendarPopup = new ptouch.Dock;
                    this.calendarPopup.setCloseBack(true);
                    this.calendarPopup.render("#main-page", this.showMask);
                    $(this.calendarPopup).listen("closeOneDock", function() {
                        $(this).trigger("dateselectCloseCover")
                    }, this)
                }
                if (!this.loadedDateList[this.pid]) {
                    var r = {
                        pid: this.pid,
                        classify: this.classify
                    };
                    if (window["_ba_utm_s"] && window["_ba_utm_s"] === "4246") {
                        r.channel = "pinduoduo"
                    }
                    this.exchangeToken && (r.exchangeToken = this.exchangeToken);
                    $.ajax({
                        url: "/touch/sight/calendar.json",
                        type: "post",
                        dataType: "json",
                        data: r,
                        context: this,
                        success: this.handleGetDataSuccess,
                        fail: this.handleGetFailed
                    });
                    this.calendarPopup.setHeader('<div style="padding:18px;">加载中...</div>')
                }
                this.calendarPopup.show()
            },
            openDatePanel: function() {
                this.handleClick()
            },
            onSelect: function(t, n, r, i) {
                this.calendarPopup.hide();
                $(".mpw-calendar-selected").removeClass("mpw-calendar-selected");
                $(t.currentTarget).addClass("mpw-calendar-selected");
                var s = n + "-" + this.getFullDate(r) + "-" + this.getFullDate(i);
                var o, u, a, f, l = 0,
                    c, h;
                var p = this.loadedDateList[this.pid];
                for (var d = 0, v = p.length; d < v; d++) {
                    var i = p[d];
                    if (i.date == s) {
                        o = i.price;
                        u = i.marketPrice;
                        a = i.maxBuyCount;
                        f = i.minBuyCount;
                        c = i.priceCashDesc;
                        h = i.preferenPrice;
                        if (i.cashbackAmount) {
                            l = i.cashbackAmount
                        }
                        break
                    }
                }
                this.dateElem.attr({
                    "data-date": s,
                    "data-price": o,
                    "data-marketprice": u,
                    "data-maxbuycount": a,
                    "data-minbuycount": f,
                    "data-cashbackamount": l,
                    "data-pricecashdesc": c,
                    "data-preferenprice": h
                });
                setTimeout($.proxy(function() {
                    this.dateElem.focus()
                }, this), 500);
                $(this).trigger(new $.Event("changeDate", {
                    dateElem: this.dateElem
                }))
            },
            rememberSel: function() {
                var t = window.location.href.match(/pid\=([^\&\#\?]*)/);
                try {
                    this.storage = window.localStorage
                } catch (n) {
                    return
                }
                if (this.storage) {
                    var r = this.storage.getItem("selDate");
                    if (r) {
                        r = $.parseJSON(r);
                        if (r.pid == this.pid) {
                            this.setStoreDate(r.date)
                        } else {
                            this.storage.removeItem("selDate")
                        }
                    }
                }
            },
            storeSetItem: function(t, n) {
                if (this.storage) {
                    this.storage.setItem(t, '{"date":"' + n + '","pid":"' + this.pid + '"}')
                }
            },
            setStoreDate: function(t) {
                this.dateElem.attr("data-date", t);
                var n = this;
                window.setTimeout(function() {
                    $(n).trigger(new $.Event("changeDate", {
                        dateElem: n.dateElem
                    }))
                }, 500)
            }
        }
    },
    505: function(e, t) {
        $.provide("ptouch.Category");
        ptouch.Category = function(e, t, n) {
            this.url = e;
            this.exchangeToken = t || "";
            this.ignoreUserQualifies = n || false
        };
        $.extend(ptouch.Category.prototype, {
            init: function(t, n, r, i, s) {
                this.productId = t;
                this.type = n || 0;
                this.classify = r;
                this.bookingUrl = i;
                this.cashbacknum = s;
                this.getData()
            },
            setType: function(t) {
                this.type = t
            },
            attachEvent: function(t) {
                this.attachSelectDateEvent(t);
                $("#mp-control-booking").listen("click", this.handleClickBookBtn, this)
            },
            attachSelectDateEvent: function(t) {
                if (!this.dateSelect) {
                    if (this.exchangeToken) {
                        this.dateSelect = new ptouch.DateSelect(this.exchangeToken, this.ignoreUserQualifies)
                    } else {
                        this.dateSelect = new ptouch.DateSelect("", this.ignoreUserQualifies)
                    }
                    $(this.dateSelect).listen("changeDate", this.handleSelectCalendar, this);
                    $(this.dateSelect).listen("dateselectCloseCover", function() {
                        $(this).trigger("categoryCloseCover")
                    }, this)
                }
                this.dateSelect.init(t, this.productId, this.classify);
                var n = $("[mp-role='dateshortcutkey']");
                n.listen("click", this.handleClickDateShortKey, this)
            },
            handleSelectCalendar: function(t) {
                var n = t.dateElem;
                var r = n.attr("data-date");
                $(".mpf-datecard-actived").removeClass("mpf-datecard-actived");
                n.addClass("mpf-datecard-actived");
                if (n.hasClass("mpf-datecard-wait")) {
                    n.removeClass("mpf-datecard-wait")
                }
                n.find(".mpf-datecard-detail").html(this.getStrDate(r));
                $(this).trigger(new $.Event("selectDate", {
                    date: r,
                    dateElem: n
                }));
                this.refreshCashbackNum(n)
            },
            refreshCashbackNum: function(t) {
                var n = t.attr("data-cashbackamount");
                var r = t.attr("data-marketprice");
                var i = $('[mp-role="highMarketPrice"]');
                var s = $('[mp-role="page-category-cashback"]');
                if (s.length != 0) {
                    if (n && n != "0") {
                        var o = '<span class="mpf-cashbacktag">' + '<span class="mpf-cashback-word">赠券</span>' + '<span class="mpf-cashback-payback">¥<em class="mpf-cashback-paynum">' + n + "</em></span>" + "</span>";
                        s.html(o)
                    } else {
                        s.html("")
                    }
                }
                if (i.length != 0) {
                    if (r) {
                        i.html(r)
                    }
                }
                this.displayMarketAndMarketingPrice(t)
            },
            handleClickDateShortKey: function(t) {
                var n = $(t.target);
                var r = n.hasClass("mpf-datecard") ? n : n.parents(".mpf-datecard");
                var i = r.attr("data-date");
                $(".mpf-datecard-actived").removeClass("mpf-datecard-actived");
                r.addClass("mpf-datecard-actived");
                $(this).trigger(new $.Event("selectDate", {
                    date: i,
                    dateElem: r
                }));
                this.refreshCashbackNum(r)
            },
            setDateShorKey: function(t) {
                this.handleClickDateShortKey({
                    target: t
                })
            },
            openDatePanel: function(t) {
                this.dateSelect.openDatePanel()
            },
            handleClickBookBtn: function(t) {
                t.preventDefault();
                var n = $(t.target);
                var r = n.attr("href");
                var i = ptouch.getParam(r, "useDate");
                if (i) {
                    if (navigator.userAgent.indexOf("UCBrowser") > -1) {
                        $(this).trigger("categoryCloseCover")
                    }
                    window.location.href = r
                } else {
                    this.showPromptMsg("请选择日期")
                }
            },
            showPromptMsg: function(t) {
                var n = $('<div class="mp-toast-outer"><span class="mp-toast">' + t + "</span></div>");
                n.appendTo("body");
                setTimeout(function() {
                    n.remove()
                }, 1e3)
            },
            dealBookBtnAndPrice: function(t) {
                var n = t.date;
                var r = t.dateElem;
                var i = $("#mp-control-booking");
                var s = i.attr("href");
                var o = r.attr("data-price");
                if (o) {
                    var u = $("#price"),
                        a = $("#price-text");
                    u.html(o);
                    a.html("/张")
                }
                this.displayMarketAndMarketingPrice(r);
                if (ptouch.getParam(s, "useDate")) {
                    s = s.replace(ptouch.getParam(s, "useDate"), n)
                } else {
                    s += "&useDate=" + n
                }
                i.attr("href", s)
            },
            displayMarketAndMarketingPrice: function(t) {
                var n = t.attr("data-pricecashdesc"),
                    r = $('[mp-role="highMarketPrice"]'),
                    i = $('[mp-role="priceCashDesc"]');
                if (n) {
                    i.html(n).parent().show();
                    if (r.length) {
                        r.parent().hide()
                    }
                } else {
                    i.parent().hide();
                    if (r.length) {
                        r.parent().show()
                    }
                }
            },
            getData: function() {
                var t = {
                    id: this.productId,
                    type: this.type
                };
                this.exchangeToken && (t.exchangeToken = this.exchangeToken);
                $.ajax({
                    url: this.url,
                    type: "get",
                    dataType: "json",
                    data: t,
                    context: this,
                    success: this.getDataSuccess,
                    error: this.getDataListError
                })
            },
            getDataSuccess: function(t) {
                if (t && t.ret) {
                    this.data = t.data;
                    if (this.data) {
                        this.dealCategoryData(this.data)
                    }
                    $(this).trigger("renderCategory")
                } else {
                    var n = t ? t.errmsg : "数据获取失败";
                    this.showPromptMsg(n)
                }
            },
            dealCategoryData: function(t) {
                t.bookingUrl = this.bookingUrl;
                var n = t.categoryList || [];
                for (var r = 0, i = n.length; r < i; r++) {
                    var s = n[r];
                    if (s) {
                        var o = s.values;
                        if (s.type == "CALENDAR") {
                            this.setShowDefaultDate();
                            var u = this.defaultDateMap.dates;
                            for (var a = 0, f = u.length; a < f; a++) {
                                var l = u[a];
                                var c = u[a].date;
                                for (var h = 0, p = o.length; h < p; h++) {
                                    var d = o[h];
                                    if (c == d.date) {
                                        if (d.valid == true) {
                                            l.valid = true
                                        }
                                        if (d.price) {
                                            if (this.ignoreUserQualifies) {
                                                l.price = d.originQunarPrice
                                            } else {
                                                l.price = d.price
                                            }
                                        }
                                        if (d.marketPrice) {
                                            l.marketPrice = d.marketPrice
                                        }
                                        if (d.cashbackAmount) {
                                            l.cashbackAmount = d.cashbackAmount
                                        }
                                        if (d.priceCashDesc) {
                                            l.priceCashDesc = d.priceCashDesc
                                        }
                                        if (d.preferenPrice) {
                                            l.preferenPrice = d.preferenPrice
                                        }
                                        l.maxBuyCount = d.maxBuyCount;
                                        l.minBuyCount = d.minBuyCount;
                                        break
                                    }
                                }
                            }
                        }
                    }
                }
            },
            getDataListError: function(t) {},
            setShowDefaultDate: function() {
                var t = new Date;
                var n = t.getFullYear();
                var r = t.getMonth();
                var i = t.getDate();
                this.defaultDateMap = {
                    dates: [{
                        displayName: "今天",
                        dateStr: r + 1 + "月" + i + "日",
                        date: [n, this.getFullDate(r + 1), this.getFullDate(i)].join("-")
                    }, {
                        displayName: "明天",
                        dateStr: this.getShowMonth(n, r, i, 1) + 1 + "月" + this.getShowDate(n, r, i, 1) + "日",
                        date: [this.getShowYear(n, r, i, 1), this.getFullDate(this.getShowMonth(n, r, i, 1) + 1), this.getFullDate(this.getShowDate(n, r, i, 1))].join("-")
                    }, {
                        displayName: "后天",
                        dateStr: this.getShowMonth(n, r, i, 2) + 1 + "月" + this.getShowDate(n, r, i, 2) + "日",
                        date: [this.getShowYear(n, r, i, 2), this.getFullDate(this.getShowMonth(n, r, i, 2) + 1), this.getFullDate(this.getShowDate(n, r, i, 2))].join("-")
                    }, {
                        displayName: "其他日期",
                        dateStr: "",
                        date: "",
                        valid: true,
                        isMoreBtn: true
                    }]
                }
            },
            getShowYear: function(t, n, r, i) {
                return (new Date(t, n, r + i)).getFullYear()
            },
            getShowMonth: function(t, n, r, i) {
                return (new Date(t, n, r + i)).getMonth()
            },
            getShowDate: function(t, n, r, i) {
                return (new Date(t, n, r + i)).getDate()
            },
            getFullDate: function(t) {
                return t < 10 ? "0" + t : t + ""
            },
            getStrDate: function(t, n) {
                var r = t.split("-");
                if (n) {
                    return r[0] + "年" + parseInt(r[1]) + "月" + parseInt(r[2]) + "日"
                } else {
                    return parseInt(r[1]) + "月" + parseInt(r[2]) + "日"
                }
            }
        })
    },
    506: function(e, t, n) {
        if (typeof window.QTMPL === "undefined")
            window.QTMPL = {};
        window.QTMPL["calendarcategory"] = new window.Hogan.Template({
            code: function(e, t, n) {
                var r = this;
                r.b(n = n || "");
                r.b('<div class="mpf-booking-datecard clrfix">       \r');
                r.b("\n" + n);
                if (r.s(r.f("dates", e, t, 1), e, t, 0, 64, 740, "{{ }}")) {
                    r.rs(e, t, function(e, t, r) {
                        r.b('    <span class="mpf-datecard ');
                        if (!r.s(r.f("valid", e, t, 1), e, t, 1, 0, 0, "")) {
                            r.b("mpf-datecard-disabled")
                        }
                        r.b(" ");
                        if (r.s(r.f("isMoreBtn", e, t, 1), e, t, 0, 152, 169, "{{ }}")) {
                            r.rs(e, t, function(e, t, n) {
                                n.b("mpf-datecard-wait")
                            });
                            e.pop()
                        }
                        r.b('" ');
                        if (r.s(r.f("isMoreBtn", e, t, 1), e, t, 0, 199, 238, "{{ }}")) {
                            r.rs(e, t, function(e, t, n) {
                                n.b('id="alldate" data-type="selectCalendar"')
                            });
                            e.pop()
                        }
                        r.b(" ");
                        if (!r.s(r.f("isMoreBtn", e, t, 1), e, t, 1, 0, 0, "")) {
                            if (r.s(r.f("valid", e, t, 1), e, t, 0, 277, 302, "{{ }}")) {
                                r.rs(e, t, function(e, t, n) {
                                    n.b('mp-role="dateshortcutkey"')
                                });
                                e.pop()
                            }
                        }
                        r.b(' data-date="');
                        r.b(r.v(r.f("date", e, t, 0)));
                        r.b('" data-maxbuycount="');
                        r.b(r.v(r.f("maxBuyCount", e, t, 0)));
                        r.b('" data-minbuycount="');
                        r.b(r.v(r.f("minBuyCount", e, t, 0)));
                        r.b('" data-price="');
                        r.b(r.v(r.f("price", e, t, 0)));
                        r.b('" data-marketprice="');
                        r.b(r.v(r.f("marketPrice", e, t, 0)));
                        r.b('" data-cashbackamount="');
                        r.b(r.v(r.f("cashbackAmount", e, t, 0)));
                        r.b('" data-pricecashdesc="');
                        r.b(r.v(r.f("priceCashDesc", e, t, 0)));
                        r.b('" data-preferenprice="');
                        r.b(r.v(r.f("preferenPrice", e, t, 0)));
                        r.b('">\r');
                        r.b("\n" + n);
                        r.b('        <em class="mpf-datecard-name">');
                        r.b(r.v(r.f("displayName", e, t, 0)));
                        r.b("</em>\r");
                        r.b("\n" + n);
                        r.b('        <strong class="mpf-datecard-detail">');
                        r.b(r.v(r.f("dateStr", e, t, 0)));
                        r.b("</strong>\r");
                        r.b("\n" + n);
                        r.b("    </span>\r");
                        r.b("\n" + n)
                    });
                    e.pop()
                }
                r.b("</div>");
                return r.fl()
            },
            partials: {},
            subs: {}
        }.code);
        if (true)
            e.exports = window.QTMPL["calendarcategory"]
    },
    654: function(e, t, n) {
        if (typeof window.QTMPL === "undefined")
            window.QTMPL = {};
        window.QTMPL["category"] = new window.Hogan.Template({
            code: function(e, t, n) {
                var r = this;
                r.b(n = n || "");
                r.b('<div class="mpf-control-outer">\r');
                r.b("\n" + n);
                r.b('    <div class="mp-booking-info">\r');
                r.b("\n" + n);
                r.b('        <h5 class="mpf-booking-title">');
                r.b(r.v(r.f("ticketName", e, t, 0)));
                r.b("</h5>\r");
                r.b("\n" + n);
                r.b('        <p class="mpf-booking-price" mp-role="page-category-pricearea">\r');
                r.b("\n" + n);
                r.b('            <span class="mpg-price">&yen;<em class="mpg-price-num" id="price">');
                r.b(r.v(r.f("lowerPrice", e, t, 0)));
                r.b("</em></span>\r");
                r.b("\n" + n);
                r.b('            <span id="price-text">起/张</span>\r');
                r.b("\n" + n);
                r.b('            <span class="mp-prdcard-gray mp-prdcard-marketing"');
                if (!r.s(r.f("priceCashDesc", e, t, 1), e, t, 1, 0, 0, "")) {
                    r.b(' style="display:none"')
                }
                r.b('><span mp-role="priceCashDesc">');
                r.b(r.v(r.f("priceCashDesc", e, t, 0)));
                r.b("</span></span>\r");
                r.b("\n" + n);
                if (r.s(r.f("highMarketPrice", e, t, 1), e, t, 0, 567, 803, "{{ }}")) {
                    r.rs(e, t, function(e, t, r) {
                        r.b('            <span class="mp-prdcard-gray mp-prdcard-marketprice mpf-booking-marketprice"');
                        if (r.s(r.f("priceCashDesc", e, t, 1), e, t, 0, 675, 696, "{{ }}")) {
                            r.rs(e, t, function(e, t, n) {
                                n.b(' style="display:none"')
                            });
                            e.pop()
                        }
                        r.b('>票面价:&yen;<span mp-role="highMarketPrice">');
                        r.b(r.v(r.f("highMarketPrice", e, t, 0)));
                        r.b("</span></span>\r");
                        r.b("\n" + n)
                    });
                    e.pop()
                }
                r.b('            <span mp-role="page-category-cashback">\r');
                r.b("\n" + n);
                if (r.s(r.f("maxCashBack", e, t, 1), e, t, 0, 910, 1185, "{{ }}")) {
                    r.rs(e, t, function(e, t, r) {
                        r.b('                <span class="mpf-cashbacktag">\r');
                        r.b("\n" + n);
                        r.b('                    <span class="mpf-cashback-word">赠券</span>\r');
                        r.b("\n" + n);
                        r.b('                    <span class="mpf-cashback-payback">&yen;<em class="mpf-cashback-paynum">');
                        r.b(r.v(r.f("maxCashBack", e, t, 0)));
                        r.b("</em></span>\r");
                        r.b("\n" + n);
                        r.b("                </span>\r");
                        r.b("\n" + n)
                    });
                    e.pop()
                }
                r.b("            </span>\r");
                r.b("\n" + n);
                r.b("        </p>\r");
                r.b("\n" + n);
                r.b("    </div>\r");
                r.b("\n" + n);
                if (r.s(r.f("categoryList", e, t, 1), e, t, 0, 1271, 1481, "{{ }}")) {
                    r.rs(e, t, function(e, t, r) {
                        r.b('    <div class="mpf-booking-select" data-type="');
                        r.b(r.v(r.f("type", e, t, 0)));
                        r.b('">\r');
                        r.b("\n" + n);
                        r.b('        <h6 class="mpf-booking-note" mp-role="categorytitle">');
                        r.b(r.v(r.f("title", e, t, 0)));
                        r.b("</h6>\r");
                        r.b("\n" + n);
                        r.b("    </div>\r");
                        r.b("\n" + n);
                        r.b('    <div class="mpf-booking-light">');
                        r.b(r.v(r.f("playLimit", e, t, 0)));
                        r.b("</div>\r");
                        r.b("\n" + n)
                    });
                    e.pop()
                }
                r.b("</div>\r");
                r.b("\n" + n);
                r.b('<a title="门票预订" class="mpf-booking-btn" id="mp-control-booking" href="');
                r.b(r.v(r.f("bookingUrl", e, t, 0)));
                r.b('">立即预订</a>');
                return r.fl()
            },
            partials: {},
            subs: {}
        }.code);
        if (true)
            e.exports = window.QTMPL["category"]
    },
    775: function(e, t, n) {
        n(776);
        n(777);
        n(298);
        n(425);
        n(389);
        n(303);
        n(778);
        n(779);
        n(780);
        $.provide("ptouch.sight.detail.Page");
        ptouch.sight.detail.Page = function(e) {
            ptouch.Page.call(this, e)
        };
        $.inherits(ptouch.sight.detail.Page, ptouch.Page);
        $.extend(ptouch.sight.detail.Page.prototype, {
            init_: function() {
                this.setHeader(this.context.sightName, true);
                this.initTicketPrice();
                this.initTicketTypeTab();
                this.purchase = new ptouch.Purchase;
                this.container = this.view.getElement();
                this.container.role("lazyLoadImg").lazyload({
                    data_attribute: "original-src",
                    failure_limit: 9999
                });
                this.resetAnalyticsLink();
                this.initCommentFold();
                this.bindEvents();
                this.initShelfInfo()
            },
            resetAnalyticsLink: function() {
                var t = this.container.role("commentLink"),
                    n = this.container.role("sightLink");
                for (var r = 0; r < t.length; r++) {
                    var i = t.eq(r);
                    i.attr("href", ptouch.Analytics.makeAnalyticsLink(i.attr("href")))
                }
                for (var r = 0; r < n.length; r++) {
                    var i = n.eq(r);
                    i.attr("href", ptouch.Analytics.makeAnalyticsLink(i.attr("href")))
                }
            },
            initCommentFold: function() {
                var t = 105;
                var n = $.role("commentContent");
                var r = '<div class="mp-comment-foldbtn mp-iconfont" data-status="fold" mp-role="commentFoldBtn">&#xf3cb;</div>';
                for (var i = 0; i < n.length; i++) {
                    var s = $(n[i]);
                    if (s.height() > t) {
                        s.css({
                            height: t + "px",
                            overflow: "hidden"
                        });
                        s.after($(r))
                    }
                }
                $.role("commentFoldBtn").listen("click", this.hansleExtendComment, this)
            },
            initShelfInfo: function() {
                var t = $(".mp-ticket-shelf-info-content-text");
                for (var n = 0; n < t.length; n++) {
                    var r = $(t[n]);
                    var i = r.text();
                    if (i.indexOf("优待政策") > 0) {
                        var s = i.split("优待政策")[0];
                        r.text(s);
                        r.addClass("mp-ticket-shelf-info-content-hide");
                        r.after($("<span>优待政策</span>"))
                    }
                }
            },
            hansleExtendComment: function(t) {
                var n = 105;
                var r = $(t.currentTarget);
                var i = $.role("commentFoldBtn").index(r);
                var s = $.role("commentContent")[i];
                if (r.data("status") == "fold") {
                    r.data("status", "extend").addClass("mp-comment-foldbtn-extend");
                    $(s).css({
                        height: "auto",
                        overflow: "auto"
                    })
                } else {
                    r.data("status", "fold").removeClass("mp-comment-foldbtn-extend");
                    $(s).css({
                        height: n + "px",
                        overflow: "hidden"
                    })
                }
            },
            initShare: function() {
                var t = $("#imgcontainer").find("img").attr("src") ? $("#imgcontainer").find("img").attr("src") : "http://simg1.qunarzz.com/piao/images/touch/app_logo100.png",
                    n = ptouch.setUrlParam(window.location.href, "ex_track", "shared_link"),
                    r = "我在这里找到好多好玩的，你也快来看看吧！",
                    i = this.context.sightName;
                this.bindShare(i, r, t, n)
            },
            bindEvents: function() {
                var t = this.container.find("#imgcontainer"),
                    n = this.container.find("#card-adress"),
                    r = this.container.find("#mp-announce-con"),
                    i = this.container.role("scrollImages"),
                    s = i.role("lazyLoadImg"),
                    o = this.container.role("ticketInfo");
                videoIcon = $.role("videoIcon");
                tabExtend = this.container.find(".mp-tab-extend");
                tabUnextend = this.container.find(".mp-tab-unextend");
                $.listen(t, "click", this.handleImageClick, this);
                $.listen(n, "click", this.handleMapClick, this);
                $.listen(i, "scroll", this.handleImgsScroll, this);
                $.listen(s, "click", this.handleThumbClick, this);
                if (r.length != 0) {
                    this.renderAnnouncement(window.context.spotAnnouncement);
                    r.listen("click", this.handleAnnouncementClick, this)
                }
                if (videoIcon && videoIcon.data("link")) {
                    $.listen(videoIcon, "click", this.handlePlayVideo, this)
                }
                $.listen(o, "click", this.handleTicketInfo, this);
                $.listen(tabExtend, "click", this.handleTabExtend, this);
                $.listen(tabUnextend, "click", this.handleTabUnextend, this);
                this.initShare()
            },
            handleWindowScroll: function(t) {
                var n = $(window).scrollTop(),
                    r = this.view.getHeader().height(),
                    i = this.displayExtendOrderCon.hasClass("mp-tab-show"),
                    s = !i ? this.displayOrderCon : this.displayExtendOrderCon,
                    o = s.height(),
                    u = this.firstShelf;
                if (n > u.top - r - o) {
                    s.addClass("mp-tab-show");
                    s.css("top", r + "px");
                    this.tabExtend.css("top", r + "px");
                    if (n > this.ticketGroupLastOffset.top) {
                        s.removeClass("mp-tab-show");
                        this.removeTabMask();
                        s.css("top", "");
                        this.tabExtend.css("top", "")
                    }
                    for (var a = 0, f = this.ticketTypeAnchor.length; a < f; a++) {
                        var l = this.ticketTypeAnchor.eq(a);
                        var c = l.offset().top;
                        var h = l.height();
                        var p = "displayOrder_" + l.attr("data-anchor");
                        if ($(".mp-tab-show").length === 0) {
                            return false
                        }
                        if (n > c && n < c + h) {
                            var d = this.displayOrderTabItems.filter('[data-order="' + p + '"]');
                            if (!d || d.length === 0) {
                                return false
                            }
                            var v = d.eq(0).offset().left;
                            var m = d.eq(0).width();
                            var g = this.displayOrderCon.scrollLeft();
                            var y = this.displayOrderCon.find('[mp-role="tabSlider"]');
                            var b = y.width();
                            this.displayOrderTabItems.siblings().removeClass("active");
                            d.addClass("active");
                            y.css({
                                left: g + v + (m - b) / 2
                            });
                            this.displayOrderCon.scrollLeft(g + v - ($(window).width() - m) / 2)
                        }
                    }
                } else {
                    s.removeClass("mp-tab-show");
                    this.removeTabMask();
                    s.css("top", "");
                    this.tabExtend.css("top", "")
                }
            },
            handlePlayVideo: function() {
                if (!this.videoPlayer) {
                    var t = '<div class="mp-videoplayer" mp-role="mpVideoPlayer"><video id="videoTarget" class="video-js vjs-default-skin" src="' + $.role("videoIcon").data("link") + '" controls preload="auto" height="300" width="400">' + '<source src="' + $.role("videoIcon").data("link") + '" type="application/x-mpegURL">' + '</video></div><div class="mp-video-mask" mp-role="mpVideoMask"></div>';
                    this.container.append($(t));
                    this.videoPlayer = $.role("mpVideoPlayer");
                    this.videoPlayerMask = $.role("mpVideoMask");
                    this.videoPlayerMask.listen("click", this.handleHideVideoPlayer, this);
                    this.player = videojs("videoTarget")
                }
                this.videoPlayer.show();
                this.videoPlayerMask.show()
            },
            handleHideVideoPlayer: function() {
                this.videoPlayer.hide();
                this.videoPlayerMask.hide()
            },
            handleImgsScroll: function() {
                $(window).trigger("scroll")
            },
            handleThumbClick: function(t) {
                var n = $(t.target);
                var r = n.index(),
                    i = n.parent().parent().parent(),
                    s = i.role("lazyLoadImg"),
                    o = [],
                    u = [],
                    a;
                for (var f = 0, l = s.length; f < l; f++) {
                    a = s.eq(f);
                    o.push(a.attr("data-bigimg"));
                    u.push(a.attr("data-original-src"))
                }
                this.handleShowCommentsBigImg(u, o, r)
            },
            handleShowCommentsBigImg: function(t, n, r) {
                var i = [],
                    s;
                for (var o = 0, u = n.length; o < u; o++) {
                    i.push({
                        url: n[o],
                        smallUrl: t[o],
                        title: ""
                    })
                }
                s = new ptouch.ui.PictureSlider(i);
                s.create("body");
                s.setIndex(r, true)
            },
            handleImageClick: function(t) {
                if (this.isApp) {
                    this.openWebView({
                        type: "navibar-none",
                        url: "http://touch.piao.qunar.com/touch/getSightImgs.htm?sightId=" + this.context.sightId
                    })
                } else {
                    window.location.href = "//touch.piao.qunar.com/touch/getSightImgs.htm?sightId=" + this.context.sightId
                }
            },
            handleTicketInfo: function(t) {
                var n = $(t.currentTarget);
                var r = n.attr("data-type");
                var i = this;
                $.ajax({
                    url: "/touch/weekend/getPreferentialPolicies.json",
                    type: "get",
                    dataType: "json",
                    data: {
                        ticketTypeId: r
                    },
                    success: function(t) {
                        if (t.ret) {
                            var n = t.data;
                            n.preferentialPolicies && n.preferentialPolicies.crowdDiscounts.forEach(function(e) {
                                var t = e.policies;
                                t.forEach(function(e, t) {
                                    e.index = t
                                })
                            });
                            if (!i.ticketInfoPop) {
                                i.ticketInfoPop = QTMPL.ticketinfo.render({
                                    ticketInfo: n
                                });
                                $(document.body).append(i.ticketInfoPop);
                                $("#mp-ticket-info-close").listen("click", i.hideTicketInfoPop, i);
                                $("#mp-ticket-info-mask").listen("click", i.hideTicketInfoPop, i)
                            }
                        }
                    }
                })
            },
            handleTabExtend: function() {
                this.renderTabMask();
                this.displayExtendOrderCon.addClass("mp-tab-show")
            },
            handleTabUnextend: function() {
                this.removeTabMask();
                this.displayExtendOrderCon.removeClass("mp-tab-show")
            },
            hideTicketInfoPop: function() {
                this.ticketInfoPop = null;
                $("#mp-ticket-info-mask").remove();
                $("#mp-ticket-info-container").remove()
            },
            initTicketPrice: function() {
                this.ticketPrice = new ptouch.sight.detail.TicketPrice(this.view.element);
                this.ticketPrice.init()
            },
            initTicketTypeTab: function() {
                this.displayOrderCon = $.role("displayOrderCon");
                this.displayExtendOrderCon = $.role("displayExtendOrderCon");
                this.displayOrderTabItems = $.role("displayOrder");
                this.tabExtend = $(".mp-tab-extend");
                this.tabUnextend = $(".mp-tab-unextend");
                if (this.displayOrderTabItems.length === 0) {
                    return false
                }
                this.tabOffset = this.displayOrderTabItems.eq(0).offset();
                this.firstShelf = $(".mp-ticket-shelf").first().offset();
                this.ticketGroupLastOffset = $(".mp-ticket-group").last().offset();
                this.ticketTypeAnchor = $.role("ticketTypeAnchor");
                this.displayOrderTabItems.listen("click", this.handleClickTypeTabItem, this);
                $(window).listen("scroll", this.handleWindowScroll, this)
            },
            handleSliderLocation: function(t) {
                var n = t.data("order");
                var r = $(".mp-tab-fixed").find('[data-order="' + n + '"]');
                var i = r.offset().left;
                var s = r.width();
                var o = this.displayOrderCon.scrollLeft();
                var u = this.displayOrderCon.find('[mp-role="tabSlider"]');
                var a = u.width();
                u.css({
                    left: o + i + (s - a) / 2
                });
                this.displayOrderCon.scrollLeft(o + i - ($(window).width() - s) / 2);
                this.displayOrderTabItems.siblings().removeClass("active");
                this.displayOrderTabItems.filter('[data-order="' + n + '"]').addClass("active")
            },
            handleClickTypeTabItem: function(t) {
                var n = this;
                var r = $(t.currentTarget);
                var i = r.data("order");
                var s = this.view.getHeader().height(),
                    o = this.displayExtendOrderCon.hasClass("mp-tab-show"),
                    u = !o ? this.displayOrderCon : this.displayExtendOrderCon,
                    a = u.height();
                this.handleSliderLocation(r);
                for (var f = 0; f < this.ticketTypeAnchor.length; f++) {
                    var l = "displayOrder_" + $(this.ticketTypeAnchor[f]).attr("data-anchor");
                    if (l === i) {
                        var c = $(this.ticketTypeAnchor[f]).offset().top - s;
                        $(window).unbind("scroll");
                        $(window).scrollTop(c - a);
                        setTimeout(function() {
                            $(window).listen("scroll", n.handleWindowScroll, n)
                        }, 100);
                        break
                    }
                }
                this.handleTabUnextend()
            },
            handleMapClick: function(t) {
                var n = window.context.baiduPoint.split(","),
                    r = n[1],
                    i = n[0],
                    s;
                if ($.env.platform == "app") {
                    s = $.env.scheme + "://sight/detailMap?sightId=" + this.context.sightId
                } else {
                    s = "/touch/weekend/sightmap.htm?sightname=" + this.context.sightName + "&lat=" + r + "&lng=" + i
                }
                window.location.href = ptouch.Analytics.makeAnalyticsLink(s)
            },
            renderAnnouncement: function(t) {
                var t = t.replace(/<br\/>/g, "").replace(/</g, "&lt;").replace(/>/g, "&gt;"),
                    n = this.container.find(".mp-announce-icon");
                n.after(t)
            },
            renderTabMask: function() {
                var t = $(".mp-tab-extend-mask");
                if (t && t.length > 0) {
                    t.show()
                } else {
                    var n = '<div class="mp-tab-extend-mask"></div>';
                    $(document.body).append($(n));
                    $(".mp-tab-extend-mask").listen("click", this.handleTabUnextend, this)
                }
            },
            removeTabMask: function() {
                var t = $(".mp-tab-extend-mask");
                t.hide()
            },
            handleAnnouncementClick: function() {
                if (!this.announcementPop) {
                    window.context.spotAnnouncement = window.context.spotAnnouncement.split("<br/>");
                    this.announcementPop = QTMPL.announce.render({
                        spotAnnouncement: window.context.spotAnnouncement
                    });
                    $(document.body).append(this.announcementPop);
                    $("#mp-announce-detailclose").listen("click", this.hideAnnouncementPop, this)
                } else {
                    $("#mp-announce-mask").show();
                    $("#mp-announce-detailcon").show()
                }
            },
            hideAnnouncementPop: function() {
                $("#mp-announce-mask").hide();
                $("#mp-announce-detailcon").hide()
            }
        })
    },
    776: function(e, t, n) {
        if (typeof window.QTMPL === "undefined")
            window.QTMPL = {};
        window.QTMPL["announce"] = new window.Hogan.Template({
            code: function(e, t, n) {
                var r = this;
                r.b(n = n || "");
                r.b('<div class="mp-announce-mask" id="mp-announce-mask"></div>');
                r.b("\n" + n);
                r.b('<div class="mp-announce-detailcon" id="mp-announce-detailcon">');
                r.b("\n" + n);
                r.b('    <div class="mp-announce-detailtitle">');
                r.b("\n" + n);
                r.b('        <span class="mpg-iconfont mp-announce-detailicon">&#xf01e;</span>景区公告');
                r.b("\n" + n);
                r.b("    </div>");
                r.b("\n" + n);
                r.b('    <div class="mp-announce-detail">');
                r.b("\n" + n);
                if (r.s(r.f("spotAnnouncement", e, t, 1), e, t, 0, 315, 337, "{{ }}")) {
                    r.rs(e, t, function(e, t, r) {
                        r.b("    <p>");
                        r.b(r.v(r.d(".", e, t, 0)));
                        r.b("</p>");
                        r.b("\n" + n)
                    });
                    e.pop()
                }
                r.b("    </div>");
                r.b("\n" + n);
                r.b('    <div class="mp-announce-popclose">');
                r.b("\n" + n);
                r.b('        <span class="mpg-iconfont mp-announce-detailcloseicon" id="mp-announce-detailclose">&#xf3f4;</span>');
                r.b("\n" + n);
                r.b("    </div>");
                r.b("\n" + n);
                r.b("</div>");
                r.b("\n");
                return r.fl()
            },
            partials: {},
            subs: {}
        }.code);
        if (true)
            e.exports = window.QTMPL["announce"]
    },
    777: function(e, t, n) {
        if (typeof window.QTMPL === "undefined")
            window.QTMPL = {};
        window.QTMPL["ticketinfo"] = new window.Hogan.Template({
            code: function(e, t, n) {
                var r = this;
                r.b(n = n || "");
                r.b('<div class="mp-ticket-info-mask" id="mp-ticket-info-mask"></div>');
                r.b("\n" + n);
                r.b('<div class="mp-ticket-info-container" id="mp-ticket-info-container">');
                r.b("\n" + n);
                r.b('    <div class="mp-ticket-info-title">');
                r.b("\n" + n);
                r.b('        <span class="mp-ticket-info-title-text">');
                r.b(r.v(r.d("ticketInfo.title", e, t, 0)));
                r.b("</span>");
                r.b("\n" + n);
                r.b('        <span class="mpg-iconfont mp-ticket-info-close" id="mp-ticket-info-close">&#xf3f3;</span>');
                r.b("\n" + n);
                r.b("    </div>");
                r.b("\n" + n);
                r.b('    <div class="mp-ticket-info-content">');
                r.b("\n" + n);
                if (r.s(r.d("ticketInfo.useInfoTitle", e, t, 1), e, t, 0, 435, 602, "{{ }}")) {
                    r.rs(e, t, function(e, t, r) {
                        r.b('            <p class="mp-ticket-info-content-title">');
                        r.b(r.v(r.d("ticketInfo.useInfoTitle", e, t, 0)));
                        r.b("</p>");
                        r.b("\n" + n);
                        r.b('            <p class="mp-ticket-info-desc">');
                        r.b(r.v(r.d("ticketInfo.description", e, t, 0)));
                        r.b("</p>");
                        r.b("\n" + n)
                    });
                    e.pop()
                }
                if (r.s(r.d("ticketInfo.policeTile", e, t, 1), e, t, 0, 665, 1829, "{{ }}")) {
                    r.rs(e, t, function(e, t, r) {
                        r.b('            <p class="mp-ticket-info-content-title">');
                        r.b(r.v(r.d("ticketInfo.policeTile", e, t, 0)));
                        r.b("</p>");
                        r.b("\n" + n);
                        r.b('                <table class="mp-ticket-info-table">');
                        r.b("\n" + n);
                        r.b('                    <tr class="mp-ticket-info-table-title">');
                        r.b("\n" + n);
                        r.b('                        <td class="mp-ticket-info-td mp-td-width">人群</td>');
                        r.b("\n" + n);
                        r.b('                        <td class="mp-ticket-info-td">适用条件</td>');
                        r.b("\n" + n);
                        r.b('                        <td class="mp-ticket-info-td mp-td-width">优待政策</td>');
                        r.b("\n" + n);
                        r.b("                    </tr>");
                        r.b("\n" + n);
                        if (r.s(r.d("ticketInfo.preferentialPolicies.crowdDiscounts", e, t, 1), e, t, 0, 1172, 1744, "{{ }}")) {
                            r.rs(e, t, function(e, t, r) {
                                if (r.s(r.f("policies", e, t, 1), e, t, 0, 1210, 1710, "{{ }}")) {
                                    r.rs(e, t, function(e, t, r) {
                                        r.b('                                <tr class="mp-ticket-info-table-cell">');
                                        r.b("\n" + n);
                                        if (!r.s(r.f("index", e, t, 1), e, t, 1, 0, 0, "")) {
                                            r.b('                                    <td class="mp-ticket-info-td" rowspan=');
                                            r.b(r.v(r.d("policies.length", e, t, 0)));
                                            r.b(">");
                                            r.b(r.v(r.f("crowdType", e, t, 0)));
                                            r.b("</td>");
                                            r.b("\n" + n)
                                        }
                                        r.b('                                <td class="mp-ticket-info-td">');
                                        r.b(r.v(r.f("applicableConditions", e, t, 0)));
                                        r.b("</td>");
                                        r.b("\n" + n);
                                        r.b('                                <td class="mp-ticket-info-td">');
                                        r.b(r.v(r.f("discountContent", e, t, 0)));
                                        r.b("</td>");
                                        r.b("\n" + n);
                                        r.b("                            </tr>");
                                        r.b("\n" + n)
                                    });
                                    e.pop()
                                }
                            });
                            e.pop()
                        }
                        r.b("                </table>");
                        r.b("\n" + n)
                    });
                    e.pop()
                }
                r.b("    </div>");
                r.b("\n" + n);
                r.b("</div>");
                r.b("\n");
                return r.fl()
            },
            partials: {},
            subs: {}
        }.code);
        if (true)
            e.exports = window.QTMPL["ticketinfo"]
    },
    778: function(e, t, n) {
        (function(e) {
            var n = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(e) {
                    return typeof e
                } :
                function(e) {
                    return e && typeof Symbol === "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                };
            var r = false;
            var i = undefined;
            (function(e, s) {
                (false ? "undefined" : n(t)) === "object" && typeof i !== "undefined" ? i.exports = s() : typeof r === "function" && r.amd ? r(s) : e.videojs = s()
            })(typeof window !== "undefined" ? window : undefined, function() {
                function i(e, t) {
                    return t = {
                            exports: {}
                        },
                        e(t, t.exports),
                        t.exports
                }

                function z(e, t) {
                    U(e).forEach(function(n) {
                        return t(e[n], n)
                    })
                }

                function W(e, t) {
                    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
                    return U(e).reduce(function(n, r) {
                        return t(n, e[r], r)
                    }, n)
                }

                function X(e) {
                    for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) {
                        n[r - 1] = arguments[r]
                    }
                    if (Object.assign) {
                        return Object.assign.apply(Object, [e].concat(n))
                    }
                    n.forEach(function(t) {
                        if (!t) {
                            return
                        }
                        z(t, function(t, n) {
                            e[n] = t
                        })
                    });
                    return e
                }

                function V(e) {
                    return !!e && (typeof e === "undefined" ? "undefined" : B(e)) === "object"
                }

                function $(e) {
                    return V(e) && R.call(e) === "[object Object]" && e.constructor === Object
                }

                function Z(e) {
                    return e.replace(/\n\r?\s*/g, "")
                }

                function tt(e, t) {
                    if (!e || !t) {
                        return ""
                    }
                    if (typeof o.getComputedStyle === "function") {
                        var n = o.getComputedStyle(e);
                        return n ? n[t] : ""
                    }
                    return e.currentStyle[t] || ""
                }

                function rt(e) {
                    return typeof e === "string" && /\S/.test(e)
                }

                function it(e) {
                    if (/\s/.test(e)) {
                        throw new Error("class has illegal whitespace characters")
                    }
                }

                function st(e) {
                    return new RegExp("(^|\\s)" + e + "($|\\s)")
                }

                function ot() {
                    return h === o.document && typeof h.createElement !== "undefined"
                }

                function ut(e) {
                    return V(e) && e.nodeType === 1
                }

                function at() {
                    try {
                        return o.parent !== o.self
                    } catch (e) {
                        return true
                    }
                }

                function ft(e) {
                    return function(t, n) {
                        if (!rt(t)) {
                            return h[e](null)
                        }
                        if (rt(n)) {
                            n = h.querySelector(n)
                        }
                        var r = ut(n) ? n : h;
                        return r[e] && r[e](t)
                    }
                }

                function lt() {
                    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "div";
                    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                    var r = arguments[3];
                    var i = h.createElement(e);
                    Object.getOwnPropertyNames(t).forEach(function(e) {
                        var n = t[e];
                        if (e.indexOf("aria-") !== -1 || e === "role" || e === "type") {
                            Y.warn(et(nt, e, n));
                            i.setAttribute(e, n)
                        } else if (e === "textContent") {
                            ct(i, n)
                        } else {
                            i[e] = n
                        }
                    });
                    Object.getOwnPropertyNames(n).forEach(function(e) {
                        i.setAttribute(e, n[e])
                    });
                    if (r) {
                        Ot(i, r)
                    }
                    return i
                }

                function ct(e, t) {
                    if (typeof e.textContent === "undefined") {
                        e.innerText = t
                    } else {
                        e.textContent = t
                    }
                    return e
                }

                function ht(e, t) {
                    if (t.firstChild) {
                        t.insertBefore(e, t.firstChild)
                    } else {
                        t.appendChild(e)
                    }
                }

                function pt(e, t) {
                    it(t);
                    if (e.classList) {
                        return e.classList.contains(t)
                    }
                    return st(t).test(e.className)
                }

                function dt(e, t) {
                    if (e.classList) {
                        e.classList.add(t)
                    } else if (!pt(e, t)) {
                        e.className = (e.className + " " + t).trim()
                    }
                    return e
                }

                function vt(e, t) {
                    if (e.classList) {
                        e.classList.remove(t)
                    } else {
                        it(t);
                        e.className = e.className.split(/\s+/).filter(function(e) {
                            return e !== t
                        }).join(" ")
                    }
                    return e
                }

                function mt(e, t, n) {
                    var r = pt(e, t);
                    if (typeof n === "function") {
                        n = n(e, t)
                    }
                    if (typeof n !== "boolean") {
                        n = !r
                    }
                    if (n === r) {
                        return
                    }
                    if (n) {
                        dt(e, t)
                    } else {
                        vt(e, t)
                    }
                    return e
                }

                function gt(e, t) {
                    Object.getOwnPropertyNames(t).forEach(function(n) {
                        var r = t[n];
                        if (r === null || typeof r === "undefined" || r === false) {
                            e.removeAttribute(n)
                        } else {
                            e.setAttribute(n, r === true ? "" : r)
                        }
                    })
                }

                function yt(e) {
                    var t = {};
                    var n = "," + "autoplay,controls,playsinline,loop,muted,default,defaultMuted" + ",";
                    if (e && e.attributes && e.attributes.length > 0) {
                        var r = e.attributes;
                        for (var i = r.length - 1; i >= 0; i--) {
                            var s = r[i].name;
                            var o = r[i].value;
                            if (typeof e[s] === "boolean" || n.indexOf("," + s + ",") !== -1) {
                                o = o !== null ? true : false
                            }
                            t[s] = o
                        }
                    }
                    return t
                }

                function bt(e, t) {
                    return e.getAttribute(t)
                }

                function wt(e, t, n) {
                    e.setAttribute(t, n)
                }

                function Et(e, t) {
                    e.removeAttribute(t)
                }

                function St() {
                    h.body.focus();
                    h.onselectstart = function() {
                        return false
                    }
                }

                function xt() {
                    h.onselectstart = function() {
                        return true
                    }
                }

                function Tt(e) {
                    if (e && e.getBoundingClientRect && e.parentNode) {
                        var t = e.getBoundingClientRect();
                        var n = {};
                        ["bottom", "height", "left", "right", "top", "width"].forEach(function(e) {
                            if (t[e] !== undefined) {
                                n[e] = t[e]
                            }
                        });
                        if (!n.height) {
                            n.height = parseFloat(tt(e, "height"))
                        }
                        if (!n.width) {
                            n.width = parseFloat(tt(e, "width"))
                        }
                        return n
                    }
                }

                function Nt(e) {
                    var t = void 0;
                    if (e.getBoundingClientRect && e.parentNode) {
                        t = e.getBoundingClientRect()
                    }
                    if (!t) {
                        return {
                            left: 0,
                            top: 0
                        }
                    }
                    var n = h.documentElement;
                    var r = h.body;
                    var i = n.clientLeft || r.clientLeft || 0;
                    var s = o.pageXOffset || r.scrollLeft;
                    var u = t.left + s - i;
                    var a = n.clientTop || r.clientTop || 0;
                    var f = o.pageYOffset || r.scrollTop;
                    var l = t.top + f - a;
                    return {
                        left: Math.round(u),
                        top: Math.round(l)
                    }
                }

                function Ct(e, t) {
                    var n = {};
                    var r = Nt(e);
                    var i = e.offsetWidth;
                    var s = e.offsetHeight;
                    var o = r.top;
                    var u = r.left;
                    var a = t.pageY;
                    var f = t.pageX;
                    if (t.changedTouches) {
                        f = t.changedTouches[0].pageX;
                        a = t.changedTouches[0].pageY
                    }
                    n.y = Math.max(0, Math.min(1, (o - a + s) / s));
                    n.x = Math.max(0, Math.min(1, (f - u) / i));
                    return n
                }

                function kt(e) {
                    return V(e) && e.nodeType === 3
                }

                function Lt(e) {
                    while (e.firstChild) {
                        e.removeChild(e.firstChild)
                    }
                    return e
                }

                function At(e) {
                    if (typeof e === "function") {
                        e = e()
                    }
                    return (Array.isArray(e) ? e : [e]).map(function(e) {
                        if (typeof e === "function") {
                            e = e()
                        }
                        if (ut(e) || kt(e)) {
                            return e
                        }
                        if (typeof e === "string" && /\S/.test(e)) {
                            return h.createTextNode(e)
                        }
                    }).filter(function(e) {
                        return e
                    })
                }

                function Ot(e, t) {
                    At(t).forEach(function(t) {
                        return e.appendChild(t)
                    });
                    return e
                }

                function Mt(e, t) {
                    return Ot(Lt(e), t)
                }

                function Bt() {
                    return Ht++
                }

                function It(e) {
                    var t = e[Ft];
                    if (!t) {
                        t = e[Ft] = Bt()
                    }
                    if (!jt[t]) {
                        jt[t] = {}
                    }
                    return jt[t]
                }

                function qt(e) {
                    var t = e[Ft];
                    if (!t) {
                        return false
                    }
                    return !!Object.getOwnPropertyNames(jt[t]).length
                }

                function Rt(e) {
                    var t = e[Ft];
                    if (!t) {
                        return
                    }
                    delete jt[t];
                    try {
                        delete e[Ft]
                    } catch (n) {
                        if (e.removeAttribute) {
                            e.removeAttribute(Ft)
                        } else {
                            e[Ft] = null
                        }
                    }
                }

                function Ut(e, t) {
                    var n = It(e);
                    if (n.handlers[t].length === 0) {
                        delete n.handlers[t];
                        if (e.removeEventListener) {
                            e.removeEventListener(t, n.dispatcher, false)
                        } else if (e.detachEvent) {
                            e.detachEvent("on" + t, n.dispatcher)
                        }
                    }
                    if (Object.getOwnPropertyNames(n.handlers).length <= 0) {
                        delete n.handlers;
                        delete n.dispatcher;
                        delete n.disabled
                    }
                    if (Object.getOwnPropertyNames(n).length === 0) {
                        Rt(e)
                    }
                }

                function zt(e, t, n, r) {
                    n.forEach(function(n) {
                        e(t, n, r)
                    })
                }

                function Wt(e) {
                    function t() {
                        return true
                    }

                    function n() {
                        return false
                    }
                    if (!e || !e.isPropagationStopped) {
                        var r = e || o.event;
                        e = {};
                        for (var i in r) {
                            if (i !== "layerX" && i !== "layerY" && i !== "keyLocation" && i !== "webkitMovementX" && i !== "webkitMovementY") {
                                if (!(i === "returnValue" && r.preventDefault)) {
                                    e[i] = r[i]
                                }
                            }
                        }
                        if (!e.target) {
                            e.target = e.srcElement || h
                        }
                        if (!e.relatedTarget) {
                            e.relatedTarget = e.fromElement === e.target ? e.toElement : e.fromElement
                        }
                        e.preventDefault = function() {
                            if (r.preventDefault) {
                                r.preventDefault()
                            }
                            e.returnValue = false;
                            r.returnValue = false;
                            e.defaultPrevented = true
                        };
                        e.defaultPrevented = false;
                        e.stopPropagation = function() {
                            if (r.stopPropagation) {
                                r.stopPropagation()
                            }
                            e.cancelBubble = true;
                            r.cancelBubble = true;
                            e.isPropagationStopped = t
                        };
                        e.isPropagationStopped = n;
                        e.stopImmediatePropagation = function() {
                            if (r.stopImmediatePropagation) {
                                r.stopImmediatePropagation()
                            }
                            e.isImmediatePropagationStopped = t;
                            e.stopPropagation()
                        };
                        e.isImmediatePropagationStopped = n;
                        if (e.clientX !== null && e.clientX !== undefined) {
                            var s = h.documentElement;
                            var u = h.body;
                            e.pageX = e.clientX + (s && s.scrollLeft || u && u.scrollLeft || 0) - (s && s.clientLeft || u && u.clientLeft || 0);
                            e.pageY = e.clientY + (s && s.scrollTop || u && u.scrollTop || 0) - (s && s.clientTop || u && u.clientTop || 0)
                        }
                        e.which = e.charCode || e.keyCode;
                        if (e.button !== null && e.button !== undefined) {
                            e.button = e.button & 1 ? 0 : e.button & 4 ? 1 : e.button & 2 ? 2 : 0
                        }
                    }
                    return e
                }

                function $t(e, t, n) {
                    if (Array.isArray(t)) {
                        return zt($t, e, t, n)
                    }
                    var r = It(e);
                    if (!r.handlers) {
                        r.handlers = {}
                    }
                    if (!r.handlers[t]) {
                        r.handlers[t] = []
                    }
                    if (!n.guid) {
                        n.guid = Bt()
                    }
                    r.handlers[t].push(n);
                    if (!r.dispatcher) {
                        r.disabled = false;
                        r.dispatcher = function(t, n) {
                            if (r.disabled) {
                                return
                            }
                            t = Wt(t);
                            var i = r.handlers[t.type];
                            if (i) {
                                var s = i.slice(0);
                                for (var o = 0, u = s.length; o < u; o++) {
                                    if (t.isImmediatePropagationStopped()) {
                                        break
                                    } else {
                                        try {
                                            s[o].call(e, t, n)
                                        } catch (a) {
                                            Y.error(a)
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if (r.handlers[t].length === 1) {
                        if (e.addEventListener) {
                            var i = false;
                            if (Xt && Vt.indexOf(t) > -1) {
                                i = {
                                    passive: true
                                }
                            }
                            e.addEventListener(t, r.dispatcher, i)
                        } else if (e.attachEvent) {
                            e.attachEvent("on" + t, r.dispatcher)
                        }
                    }
                }

                function Jt(e, t, n) {
                    if (!qt(e)) {
                        return
                    }
                    var r = It(e);
                    if (!r.handlers) {
                        return
                    }
                    if (Array.isArray(t)) {
                        return zt(Jt, e, t, n)
                    }
                    var i = function(n) {
                        r.handlers[n] = [];
                        Ut(e, n)
                    };
                    if (t === undefined) {
                        for (var s in r.handlers) {
                            if (Object.prototype.hasOwnProperty.call(r.handlers || {}, s)) {
                                i(s)
                            }
                        }
                        return
                    }
                    var o = r.handlers[t];
                    if (!o) {
                        return
                    }
                    if (!n) {
                        i(t);
                        return
                    }
                    if (n.guid) {
                        for (var u = 0; u < o.length; u++) {
                            if (o[u].guid === n.guid) {
                                o.splice(u--, 1)
                            }
                        }
                    }
                    Ut(e, t)
                }

                function Kt(e, t, n) {
                    var r = qt(e) ? It(e) : {};
                    var i = e.parentNode || e.ownerDocument;
                    if (typeof t === "string") {
                        t = {
                            type: t,
                            target: e
                        }
                    }
                    t = Wt(t);
                    if (r.dispatcher) {
                        r.dispatcher.call(e, t, n)
                    }
                    if (i && !t.isPropagationStopped() && t.bubbles === true) {
                        Kt.call(null, i, t, n)
                    } else if (!i && !t.defaultPrevented) {
                        var s = It(t.target);
                        if (t.target[t.type]) {
                            s.disabled = true;
                            if (typeof t.target[t.type] === "function") {
                                t.target[t.type]()
                            }
                            s.disabled = false
                        }
                    }
                    return !t.defaultPrevented
                }

                function Qt(e, t, n) {
                    if (Array.isArray(t)) {
                        return zt(Qt, e, t, n)
                    }
                    var r = function i() {
                        Jt(e, t, i);
                        n.apply(this, arguments)
                    };
                    r.guid = n.guid = n.guid || Bt();
                    $t(e, t, r)
                }

                function tn(e, t) {
                    if (t) {
                        Zt = t
                    }
                    o.setTimeout(en, e)
                }

                function mn(e) {
                    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    var n = t.eventBusKey;
                    if (n) {
                        if (!e[n].nodeName) {
                            throw new Error('The eventBusKey "' + n + '" does not refer to an element.')
                        }
                        e.eventBusEl_ = e[n]
                    } else {
                        e.eventBusEl_ = lt("span", {
                            className: "vjs-event-bus"
                        })
                    }
                    X(e, vn);
                    e.on("dispose", function() {
                        return e.off()
                    });
                    return e
                }

                function yn(e, t) {
                    X(e, gn);
                    e.state = X({}, e.state, t);
                    if (typeof e.handleStateChanged === "function" && an(e)) {
                        e.on("statechanged", e.handleStateChanged)
                    }
                    return e
                }

                function bn(e) {
                    if (typeof e !== "string") {
                        return e
                    }
                    return e.charAt(0).toUpperCase() + e.slice(1)
                }

                function wn(e, t) {
                    return bn(e) === bn(t)
                }

                function En() {
                    var e = {};
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++) {
                        n[r] = arguments[r]
                    }
                    n.forEach(function(t) {
                        if (!t) {
                            return
                        }
                        z(t, function(t, n) {
                            if (!$(t)) {
                                e[n] = t;
                                return
                            }
                            if (!$(e[n])) {
                                e[n] = {}
                            }
                            e[n] = En(e[n], t)
                        })
                    });
                    return e
                }

                function xn(e, t, n) {
                    if (typeof t !== "number" || t < 0 || t > n) {
                        throw new Error("Failed to execute '" + e + "' on 'TimeRanges': The index provided (" + t + ") is non-numeric or out of bounds (0-" + n + ").")
                    }
                }

                function Tn(e, t, n, r) {
                    xn(e, r, n.length - 1);
                    return n[r][t]
                }

                function Nn(e) {
                    if (e === undefined || e.length === 0) {
                        return {
                            length: 0,
                            start: function() {
                                throw new Error("This TimeRanges object is empty")
                            },
                            end: function() {
                                throw new Error("This TimeRanges object is empty")
                            }
                        }
                    }
                    return {
                        length: e.length,
                        start: Tn.bind(null, "start", 0, e),
                        end: Tn.bind(null, "end", 1, e)
                    }
                }

                function Cn(e, t) {
                    if (Array.isArray(e)) {
                        return Nn(e)
                    } else if (e === undefined || t === undefined) {
                        return Nn()
                    }
                    return Nn([
                        [e, t]
                    ])
                }

                function kn(e, t) {
                    var n = 0;
                    var r = void 0;
                    var i = void 0;
                    if (!t) {
                        return 0
                    }
                    if (!e || !e.length) {
                        e = Cn(0, 0)
                    }
                    for (var s = 0; s < e.length; s++) {
                        r = e.start(s);
                        i = e.end(s);
                        if (i > t) {
                            i = t
                        }
                        n += i - r
                    }
                    return n / t
                }

                function Pn(e) {
                    if (e instanceof Pn) {
                        return e
                    }
                    if (typeof e === "number") {
                        this.code = e
                    } else if (typeof e === "string") {
                        this.message = e
                    } else if (V(e)) {
                        if (typeof e.code === "number") {
                            this.code = e.code
                        }
                        X(this, e)
                    }
                    if (!this.message) {
                        this.message = Pn.defaultMessages[this.code] || ""
                    }
                }

                function jn(e, t) {
                    var n;
                    var r = null;
                    try {
                        n = JSON.parse(e, t)
                    } catch (i) {
                        r = i
                    }
                    return [r, n]
                }

                function hr(e) {
                    var t = cr.call(e);
                    return t === "[object Function]" || typeof e === "function" && t !== "[object RegExp]" || typeof window !== "undefined" && (e === window.setTimeout || e === window.alert || e === window.confirm || e === window.prompt)
                }

                function gr(e, t, n) {
                    if (!lr(t)) {
                        throw new TypeError("iterator must be a function")
                    }
                    if (arguments.length < 3) {
                        n = this
                    }
                    if (vr.call(e) === "[object Array]")
                        yr(e, t, n);
                    else if (typeof e === "string")
                        br(e, t, n);
                    else
                        wr(e, t, n)
                }

                function yr(e, t, n) {
                    for (var r = 0, i = e.length; r < i; r++) {
                        if (mr.call(e, r)) {
                            t.call(n, e[r], r, e)
                        }
                    }
                }

                function br(e, t, n) {
                    for (var r = 0, i = e.length; r < i; r++) {
                        t.call(n, e.charAt(r), r, e)
                    }
                }

                function wr(e, t, n) {
                    for (var r in e) {
                        if (mr.call(e, r)) {
                            t.call(n, e[r], r, e)
                        }
                    }
                }

                function Nr() {
                    var e = {};
                    for (var t = 0; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) {
                            if (Tr.call(n, r)) {
                                e[r] = n[r]
                            }
                        }
                    }
                    return e
                }

                function kr(e, t) {
                    for (var n = 0; n < e.length; n++) {
                        t(e[n])
                    }
                }

                function Lr(e) {
                    for (var t in e) {
                        if (e.hasOwnProperty(t))
                            return false
                    }
                    return true
                }

                function Ar(e, t, n) {
                    var r = e;
                    if (lr(t)) {
                        n = t;
                        if (typeof e === "string") {
                            r = {
                                uri: e
                            }
                        }
                    } else {
                        r = xr(t, {
                            uri: e
                        })
                    }
                    r.callback = n;
                    return r
                }

                function Or(e, t, n) {
                    t = Ar(e, t, n);
                    return Mr(t)
                }

                function Mr(e) {
                    function r() {
                        if (u.readyState === 4) {
                            setTimeout(o, 0)
                        }
                    }

                    function i() {
                        var e = undefined;
                        if (u.response) {
                            e = u.response
                        } else {
                            e = u.responseText || _r(u)
                        }
                        if (v) {
                            try {
                                e = JSON.parse(e)
                            } catch (t) {}
                        }
                        return e
                    }

                    function s(e) {
                        clearTimeout(m);
                        if (!(e instanceof Error)) {
                            e = new Error("" + (e || "Unknown XMLHttpRequest Error"))
                        }
                        e.statusCode = 0;
                        return n(e, g)
                    }

                    function o() {
                        if (f)
                            return;
                        var t;
                        clearTimeout(m);
                        if (e.useXDR && u.status === undefined) {
                            t = 200
                        } else {
                            t = u.status === 1223 ? 204 : u.status
                        }
                        var r = g;
                        var s = null;
                        if (t !== 0) {
                            r = {
                                body: i(),
                                statusCode: t,
                                method: c,
                                headers: {},
                                url: l,
                                rawRequest: u
                            };
                            if (u.getAllResponseHeaders) {
                                r.headers = Sr(u.getAllResponseHeaders())
                            }
                        } else {
                            s = new Error("Internal XMLHttpRequest Error")
                        }
                        return n(s, r, r.body)
                    }
                    if (typeof e.callback === "undefined") {
                        throw new Error("callback argument missing")
                    }
                    var t = false;
                    var n = function(r, i, s) {
                        if (!t) {
                            t = true;
                            e.callback(r, i, s)
                        }
                    };
                    var u = e.xhr || null;
                    if (!u) {
                        if (e.cors || e.useXDR) {
                            u = new Or.XDomainRequest
                        } else {
                            u = new Or.XMLHttpRequest
                        }
                    }
                    var a;
                    var f;
                    var l = u.url = e.uri || e.url;
                    var c = u.method = e.method || "GET";
                    var h = e.body || e.data;
                    var p = u.headers = e.headers || {};
                    var d = !!e.sync;
                    var v = false;
                    var m;
                    var g = {
                        body: undefined,
                        headers: {},
                        statusCode: 0,
                        method: c,
                        url: l,
                        rawRequest: u
                    };
                    if ("json" in e && e.json !== false) {
                        v = true;
                        p["accept"] || p["Accept"] || (p["Accept"] = "application/json");
                        if (c !== "GET" && c !== "HEAD") {
                            p["content-type"] || p["Content-Type"] || (p["Content-Type"] = "application/json");
                            h = JSON.stringify(e.json === true ? h : e.json)
                        }
                    }
                    u.onreadystatechange = r;
                    u.onload = o;
                    u.onerror = s;
                    u.onprogress = function() {};
                    u.onabort = function() {
                        f = true
                    };
                    u.ontimeout = s;
                    u.open(c, l, !d, e.username, e.password);
                    if (!d) {
                        u.withCredentials = !!e.withCredentials
                    }
                    if (!d && e.timeout > 0) {
                        m = setTimeout(function() {
                            if (f)
                                return;
                            f = true;
                            u.abort("timeout");
                            var e = new Error("XMLHttpRequest timeout");
                            e.code = "ETIMEDOUT";
                            s(e)
                        }, e.timeout)
                    }
                    if (u.setRequestHeader) {
                        for (a in p) {
                            if (p.hasOwnProperty(a)) {
                                u.setRequestHeader(a, p[a])
                            }
                        }
                    } else if (e.headers && !Lr(e.headers)) {
                        throw new Error("Headers cannot be set on an XDomainRequest object")
                    }
                    if ("responseType" in e) {
                        u.responseType = e.responseType
                    }
                    if ("beforeSend" in e && typeof e.beforeSend === "function") {
                        e.beforeSend(u)
                    }
                    u.send(h || null);
                    return u
                }

                function _r(e) {
                    if (e.responseType === "document") {
                        return e.responseXML
                    }
                    var t = e.responseXML && e.responseXML.documentElement.nodeName === "parsererror";
                    if (e.responseType === "" && !t) {
                        return e.responseXML
                    }
                    return null
                }

                function Dr() {}

                function Jr(e, t) {
                    this.name = "ParsingError";
                    this.code = e.code;
                    this.message = t || e.message
                }

                function Kr(e) {
                    function t(e, t, n, r) {
                        return (e | 0) * 3600 + (t | 0) * 60 + (n | 0) + (r | 0) / 1e3
                    }
                    var n = e.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
                    if (!n) {
                        return null
                    }
                    if (n[3]) {
                        return t(n[1], n[2], n[3].replace(":", ""), n[4])
                    } else if (n[1] > 59) {
                        return t(n[1], n[2], 0, n[4])
                    } else {
                        return t(0, n[1], n[2], n[4])
                    }
                }

                function Qr() {
                    this.values = $r(null)
                }

                function Gr(e, t, n, r) {
                    var i = r ? e.split(r) : [e];
                    for (var s in i) {
                        if (typeof i[s] !== "string") {
                            continue
                        }
                        var o = i[s].split(n);
                        if (o.length !== 2) {
                            continue
                        }
                        var u = o[0];
                        var a = o[1];
                        t(u, a)
                    }
                }

                function Yr(e, t, n) {
                    function i() {
                        var t = Kr(e);
                        if (t === null) {
                            throw new Jr(Jr.Errors.BadTimeStamp, "Malformed timestamp: " + r)
                        }
                        e = e.replace(/^[^\sa-zA-Z-]+/, "");
                        return t
                    }

                    function s(e, t) {
                        var r = new Qr;
                        Gr(e, function(e, t) {
                            switch (e) {
                                case "region":
                                    for (var i = n.length - 1; i >= 0; i--) {
                                        if (n[i].id === t) {
                                            r.set(e, n[i].region);
                                            break
                                        }
                                    }
                                    break;
                                case "vertical":
                                    r.alt(e, t, ["rl", "lr"]);
                                    break;
                                case "line":
                                    var s = t.split(","),
                                        o = s[0];
                                    r.integer(e, o);
                                    r.percent(e, o) ? r.set("snapToLines", false) : null;
                                    r.alt(e, o, ["auto"]);
                                    if (s.length === 2) {
                                        r.alt("lineAlign", s[1], ["start", "middle", "end"])
                                    }
                                    break;
                                case "position":
                                    s = t.split(",");
                                    r.percent(e, s[0]);
                                    if (s.length === 2) {
                                        r.alt("positionAlign", s[1], ["start", "middle", "end"])
                                    }
                                    break;
                                case "size":
                                    r.percent(e, t);
                                    break;
                                case "align":
                                    r.alt(e, t, ["start", "middle", "end", "left", "right"]);
                                    break
                            }
                        }, /:/, /\s/);
                        t.region = r.get("region", null);
                        t.vertical = r.get("vertical", "");
                        t.line = r.get("line", "auto");
                        t.lineAlign = r.get("lineAlign", "start");
                        t.snapToLines = r.get("snapToLines", true);
                        t.size = r.get("size", 100);
                        t.align = r.get("align", "middle");
                        t.position = r.get("position", {
                            start: 0,
                            left: 0,
                            middle: 50,
                            end: 100,
                            right: 100
                        }, t.align);
                        t.positionAlign = r.get("positionAlign", {
                            start: "start",
                            left: "start",
                            middle: "middle",
                            end: "end",
                            right: "end"
                        }, t.align)
                    }

                    function o() {
                        e = e.replace(/^\s+/, "")
                    }
                    var r = e;
                    o();
                    t.startTime = i();
                    o();
                    if (e.substr(0, 3) !== "-->") {
                        throw new Jr(Jr.Errors.BadTimeStamp, "Malformed time stamp (time stamps must be separated by '-->'): " + r)
                    }
                    e = e.substr(3);
                    o();
                    t.endTime = i();
                    o();
                    s(e, t)
                }

                function ri(e, t) {
                    function n() {
                        function e(e) {
                            t = t.substr(e.length);
                            return e
                        }
                        if (!t) {
                            return null
                        }
                        var n = t.match(/^([^<]*)(<[^>]+>?)?/);
                        return e(n[1] ? n[1] : n[2])
                    }

                    function r(e) {
                        return Zr[e]
                    }

                    function i(e) {
                        while (p = e.match(/&(amp|lt|gt|lrm|rlm|nbsp);/)) {
                            e = e.replace(p[0], r)
                        }
                        return e
                    }

                    function s(e, t) {
                        return !ni[t.localName] || ni[t.localName] === e.localName
                    }

                    function o(t, n) {
                        var r = ei[t];
                        if (!r) {
                            return null
                        }
                        var i = e.document.createElement(r);
                        i.localName = r;
                        var s = ti[t];
                        if (s && n) {
                            i[s] = n.trim()
                        }
                        return i
                    }
                    var u = e.document.createElement("div"),
                        a = u,
                        f, l = [];
                    while ((f = n()) !== null) {
                        if (f[0] === "<") {
                            if (f[1] === "/") {
                                if (l.length && l[l.length - 1] === f.substr(2).replace(">", "")) {
                                    l.pop();
                                    a = a.parentNode
                                }
                                continue
                            }
                            var c = Kr(f.substr(1, f.length - 2));
                            var h;
                            if (c) {
                                h = e.document.createProcessingInstruction("timestamp", c);
                                a.appendChild(h);
                                continue
                            }
                            var p = f.match(/^<([^.\s/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/);
                            if (!p) {
                                continue
                            }
                            h = o(p[1], p[3]);
                            if (!h) {
                                continue
                            }
                            if (!s(a, h)) {
                                continue
                            }
                            if (p[2]) {
                                h.className = p[2].substr(1).replace(".", " ")
                            }
                            l.push(p[1]);
                            a.appendChild(h);
                            a = h;
                            continue
                        }
                        a.appendChild(e.document.createTextNode(i(f)))
                    }
                    return u
                }

                function si(e) {
                    for (var t = 0; t < ii.length; t++) {
                        var n = ii[t];
                        if (e >= n[0] && e <= n[1]) {
                            return true
                        }
                    }
                    return false
                }

                function oi(e) {
                    function i(e, t) {
                        for (var n = t.childNodes.length - 1; n >= 0; n--) {
                            e.push(t.childNodes[n])
                        }
                    }

                    function s(e) {
                        if (!e || !e.length) {
                            return null
                        }
                        var t = e.pop(),
                            n = t.textContent || t.innerText;
                        if (n) {
                            var r = n.match(/^.*(\n|\r)/);
                            if (r) {
                                e.length = 0;
                                return r[0]
                            }
                            return n
                        }
                        if (t.tagName === "ruby") {
                            return s(e)
                        }
                        if (t.childNodes) {
                            i(e, t);
                            return s(e)
                        }
                    }
                    var t = [],
                        n = "",
                        r;
                    if (!e || !e.childNodes) {
                        return "ltr"
                    }
                    i(t, e);
                    while (n = s(t)) {
                        for (var o = 0; o < n.length; o++) {
                            r = n.charCodeAt(o);
                            if (si(r)) {
                                return "rtl"
                            }
                        }
                    }
                    return "ltr"
                }

                function ui(e) {
                    if (typeof e.line === "number" && (e.snapToLines || e.line >= 0 && e.line <= 100)) {
                        return e.line
                    }
                    if (!e.track || !e.track.textTrackList || !e.track.textTrackList.mediaElement) {
                        return -1
                    }
                    var t = e.track,
                        n = t.textTrackList,
                        r = 0;
                    for (var i = 0; i < n.length && n[i] !== t; i++) {
                        if (n[i].mode === "showing") {
                            r++
                        }
                    }
                    return ++r * -1
                }

                function ai() {}

                function fi(e, t, n) {
                    var r = /MSIE\s8\.0/.test(navigator.userAgent);
                    var i = "rgba(255, 255, 255, 1)";
                    var s = "rgba(0, 0, 0, 0.8)";
                    if (r) {
                        i = "rgb(255, 255, 255)";
                        s = "rgb(0, 0, 0)"
                    }
                    ai.call(this);
                    this.cue = t;
                    this.cueDiv = ri(e, t.text);
                    var o = {
                        color: i,
                        backgroundColor: s,
                        position: "relative",
                        left: 0,
                        right: 0,
                        top: 0,
                        bottom: 0,
                        display: "inline"
                    };
                    if (!r) {
                        o.writingMode = t.vertical === "" ? "horizontal-tb" : t.vertical === "lr" ? "vertical-lr" : "vertical-rl";
                        o.unicodeBidi = "plaintext"
                    }
                    this.applyStyles(o, this.cueDiv);
                    this.div = e.document.createElement("div");
                    o = {
                        textAlign: t.align === "middle" ? "center" : t.align,
                        font: n.font,
                        whiteSpace: "pre-line",
                        position: "absolute"
                    };
                    if (!r) {
                        o.direction = oi(this.cueDiv);
                        o.writingMode = t.vertical === "" ? "horizontal-tb" : t.vertical === "lr" ? "vertical-lr" : "vertical-rl".stylesunicodeBidi = "plaintext"
                    }
                    this.applyStyles(o);
                    this.div.appendChild(this.cueDiv);
                    var u = 0;
                    switch (t.positionAlign) {
                        case "start":
                            u = t.position;
                            break;
                        case "middle":
                            u = t.position - t.size / 2;
                            break;
                        case "end":
                            u = t.position - t.size;
                            break
                    }
                    if (t.vertical === "") {
                        this.applyStyles({
                            left: this.formatStyle(u, "%"),
                            width: this.formatStyle(t.size, "%")
                        })
                    } else {
                        this.applyStyles({
                            top: this.formatStyle(u, "%"),
                            height: this.formatStyle(t.size, "%")
                        })
                    }
                    this.move = function(e) {
                        this.applyStyles({
                            top: this.formatStyle(e.top, "px"),
                            bottom: this.formatStyle(e.bottom, "px"),
                            left: this.formatStyle(e.left, "px"),
                            right: this.formatStyle(e.right, "px"),
                            height: this.formatStyle(e.height, "px"),
                            width: this.formatStyle(e.width, "px")
                        })
                    }
                }

                function li(e) {
                    var t = /MSIE\s8\.0/.test(navigator.userAgent);
                    var n, r, i, s;
                    if (e.div) {
                        r = e.div.offsetHeight;
                        i = e.div.offsetWidth;
                        s = e.div.offsetTop;
                        var o = (o = e.div.childNodes) && (o = o[0]) && o.getClientRects && o.getClientRects();
                        e = e.div.getBoundingClientRect();
                        n = o ? Math.max(o[0] && o[0].height || 0, e.height / o.length) : 0
                    }
                    this.left = e.left;
                    this.right = e.right;
                    this.top = e.top || s;
                    this.height = e.height || r;
                    this.bottom = e.bottom || s + (e.height || r);
                    this.width = e.width || i;
                    this.lineHeight = n !== undefined ? n : e.lineHeight;
                    if (t && !this.lineHeight) {
                        this.lineHeight = 13
                    }
                }

                function ci(e, t, n, r) {
                    function i(e, t) {
                        var i, s = new li(e),
                            o = 1;
                        for (var u = 0; u < t.length; u++) {
                            while (e.overlapsOppositeAxis(n, t[u]) || e.within(n) && e.overlapsAny(r)) {
                                e.move(t[u])
                            }
                            if (e.within(n)) {
                                return e
                            }
                            var a = e.intersectPercentage(n);
                            if (o > a) {
                                i = new li(e);
                                o = a
                            }
                            e = new li(s)
                        }
                        return i || s
                    }
                    var s = new li(t),
                        o = t.cue,
                        u = ui(o),
                        a = [];
                    if (o.snapToLines) {
                        var f;
                        switch (o.vertical) {
                            case "":
                                a = ["+y", "-y"];
                                f = "height";
                                break;
                            case "rl":
                                a = ["+x", "-x"];
                                f = "width";
                                break;
                            case "lr":
                                a = ["-x", "+x"];
                                f = "width";
                                break
                        }
                        var l = s.lineHeight,
                            c = l * Math.round(u),
                            h = n[f] + l,
                            p = a[0];
                        if (Math.abs(c) > h) {
                            c = c < 0 ? -1 : 1;
                            c *= Math.ceil(h / l) * l
                        }
                        if (u < 0) {
                            c += o.vertical === "" ? n.height : n.width;
                            a = a.reverse()
                        }
                        s.move(p, c)
                    } else {
                        var d = s.lineHeight / n.height * 100;
                        switch (o.lineAlign) {
                            case "middle":
                                u -= d / 2;
                                break;
                            case "end":
                                u -= d;
                                break
                        }
                        switch (o.vertical) {
                            case "":
                                t.applyStyles({
                                    top: t.formatStyle(u, "%")
                                });
                                break;
                            case "rl":
                                t.applyStyles({
                                    left: t.formatStyle(u, "%")
                                });
                                break;
                            case "lr":
                                t.applyStyles({
                                    right: t.formatStyle(u, "%")
                                });
                                break
                        }
                        a = ["+y", "-x", "+x", "-y"];
                        s = new li(t)
                    }
                    var v = i(s, a);
                    t.move(v.toCSSCompatValues(n))
                }

                function hi() {}

                function wi(e) {
                    if (typeof e !== "string") {
                        return false
                    }
                    var t = yi[e.toLowerCase()];
                    return t ? e.toLowerCase() : false
                }

                function Ei(e) {
                    if (typeof e !== "string") {
                        return false
                    }
                    var t = bi[e.toLowerCase()];
                    return t ? e.toLowerCase() : false
                }

                function Si(e) {
                    var t = 1;
                    for (; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) {
                            e[r] = n[r]
                        }
                    }
                    return e
                }

                function xi(e, t, n) {
                    var r = this;
                    var i = /MSIE\s8\.0/.test(navigator.userAgent);
                    var s = {};
                    if (i) {
                        r = document.createElement("custom")
                    } else {
                        s.enumerable = true
                    }
                    r.hasBeenReset = false;
                    var o = "";
                    var u = false;
                    var a = e;
                    var f = t;
                    var l = n;
                    var c = null;
                    var h = "";
                    var p = true;
                    var d = "auto";
                    var v = "start";
                    var m = 50;
                    var g = "middle";
                    var y = 50;
                    var b = "middle";
                    Object.defineProperty(r, "id", Si({}, s, {
                        get: function() {
                            return o
                        },
                        set: function(t) {
                            o = "" + t
                        }
                    }));
                    Object.defineProperty(r, "pauseOnExit", Si({}, s, {
                        get: function() {
                            return u
                        },
                        set: function(t) {
                            u = !!t
                        }
                    }));
                    Object.defineProperty(r, "startTime", Si({}, s, {
                        get: function() {
                            return a
                        },
                        set: function(t) {
                            if (typeof t !== "number") {
                                throw new TypeError("Start time must be set to a number.")
                            }
                            a = t;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "endTime", Si({}, s, {
                        get: function() {
                            return f
                        },
                        set: function(t) {
                            if (typeof t !== "number") {
                                throw new TypeError("End time must be set to a number.")
                            }
                            f = t;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "text", Si({}, s, {
                        get: function() {
                            return l
                        },
                        set: function(t) {
                            l = "" + t;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "region", Si({}, s, {
                        get: function() {
                            return c
                        },
                        set: function(t) {
                            c = t;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "vertical", Si({}, s, {
                        get: function() {
                            return h
                        },
                        set: function(t) {
                            var n = wi(t);
                            if (n === false) {
                                throw new SyntaxError("An invalid or illegal string was specified.")
                            }
                            h = n;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "snapToLines", Si({}, s, {
                        get: function() {
                            return p
                        },
                        set: function(t) {
                            p = !!t;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "line", Si({}, s, {
                        get: function() {
                            return d
                        },
                        set: function(t) {
                            if (typeof t !== "number" && t !== gi) {
                                throw new SyntaxError("An invalid number or illegal string was specified.")
                            }
                            d = t;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "lineAlign", Si({}, s, {
                        get: function() {
                            return v
                        },
                        set: function(t) {
                            var n = Ei(t);
                            if (!n) {
                                throw new SyntaxError("An invalid or illegal string was specified.")
                            }
                            v = n;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "position", Si({}, s, {
                        get: function() {
                            return m
                        },
                        set: function(t) {
                            if (t < 0 || t > 100) {
                                throw new Error("Position must be between 0 and 100.")
                            }
                            m = t;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "positionAlign", Si({}, s, {
                        get: function() {
                            return g
                        },
                        set: function(t) {
                            var n = Ei(t);
                            if (!n) {
                                throw new SyntaxError("An invalid or illegal string was specified.")
                            }
                            g = n;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "size", Si({}, s, {
                        get: function() {
                            return y
                        },
                        set: function(t) {
                            if (t < 0 || t > 100) {
                                throw new Error("Size must be between 0 and 100.")
                            }
                            y = t;
                            this.hasBeenReset = true
                        }
                    }));
                    Object.defineProperty(r, "align", Si({}, s, {
                        get: function() {
                            return b
                        },
                        set: function(t) {
                            var n = Ei(t);
                            if (!n) {
                                throw new SyntaxError("An invalid or illegal string was specified.")
                            }
                            b = n;
                            this.hasBeenReset = true
                        }
                    }));
                    r.displayState = undefined;
                    if (i) {
                        return r
                    }
                }

                function Ci(e) {
                    if (typeof e !== "string") {
                        return false
                    }
                    var t = Ni[e.toLowerCase()];
                    return t ? e.toLowerCase() : false
                }

                function ki(e) {
                    return typeof e === "number" && e >= 0 && e <= 100
                }

                function Li() {
                    var e = 100;
                    var t = 3;
                    var n = 0;
                    var r = 100;
                    var i = 0;
                    var s = 100;
                    var o = "";
                    Object.defineProperties(this, {
                        width: {
                            enumerable: true,
                            get: function() {
                                return e
                            },
                            set: function(n) {
                                if (!ki(n)) {
                                    throw new Error("Width must be between 0 and 100.")
                                }
                                e = n
                            }
                        },
                        lines: {
                            enumerable: true,
                            get: function() {
                                return t
                            },
                            set: function(n) {
                                if (typeof n !== "number") {
                                    throw new TypeError("Lines must be set to a number.")
                                }
                                t = n
                            }
                        },
                        regionAnchorY: {
                            enumerable: true,
                            get: function() {
                                return r
                            },
                            set: function(t) {
                                if (!ki(t)) {
                                    throw new Error("RegionAnchorX must be between 0 and 100.")
                                }
                                r = t
                            }
                        },
                        regionAnchorX: {
                            enumerable: true,
                            get: function() {
                                return n
                            },
                            set: function(t) {
                                if (!ki(t)) {
                                    throw new Error("RegionAnchorY must be between 0 and 100.")
                                }
                                n = t
                            }
                        },
                        viewportAnchorY: {
                            enumerable: true,
                            get: function() {
                                return s
                            },
                            set: function(t) {
                                if (!ki(t)) {
                                    throw new Error("ViewportAnchorY must be between 0 and 100.")
                                }
                                s = t
                            }
                        },
                        viewportAnchorX: {
                            enumerable: true,
                            get: function() {
                                return i
                            },
                            set: function(t) {
                                if (!ki(t)) {
                                    throw new Error("ViewportAnchorX must be between 0 and 100.")
                                }
                                i = t
                            }
                        },
                        scroll: {
                            enumerable: true,
                            get: function() {
                                return o
                            },
                            set: function(t) {
                                var n = Ci(t);
                                if (n === false) {
                                    throw new SyntaxError("An invalid or illegal string was specified.")
                                }
                                o = n
                            }
                        }
                    })
                }

                function Mi(e, t, n, r) {
                    var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
                    var s = e.textTracks();
                    i.kind = t;
                    if (n) {
                        i.label = n
                    }
                    if (r) {
                        i.language = r
                    }
                    i.tech = e;
                    var o = new Vr.text.TrackClass(i);
                    s.addTrack(o);
                    return o
                }

                function Pi(e, t) {
                    Di[e] = Di[e] || [];
                    Di[e].push(t)
                }

                function Hi(e, t, n) {
                    e.setTimeout(function() {
                        return Ui(t, Di[t.type], n, e)
                    }, 1)
                }

                function Bi(e, t) {
                    e.forEach(function(e) {
                        return e.setTech && e.setTech(t)
                    })
                }

                function ji(e, t, n) {
                    return e.reduceRight(Ri(n), t[n]())
                }

                function Fi(e, t, n, r) {
                    return t[n](e.reduce(Ri(n), r))
                }

                function Ri(e) {
                    return function(t, n) {
                        if (n[e]) {
                            return n[e](t)
                        }
                        return t
                    }
                }

                function Ui() {
                    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
                    var n = arguments[2];
                    var r = arguments[3];
                    var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
                    var s = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
                    var o = t[0],
                        u = t.slice(1);
                    if (typeof o === "string") {
                        Ui(e, Di[o], n, r, i, s)
                    } else if (o) {
                        var a = o(r);
                        a.setSource(X({}, e), function(t, o) {
                            if (t) {
                                return Ui(e, u, n, r, i, s)
                            }
                            i.push(a);
                            Ui(o, e.type === o.type ? u : Di[o.type], n, r, i, s)
                        })
                    } else if (u.length) {
                        Ui(e, u, n, r, i, s)
                    } else if (s) {
                        n(e, i)
                    } else {
                        Ui(e, Di["*"], n, r, i, true)
                    }
                }

                function Qi(e, t) {
                    return "rgba(" + parseInt(e[1] + e[1], 16) + "," + parseInt(e[2] + e[2], 16) + "," + parseInt(e[3] + e[3], 16) + "," + t + ")"
                }

                function Gi(e, t, n) {
                    try {
                        e.style[t] = n
                    } catch (r) {
                        return
                    }
                }

                function is(e) {
                    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : e;
                    e = e < 0 ? 0 : e;
                    var n = Math.floor(e % 60);
                    var r = Math.floor(e / 60 % 60);
                    var i = Math.floor(e / 3600);
                    var s = Math.floor(t / 60 % 60);
                    var o = Math.floor(t / 3600);
                    if (isNaN(e) || e === Infinity) {
                        i = r = n = "-"
                    }
                    i = i > 0 || o > 0 ? i + ":" : "";
                    r = ((i || s >= 10) && r < 10 ? "0" + r : r) + ":";
                    n = n < 10 ? "0" + n : n;
                    return i + r + n
                }

                function ao(e, t) {
                    if (t) {
                        e = t(e)
                    }
                    if (e && e !== "none") {
                        return e
                    }
                }

                function fo(e, t) {
                    var n = e.options[e.options.selectedIndex].value;
                    return ao(n, t)
                }

                function lo(e, t, n) {
                    if (!t) {
                        return
                    }
                    for (var r = 0; r < e.options.length; r++) {
                        if (ao(e.options[r].value, n) === t) {
                            e.selectedIndex = r;
                            break
                        }
                    }
                }

                function Ho(e, t, n) {
                    var r = void 0;
                    if (typeof e === "string") {
                        var i = Ho.getPlayers();
                        if (e.indexOf("#") === 0) {
                            e = e.slice(1)
                        }
                        if (i[e]) {
                            if (t) {
                                Y.warn('Player "' + e + '" is already initialised. Options will not be applied.')
                            }
                            if (n) {
                                i[e].ready(n)
                            }
                            return i[e]
                        }
                        r = _t("#" + e)
                    } else {
                        r = e
                    }
                    if (!r || !r.nodeName) {
                        throw new TypeError("The element or ID supplied is not valid. (videojs)")
                    }
                    if (ut(r) && !h.body.contains(r)) {
                        Y.warn("The element supplied is not included in the DOM")
                    }
                    if (r.player || Eo.players[r.playerId]) {
                        return r.player || Eo.players[r.playerId]
                    }
                    t = t || {};
                    Ho.hooks("beforesetup").forEach(function(e) {
                        var n = e(r, En(t));
                        if (!V(n) || Array.isArray(n)) {
                            Y.error("please return an object in beforesetup hooks");
                            return
                        }
                        t = En(t, n)
                    });
                    var s = Sn.getComponent("Player");
                    var o = new s(r, t, n);
                    Ho.hooks("setup").forEach(function(e) {
                        return e(o)
                    });
                    return o
                }
                var t = "6.4.0";
                var r = typeof window !== "undefined" ? window : typeof e !== "undefined" ? e : typeof self !== "undefined" ? self : {};
                var s;
                if (typeof window !== "undefined") {
                    s = window
                } else if (typeof r !== "undefined") {
                    s = r
                } else if (typeof self !== "undefined") {
                    s = self
                } else {
                    s = {}
                }
                var o = s;
                var u = {};
                var a = (Object.freeze || Object)({
                    "default": u
                });
                var f = a && u || a;
                var l = typeof r !== "undefined" ? r : typeof window !== "undefined" ? window : {};
                var c;
                if (typeof document !== "undefined") {
                    c = document
                } else {
                    c = l["__GLOBAL_DOCUMENT_CACHE@4"];
                    if (!c) {
                        c = l["__GLOBAL_DOCUMENT_CACHE@4"] = f
                    }
                }
                var h = c;
                var p = o.navigator && o.navigator.userAgent || "";
                var d = /AppleWebKit\/([\d.]+)/i.exec(p);
                var v = d ? parseFloat(d.pop()) : null;
                var m = /iPad/i.test(p);
                var g = /iPhone/i.test(p) && !m;
                var y = /iPod/i.test(p);
                var b = g || m || y;
                var w = function() {
                    var e = p.match(/OS (\d+)_/i);
                    if (e && e[1]) {
                        return e[1]
                    }
                    return null
                }();
                var E = /Android/i.test(p);
                var S = function() {
                    var e = p.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
                    if (!e) {
                        return null
                    }
                    var t = e[1] && parseFloat(e[1]);
                    var n = e[2] && parseFloat(e[2]);
                    if (t && n) {
                        return parseFloat(e[1] + "." + e[2])
                    } else if (t) {
                        return t
                    }
                    return null
                }();
                var x = E && /webkit/i.test(p) && S < 2.3;
                var T = E && S < 5 && v < 537;
                var N = /Firefox/i.test(p);
                var C = /Edge/i.test(p);
                var k = !C && /Chrome/i.test(p);
                var L = function() {
                    var e = p.match(/Chrome\/(\d+)/);
                    if (e && e[1]) {
                        return parseFloat(e[1])
                    }
                    return null
                }();
                var A = /MSIE\s8\.0/.test(p);
                var O = function() {
                    var e = /MSIE\s(\d+)\.\d/.exec(p);
                    var t = e && parseFloat(e[1]);
                    if (!t && /Trident\/7.0/i.test(p) && /rv:11.0/.test(p)) {
                        t = 11
                    }
                    return t
                }();
                var M = /Safari/i.test(p) && !k && !E && !C;
                var _ = M || b;
                var D = ot() && ("ontouchstart" in o || o.DocumentTouch && o.document instanceof o.DocumentTouch);
                var P = ot() && "backgroundSize" in o.document.createElement("video").style;
                var H = (Object.freeze || Object)({
                    IS_IPAD: m,
                    IS_IPHONE: g,
                    IS_IPOD: y,
                    IS_IOS: b,
                    IOS_VERSION: w,
                    IS_ANDROID: E,
                    ANDROID_VERSION: S,
                    IS_OLD_ANDROID: x,
                    IS_NATIVE_ANDROID: T,
                    IS_FIREFOX: N,
                    IS_EDGE: C,
                    IS_CHROME: k,
                    CHROME_VERSION: L,
                    IS_IE8: A,
                    IE_VERSION: O,
                    IS_SAFARI: M,
                    IS_ANY_SAFARI: _,
                    TOUCH_ENABLED: D,
                    BACKGROUND_SIZE_SUPPORTED: P
                });
                var B = typeof Symbol === "function" && n(Symbol.iterator) === "symbol" ? function(e) {
                        return typeof e === "undefined" ? "undefined" : n(e)
                    } :
                    function(e) {
                        return e && typeof Symbol === "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : n(e)
                    };
                var j = function(t, n) {
                    if (!(t instanceof n)) {
                        throw new TypeError("Cannot call a class as a function")
                    }
                };
                var F = function(t, r) {
                    if (typeof r !== "function" && r !== null) {
                        throw new TypeError("Super expression must either be null or a function, not " + (typeof r === "undefined" ? "undefined" : n(r)))
                    }
                    t.prototype = Object.create(r && r.prototype, {
                        constructor: {
                            value: t,
                            enumerable: false,
                            writable: true,
                            configurable: true
                        }
                    });
                    if (r)
                        Object.setPrototypeOf ? Object.setPrototypeOf(t, r) : t.__proto__ = r
                };
                var I = function(t, r) {
                    if (!t) {
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                    }
                    return r && ((typeof r === "undefined" ? "undefined" : n(r)) === "object" || typeof r === "function") ? r : t
                };
                var q = function(t, n) {
                    t.raw = n;
                    return t
                };
                var R = Object.prototype.toString;
                var U = function(t) {
                    return V(t) ? Object.keys(t) : []
                };
                var J = void 0;
                var K = "all";
                var Q = [];
                var G = function(t, n) {
                    var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!O && O < 11;
                    var i = J.levels[K];
                    var s = new RegExp("^(" + i + ")$");
                    if (t !== "log") {
                        n.unshift(t.toUpperCase() + ":")
                    }
                    if (Q) {
                        Q.push([].concat(n))
                    }
                    n.unshift("VIDEOJS:");
                    var u = o.console && o.console[t];
                    if (!u || !i || !s.test(t)) {
                        return
                    }
                    if (r) {
                        n = n.map(function(e) {
                            if (V(e) || Array.isArray(e)) {
                                try {
                                    return JSON.stringify(e)
                                } catch (t) {
                                    return String(e)
                                }
                            }
                            return String(e)
                        }).join(" ")
                    }
                    if (!u.apply) {
                        u(n)
                    } else {
                        u[Array.isArray(n) ? "apply" : "call"](o.console, n)
                    }
                };
                J = function() {
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++) {
                        n[r] = arguments[r]
                    }
                    G("log", n)
                };
                J.levels = {
                    all: "log|warn|error",
                    error: "error",
                    off: "",
                    warn: "warn|error",
                    DEFAULT: K
                };
                J.level = function(e) {
                    if (typeof e === "string") {
                        if (!J.levels.hasOwnProperty(e)) {
                            throw new Error('"' + e + '" in not a valid log level')
                        }
                        K = e
                    }
                    return K
                };
                J.history = function() {
                    return Q ? [].concat(Q) : []
                };
                J.history.clear = function() {
                    if (Q) {
                        Q.length = 0
                    }
                };
                J.history.disable = function() {
                    if (Q !== null) {
                        Q.length = 0;
                        Q = null
                    }
                };
                J.history.enable = function() {
                    if (Q === null) {
                        Q = []
                    }
                };
                J.error = function() {
                    for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) {
                        t[n] = arguments[n]
                    }
                    return G("error", t)
                };
                J.warn = function() {
                    for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) {
                        t[n] = arguments[n]
                    }
                    return G("warn", t)
                };
                var Y = J;
                var et = function(t) {
                    var n = "",
                        r = 0;
                    for (; r < arguments.length; r++) {
                        n += Z(t[r]) + (arguments[r + 1] || "")
                    }
                    return n
                };
                var nt = q(["Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ", " to ", "."], ["Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ", " to ", "."]);
                var _t = ft("querySelector");
                var Dt = ft("querySelectorAll");
                var Pt = (Object.freeze || Object)({
                    isReal: ot,
                    isEl: ut,
                    isInFrame: at,
                    createEl: lt,
                    textContent: ct,
                    prependTo: ht,
                    hasClass: pt,
                    addClass: dt,
                    removeClass: vt,
                    toggleClass: mt,
                    setAttributes: gt,
                    getAttributes: yt,
                    getAttribute: bt,
                    setAttribute: wt,
                    removeAttribute: Et,
                    blockTextSelection: St,
                    unblockTextSelection: xt,
                    getBoundingClientRect: Tt,
                    findPosition: Nt,
                    getPointerPosition: Ct,
                    isTextNode: kt,
                    emptyEl: Lt,
                    normalizeContent: At,
                    appendContent: Ot,
                    insertContent: Mt,
                    $: _t,
                    $$: Dt
                });
                var Ht = 1;
                var jt = {};
                var Ft = "vdata" + (new Date).getTime();
                var Xt = false;
                (function() {
                    try {
                        var e = Object.defineProperty({}, "passive", {
                            get: function() {
                                Xt = true
                            }
                        });
                        o.addEventListener("test", null, e)
                    } catch (t) {}
                })();
                var Vt = ["touchstart", "touchmove"];
                var Gt = (Object.freeze || Object)({
                    fixEvent: Wt,
                    on: $t,
                    off: Jt,
                    trigger: Kt,
                    one: Qt
                });
                var Yt = false;
                var Zt = void 0;
                var en = function() {
                    if (!ot()) {
                        return
                    }
                    var t = h.getElementsByTagName("video");
                    var n = h.getElementsByTagName("audio");
                    var r = [];
                    if (t && t.length > 0) {
                        for (var i = 0, s = t.length; i < s; i++) {
                            r.push(t[i])
                        }
                    }
                    if (n && n.length > 0) {
                        for (var o = 0, u = n.length; o < u; o++) {
                            r.push(n[o])
                        }
                    }
                    if (r && r.length > 0) {
                        for (var a = 0, f = r.length; a < f; a++) {
                            var l = r[a];
                            if (l && l.getAttribute) {
                                if (l.player === undefined) {
                                    var c = l.getAttribute("data-setup");
                                    if (c !== null) {
                                        Zt(l)
                                    }
                                }
                            } else {
                                tn(1);
                                break
                            }
                        }
                    } else if (!Yt) {
                        tn(1)
                    }
                };
                if (ot() && h.readyState === "complete") {
                    Yt = true
                } else {
                    Qt(o, "load", function() {
                        Yt = true
                    })
                }
                var nn = function(t) {
                    var n = h.createElement("style");
                    n.className = t;
                    return n
                };
                var rn = function(t, n) {
                    if (t.styleSheet) {
                        t.styleSheet.cssText = n
                    } else {
                        t.textContent = n
                    }
                };
                var sn = function(t, n, r) {
                    if (!n.guid) {
                        n.guid = Bt()
                    }
                    var i = function() {
                        return n.apply(t, arguments)
                    };
                    i.guid = r ? r + "_" + n.guid : n.guid;
                    return i
                };
                var on = function(t, n) {
                    var r = Date.now();
                    var i = function() {
                        var i = Date.now();
                        if (i - r >= n) {
                            t.apply(undefined, arguments);
                            r = i
                        }
                    };
                    return i
                };
                var un = function() {};
                un.prototype.allowedEvents_ = {};
                un.prototype.on = function(e, t) {
                    var n = this.addEventListener;
                    this.addEventListener = function() {};
                    $t(this, e, t);
                    this.addEventListener = n
                };
                un.prototype.addEventListener = un.prototype.on;
                un.prototype.off = function(e, t) {
                    Jt(this, e, t)
                };
                un.prototype.removeEventListener = un.prototype.off;
                un.prototype.one = function(e, t) {
                    var n = this.addEventListener;
                    this.addEventListener = function() {};
                    Qt(this, e, t);
                    this.addEventListener = n
                };
                un.prototype.trigger = function(e) {
                    var t = e.type || e;
                    if (typeof e === "string") {
                        e = {
                            type: t
                        }
                    }
                    e = Wt(e);
                    if (this.allowedEvents_[t] && this["on" + t]) {
                        this["on" + t](e)
                    }
                    Kt(this, e)
                };
                un.prototype.dispatchEvent = un.prototype.trigger;
                var an = function(t) {
                    return t instanceof un || !!t.eventBusEl_ && ["on", "one", "off", "trigger"].every(function(e) {
                        return typeof t[e] === "function"
                    })
                };
                var fn = function(t) {
                    return typeof t === "string" && /\S/.test(t) || Array.isArray(t) && !!t.length
                };
                var ln = function(t) {
                    if (!t.nodeName && !an(t)) {
                        throw new Error("Invalid target; must be a DOM node or evented object.")
                    }
                };
                var cn = function(t) {
                    if (!fn(t)) {
                        throw new Error("Invalid event type; must be a non-empty string or array.")
                    }
                };
                var hn = function(t) {
                    if (typeof t !== "function") {
                        throw new Error("Invalid listener; must be a function.")
                    }
                };
                var pn = function(t, n) {
                    var r = n.length < 3 || n[0] === t || n[0] === t.eventBusEl_;
                    var i = void 0;
                    var s = void 0;
                    var o = void 0;
                    if (r) {
                        i = t.eventBusEl_;
                        if (n.length >= 3) {
                            n.shift()
                        }
                        s = n[0];
                        o = n[1]
                    } else {
                        i = n[0];
                        s = n[1];
                        o = n[2]
                    }
                    ln(i);
                    cn(s);
                    hn(o);
                    o = sn(t, o);
                    return {
                        isTargetingSelf: r,
                        target: i,
                        type: s,
                        listener: o
                    }
                };
                var dn = function(t, n, r, i) {
                    ln(t);
                    if (t.nodeName) {
                        Gt[n](t, r, i)
                    } else {
                        t[n](r, i)
                    }
                };
                var vn = {
                    on: function() {
                        var t = this;
                        for (var n = arguments.length, r = Array(n), i = 0; i < n; i++) {
                            r[i] = arguments[i]
                        }
                        var s = pn(this, r),
                            o = s.isTargetingSelf,
                            u = s.target,
                            a = s.type,
                            f = s.listener;
                        dn(u, "on", a, f);
                        if (!o) {
                            var l = function() {
                                return t.off(u, a, f)
                            };
                            l.guid = f.guid;
                            var c = function() {
                                return t.off("dispose", l)
                            };
                            c.guid = f.guid;
                            dn(this, "on", "dispose", l);
                            dn(u, "on", "dispose", c)
                        }
                    },
                    one: function() {
                        var t = this;
                        for (var n = arguments.length, r = Array(n), i = 0; i < n; i++) {
                            r[i] = arguments[i]
                        }
                        var s = pn(this, r),
                            o = s.isTargetingSelf,
                            u = s.target,
                            a = s.type,
                            f = s.listener;
                        if (o) {
                            dn(u, "one", a, f)
                        } else {
                            var l = function c() {
                                for (var e = arguments.length, n = Array(e), r = 0; r < e; r++) {
                                    n[r] = arguments[r]
                                }
                                t.off(u, a, c);
                                f.apply(null, n)
                            };
                            l.guid = f.guid;
                            dn(u, "one", a, l)
                        }
                    },
                    off: function(t, n, r) {
                        if (!t || fn(t)) {
                            Jt(this.eventBusEl_, t, n)
                        } else {
                            var i = t;
                            var s = n;
                            ln(i);
                            cn(s);
                            hn(r);
                            r = sn(this, r);
                            this.off("dispose", r);
                            if (i.nodeName) {
                                Jt(i, s, r);
                                Jt(i, "dispose", r)
                            } else if (an(i)) {
                                i.off(s, r);
                                i.off("dispose", r)
                            }
                        }
                    },
                    trigger: function(t, n) {
                        return Kt(this.eventBusEl_, t, n)
                    }
                };
                var gn = {
                    state: {},
                    setState: function(t) {
                        var n = this;
                        if (typeof t === "function") {
                            t = t()
                        }
                        var r = void 0;
                        z(t, function(e, t) {
                            if (n.state[t] !== e) {
                                r = r || {};
                                r[t] = {
                                    from: n.state[t],
                                    to: e
                                }
                            }
                            n.state[t] = e
                        });
                        if (r && an(this)) {
                            this.trigger({
                                changes: r,
                                type: "statechanged"
                            })
                        }
                        return r
                    }
                };
                var Sn = function() {
                    function e(t, n, r) {
                        j(this, e);
                        if (!t && this.play) {
                            this.player_ = t = this
                        } else {
                            this.player_ = t
                        }
                        this.options_ = En({}, this.options_);
                        n = this.options_ = En(this.options_, n);
                        this.id_ = n.id || n.el && n.el.id;
                        if (!this.id_) {
                            var i = t && t.id && t.id() || "no_player";
                            this.id_ = i + "_component_" + Bt()
                        }
                        this.name_ = n.name || null;
                        if (n.el) {
                            this.el_ = n.el
                        } else if (n.createEl !== false) {
                            this.el_ = this.createEl()
                        }
                        mn(this, {
                            eventBusKey: this.el_ ? "el_" : null
                        });
                        yn(this, this.constructor.defaultState);
                        this.children_ = [];
                        this.childIndex_ = {};
                        this.childNameIndex_ = {};
                        if (n.initChildren !== false) {
                            this.initChildren()
                        }
                        this.ready(r);
                        if (n.reportTouchActivity !== false) {
                            this.enableTouchActivity()
                        }
                    }
                    e.prototype.dispose = function() {
                        this.trigger({
                            type: "dispose",
                            bubbles: false
                        });
                        if (this.children_) {
                            for (var t = this.children_.length - 1; t >= 0; t--) {
                                if (this.children_[t].dispose) {
                                    this.children_[t].dispose()
                                }
                            }
                        }
                        this.children_ = null;
                        this.childIndex_ = null;
                        this.childNameIndex_ = null;
                        if (this.el_) {
                            if (this.el_.parentNode) {
                                this.el_.parentNode.removeChild(this.el_)
                            }
                            Rt(this.el_);
                            this.el_ = null
                        }
                    };
                    e.prototype.player = function() {
                        return this.player_
                    };
                    e.prototype.options = function(t) {
                        Y.warn("this.options() has been deprecated and will be moved to the constructor in 6.0");
                        if (!t) {
                            return this.options_
                        }
                        this.options_ = En(this.options_, t);
                        return this.options_
                    };
                    e.prototype.el = function() {
                        return this.el_
                    };
                    e.prototype.createEl = function(t, n, r) {
                        return lt(t, n, r)
                    };
                    e.prototype.localize = function(t, n) {
                        var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : t;
                        var i = this.player_.language && this.player_.language();
                        var s = this.player_.languages && this.player_.languages();
                        var o = s && s[i];
                        var u = i && i.split("-")[0];
                        var a = s && s[u];
                        var f = r;
                        if (o && o[t]) {
                            f = o[t]
                        } else if (a && a[t]) {
                            f = a[t]
                        }
                        if (n) {
                            f = f.replace(/\{(\d+)\}/g, function(e, t) {
                                var r = n[t - 1];
                                var i = r;
                                if (typeof r === "undefined") {
                                    i = e
                                }
                                return i
                            })
                        }
                        return f
                    };
                    e.prototype.contentEl = function() {
                        return this.contentEl_ || this.el_
                    };
                    e.prototype.id = function() {
                        return this.id_
                    };
                    e.prototype.name = function() {
                        return this.name_
                    };
                    e.prototype.children = function() {
                        return this.children_
                    };
                    e.prototype.getChildById = function(t) {
                        return this.childIndex_[t]
                    };
                    e.prototype.getChild = function(t) {
                        if (!t) {
                            return
                        }
                        t = bn(t);
                        return this.childNameIndex_[t]
                    };
                    e.prototype.addChild = function(n) {
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;
                        var s = void 0;
                        var o = void 0;
                        if (typeof n === "string") {
                            o = bn(n);
                            var u = r.componentClass || o;
                            r.name = o;
                            var a = e.getComponent(u);
                            if (!a) {
                                throw new Error("Component " + u + " does not exist")
                            }
                            if (typeof a !== "function") {
                                return null
                            }
                            s = new a(this.player_ || this, r)
                        } else {
                            s = n
                        }
                        this.children_.splice(i, 0, s);
                        if (typeof s.id === "function") {
                            this.childIndex_[s.id()] = s
                        }
                        o = o || s.name && bn(s.name());
                        if (o) {
                            this.childNameIndex_[o] = s
                        }
                        if (typeof s.el === "function" && s.el()) {
                            var f = this.contentEl().children;
                            var l = f[i] || null;
                            this.contentEl().insertBefore(s.el(), l)
                        }
                        return s
                    };
                    e.prototype.removeChild = function(t) {
                        if (typeof t === "string") {
                            t = this.getChild(t)
                        }
                        if (!t || !this.children_) {
                            return
                        }
                        var n = false;
                        for (var r = this.children_.length - 1; r >= 0; r--) {
                            if (this.children_[r] === t) {
                                n = true;
                                this.children_.splice(r, 1);
                                break
                            }
                        }
                        if (!n) {
                            return
                        }
                        this.childIndex_[t.id()] = null;
                        this.childNameIndex_[t.name()] = null;
                        var i = t.el();
                        if (i && i.parentNode === this.contentEl()) {
                            this.contentEl().removeChild(t.el())
                        }
                    };
                    e.prototype.initChildren = function() {
                        var n = this;
                        var r = this.options_.children;
                        if (r) {
                            var i = this.options_;
                            var s = function(t) {
                                var r = t.name;
                                var s = t.opts;
                                if (i[r] !== undefined) {
                                    s = i[r]
                                }
                                if (s === false) {
                                    return
                                }
                                if (s === true) {
                                    s = {}
                                }
                                s.playerOptions = n.options_.playerOptions;
                                var o = n.addChild(r, s);
                                if (o) {
                                    n[r] = o
                                }
                            };
                            var o = void 0;
                            var u = e.getComponent("Tech");
                            if (Array.isArray(r)) {
                                o = r
                            } else {
                                o = Object.keys(r)
                            }
                            o.concat(Object.keys(this.options_).filter(function(e) {
                                return !o.some(function(t) {
                                    if (typeof t === "string") {
                                        return e === t
                                    }
                                    return e === t.name
                                })
                            })).map(function(e) {
                                var t = void 0;
                                var i = void 0;
                                if (typeof e === "string") {
                                    t = e;
                                    i = r[t] || n.options_[t] || {}
                                } else {
                                    t = e.name;
                                    i = e
                                }
                                return {
                                    name: t,
                                    opts: i
                                }
                            }).filter(function(t) {
                                var n = e.getComponent(t.opts.componentClass || bn(t.name));
                                return n && !u.isTech(n)
                            }).forEach(s)
                        }
                    };
                    e.prototype.buildCSSClass = function() {
                        return ""
                    };
                    e.prototype.ready = function(t) {
                        var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
                        if (!t) {
                            return
                        }
                        if (!this.isReady_) {
                            this.readyQueue_ = this.readyQueue_ || [];
                            this.readyQueue_.push(t);
                            return
                        }
                        if (n) {
                            t.call(this)
                        } else {
                            this.setTimeout(t, 1)
                        }
                    };
                    e.prototype.triggerReady = function() {
                        this.isReady_ = true;
                        this.setTimeout(function() {
                            var e = this.readyQueue_;
                            this.readyQueue_ = [];
                            if (e && e.length > 0) {
                                e.forEach(function(e) {
                                    e.call(this)
                                }, this)
                            }
                            this.trigger("ready")
                        }, 1)
                    };
                    e.prototype.$ = function(t, n) {
                        return _t(t, n || this.contentEl())
                    };
                    e.prototype.$$ = function(t, n) {
                        return Dt(t, n || this.contentEl())
                    };
                    e.prototype.hasClass = function(t) {
                        return pt(this.el_, t)
                    };
                    e.prototype.addClass = function(t) {
                        dt(this.el_, t)
                    };
                    e.prototype.removeClass = function(t) {
                        vt(this.el_, t)
                    };
                    e.prototype.toggleClass = function(t, n) {
                        mt(this.el_, t, n)
                    };
                    e.prototype.show = function() {
                        this.removeClass("vjs-hidden")
                    };
                    e.prototype.hide = function() {
                        this.addClass("vjs-hidden")
                    };
                    e.prototype.lockShowing = function() {
                        this.addClass("vjs-lock-showing")
                    };
                    e.prototype.unlockShowing = function() {
                        this.removeClass("vjs-lock-showing")
                    };
                    e.prototype.getAttribute = function(t) {
                        return bt(this.el_, t)
                    };
                    e.prototype.setAttribute = function(t, n) {
                        wt(this.el_, t, n)
                    };
                    e.prototype.removeAttribute = function(t) {
                        Et(this.el_, t)
                    };
                    e.prototype.width = function(t, n) {
                        return this.dimension("width", t, n)
                    };
                    e.prototype.height = function(t, n) {
                        return this.dimension("height", t, n)
                    };
                    e.prototype.dimensions = function(t, n) {
                        this.width(t, true);
                        this.height(n)
                    };
                    e.prototype.dimension = function(t, n, r) {
                        if (n !== undefined) {
                            if (n === null || n !== n) {
                                n = 0
                            }
                            if (("" + n).indexOf("%") !== -1 || ("" + n).indexOf("px") !== -1) {
                                this.el_.style[t] = n
                            } else if (n === "auto") {
                                this.el_.style[t] = ""
                            } else {
                                this.el_.style[t] = n + "px"
                            }
                            if (!r) {
                                this.trigger("componentresize")
                            }
                            return
                        }
                        if (!this.el_) {
                            return 0
                        }
                        var i = this.el_.style[t];
                        var s = i.indexOf("px");
                        if (s !== -1) {
                            return parseInt(i.slice(0, s), 10)
                        }
                        return parseInt(this.el_["offset" + bn(t)], 10)
                    };
                    e.prototype.currentDimension = function(t) {
                        var n = 0;
                        if (t !== "width" && t !== "height") {
                            throw new Error("currentDimension only accepts width or height value")
                        }
                        if (typeof o.getComputedStyle === "function") {
                            var r = o.getComputedStyle(this.el_);
                            n = r.getPropertyValue(t) || r[t]
                        }
                        n = parseFloat(n);
                        if (n === 0) {
                            var i = "offset" + bn(t);
                            n = this.el_[i]
                        }
                        return n
                    };
                    e.prototype.currentDimensions = function() {
                        return {
                            width: this.currentDimension("width"),
                            height: this.currentDimension("height")
                        }
                    };
                    e.prototype.currentWidth = function() {
                        return this.currentDimension("width")
                    };
                    e.prototype.currentHeight = function() {
                        return this.currentDimension("height")
                    };
                    e.prototype.focus = function() {
                        this.el_.focus()
                    };
                    e.prototype.blur = function() {
                        this.el_.blur()
                    };
                    e.prototype.emitTapEvents = function() {
                        var t = 0;
                        var n = null;
                        var r = 10;
                        var i = 200;
                        var s = void 0;
                        this.on("touchstart", function(e) {
                            if (e.touches.length === 1) {
                                n = {
                                    pageX: e.touches[0].pageX,
                                    pageY: e.touches[0].pageY
                                };
                                t = (new Date).getTime();
                                s = true
                            }
                        });
                        this.on("touchmove", function(e) {
                            if (e.touches.length > 1) {
                                s = false
                            } else if (n) {
                                var t = e.touches[0].pageX - n.pageX;
                                var i = e.touches[0].pageY - n.pageY;
                                var o = Math.sqrt(t * t + i * i);
                                if (o > r) {
                                    s = false
                                }
                            }
                        });
                        var o = function() {
                            s = false
                        };
                        this.on("touchleave", o);
                        this.on("touchcancel", o);
                        this.on("touchend", function(e) {
                            n = null;
                            if (s === true) {
                                var r = (new Date).getTime() - t;
                                if (r < i) {
                                    e.preventDefault();
                                    this.trigger("tap")
                                }
                            }
                        })
                    };
                    e.prototype.enableTouchActivity = function() {
                        if (!this.player() || !this.player().reportUserActivity) {
                            return
                        }
                        var t = sn(this.player(), this.player().reportUserActivity);
                        var n = void 0;
                        this.on("touchstart", function() {
                            t();
                            this.clearInterval(n);
                            n = this.setInterval(t, 250)
                        });
                        var r = function(r) {
                            t();
                            this.clearInterval(n)
                        };
                        this.on("touchmove", t);
                        this.on("touchend", r);
                        this.on("touchcancel", r)
                    };
                    e.prototype.setTimeout = function(t, n) {
                        var r = this;
                        t = sn(this, t);
                        var i = o.setTimeout(t, n);
                        var s = function() {
                            return r.clearTimeout(i)
                        };
                        s.guid = "vjs-timeout-" + i;
                        this.on("dispose", s);
                        return i
                    };
                    e.prototype.clearTimeout = function(t) {
                        o.clearTimeout(t);
                        var n = function() {};
                        n.guid = "vjs-timeout-" + t;
                        this.off("dispose", n);
                        return t
                    };
                    e.prototype.setInterval = function(t, n) {
                        var r = this;
                        t = sn(this, t);
                        var i = o.setInterval(t, n);
                        var s = function() {
                            return r.clearInterval(i)
                        };
                        s.guid = "vjs-interval-" + i;
                        this.on("dispose", s);
                        return i
                    };
                    e.prototype.clearInterval = function(t) {
                        o.clearInterval(t);
                        var n = function() {};
                        n.guid = "vjs-interval-" + t;
                        this.off("dispose", n);
                        return t
                    };
                    e.prototype.requestAnimationFrame = function(t) {
                        var n = this;
                        if (this.supportsRaf_) {
                            t = sn(this, t);
                            var r = o.requestAnimationFrame(t);
                            var i = function() {
                                return n.cancelAnimationFrame(r)
                            };
                            i.guid = "vjs-raf-" + r;
                            this.on("dispose", i);
                            return r
                        }
                        return this.setTimeout(t, 1e3 / 60)
                    };
                    e.prototype.cancelAnimationFrame = function(t) {
                        if (this.supportsRaf_) {
                            o.cancelAnimationFrame(t);
                            var n = function() {};
                            n.guid = "vjs-raf-" + t;
                            this.off("dispose", n);
                            return t
                        }
                        return this.clearTimeout(t)
                    };
                    e.registerComponent = function(n, r) {
                        if (typeof n !== "string" || !n) {
                            throw new Error('Illegal component name, "' + n + '"; must be a non-empty string.')
                        }
                        var i = e.getComponent("Tech");
                        var s = i && i.isTech(r);
                        var o = e === r || e.prototype.isPrototypeOf(r.prototype);
                        if (s || !o) {
                            var u = void 0;
                            if (s) {
                                u = "techs must be registered using Tech.registerTech()"
                            } else {
                                u = "must be a Component subclass"
                            }
                            throw new Error('Illegal component, "' + n + '"; ' + u + ".")
                        }
                        n = bn(n);
                        if (!e.components_) {
                            e.components_ = {}
                        }
                        var a = e.getComponent("Player");
                        if (n === "Player" && a && a.players) {
                            var f = a.players;
                            var l = Object.keys(f);
                            if (f && l.length > 0 && l.map(function(e) {
                                    return f[e]
                                }).every(Boolean)) {
                                throw new Error("Can not register Player component after player has been created.")
                            }
                        }
                        e.components_[n] = r;
                        return r
                    };
                    e.getComponent = function(n) {
                        if (!n) {
                            return
                        }
                        n = bn(n);
                        if (e.components_ && e.components_[n]) {
                            return e.components_[n]
                        }
                    };
                    return e
                }();
                Sn.prototype.supportsRaf_ = typeof o.requestAnimationFrame === "function" && typeof o.cancelAnimationFrame === "function";
                Sn.registerComponent("Component", Sn);
                var Ln = {};
                var An = [
                    ["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"],
                    ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"],
                    ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"],
                    ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"],
                    ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]
                ];
                var On = An[0];
                var Mn = void 0;
                for (var _n = 0; _n < An.length; _n++) {
                    if (An[_n][1] in h) {
                        Mn = An[_n];
                        break
                    }
                }
                if (Mn) {
                    for (var Dn = 0; Dn < Mn.length; Dn++) {
                        Ln[On[Dn]] = Mn[Dn]
                    }
                }
                Pn.prototype.code = 0;
                Pn.prototype.message = "";
                Pn.prototype.status = null;
                Pn.errorTypes = ["MEDIA_ERR_CUSTOM", "MEDIA_ERR_ABORTED", "MEDIA_ERR_NETWORK", "MEDIA_ERR_DECODE", "MEDIA_ERR_SRC_NOT_SUPPORTED", "MEDIA_ERR_ENCRYPTED"];
                Pn.defaultMessages = {
                    1: "You aborted the media playback",
                    2: "A network error caused the media download to fail part-way.",
                    3: "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.",
                    4: "The media could not be loaded, either because the server or network failed or because the format is not supported.",
                    5: "The media is encrypted and we do not have the keys to decrypt it."
                };
                for (var Hn = 0; Hn < Pn.errorTypes.length; Hn++) {
                    Pn[Pn.errorTypes[Hn]] = Hn;
                    Pn.prototype[Pn.errorTypes[Hn]] = Hn
                }
                var Bn = jn;
                var Fn = function(t) {
                    var n = ["kind", "label", "language", "id", "inBandMetadataTrackDispatchType", "mode", "src"].reduce(function(e, n, r) {
                        if (t[n]) {
                            e[n] = t[n]
                        }
                        return e
                    }, {
                        cues: t.cues && Array.prototype.map.call(t.cues, function(e) {
                            return {
                                startTime: e.startTime,
                                endTime: e.endTime,
                                text: e.text,
                                id: e.id
                            }
                        })
                    });
                    return n
                };
                var In = function(t) {
                    var n = t.$$("track");
                    var r = Array.prototype.map.call(n, function(e) {
                        return e.track
                    });
                    var i = Array.prototype.map.call(n, function(e) {
                        var t = Fn(e.track);
                        if (e.src) {
                            t.src = e.src
                        }
                        return t
                    });
                    return i.concat(Array.prototype.filter.call(t.textTracks(), function(e) {
                        return r.indexOf(e) === -1
                    }).map(Fn))
                };
                var qn = function(t, n) {
                    t.forEach(function(e) {
                        var t = n.addRemoteTextTrack(e).track;
                        if (!e.src && e.cues) {
                            e.cues.forEach(function(e) {
                                return t.addCue(e)
                            })
                        }
                    });
                    return n.textTracks()
                };
                var Rn = {
                    textTracksToJson: In,
                    jsonToTextTracks: qn,
                    trackToJson_: Fn
                };
                var Un = "vjs-modal-dialog";
                var zn = 27;
                var Wn = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.opened_ = i.hasBeenOpened_ = i.hasBeenFilled_ = false;
                        i.closeable(!i.options_.uncloseable);
                        i.content(i.options_.content);
                        i.contentEl_ = lt("div", {
                            className: Un + "-content"
                        }, {
                            role: "document"
                        });
                        i.descEl_ = lt("p", {
                            className: Un + "-description vjs-control-text",
                            id: i.el().getAttribute("aria-describedby")
                        });
                        ct(i.descEl_, i.description());
                        i.el_.appendChild(i.descEl_);
                        i.el_.appendChild(i.contentEl_);
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: this.buildCSSClass(),
                            tabIndex: -1
                        }, {
                            "aria-describedby": this.id() + "_description",
                            "aria-hidden": "true",
                            "aria-label": this.label(),
                            role: "dialog"
                        })
                    };
                    t.prototype.buildCSSClass = function() {
                        return Un + " vjs-hidden " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.handleKeyPress = function(t) {
                        if (t.which === zn && this.closeable()) {
                            this.close()
                        }
                    };
                    t.prototype.label = function() {
                        return this.localize(this.options_.label || "Modal Window")
                    };
                    t.prototype.description = function() {
                        var t = this.options_.description || this.localize("This is a modal window.");
                        if (this.closeable()) {
                            t += " " + this.localize("This modal can be closed by pressing the Escape key or activating the close button.")
                        }
                        return t
                    };
                    t.prototype.open = function() {
                        if (!this.opened_) {
                            var t = this.player();
                            this.trigger("beforemodalopen");
                            this.opened_ = true;
                            if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {
                                this.fill()
                            }
                            this.wasPlaying_ = !t.paused();
                            if (this.options_.pauseOnOpen && this.wasPlaying_) {
                                t.pause()
                            }
                            if (this.closeable()) {
                                this.on(this.el_.ownerDocument, "keydown", sn(this, this.handleKeyPress))
                            }
                            this.hadControls_ = t.controls();
                            t.controls(false);
                            this.show();
                            this.conditionalFocus_();
                            this.el().setAttribute("aria-hidden", "false");
                            this.trigger("modalopen");
                            this.hasBeenOpened_ = true
                        }
                    };
                    t.prototype.opened = function(t) {
                        if (typeof t === "boolean") {
                            this[t ? "open" : "close"]()
                        }
                        return this.opened_
                    };
                    t.prototype.close = function() {
                        if (!this.opened_) {
                            return
                        }
                        var t = this.player();
                        this.trigger("beforemodalclose");
                        this.opened_ = false;
                        if (this.wasPlaying_ && this.options_.pauseOnOpen) {
                            t.play()
                        }
                        if (this.closeable()) {
                            this.off(this.el_.ownerDocument, "keydown", sn(this, this.handleKeyPress))
                        }
                        if (this.hadControls_) {
                            t.controls(true)
                        }
                        this.hide();
                        this.el().setAttribute("aria-hidden", "true");
                        this.trigger("modalclose");
                        this.conditionalBlur_();
                        if (this.options_.temporary) {
                            this.dispose()
                        }
                    };
                    t.prototype.closeable = function n(e) {
                        if (typeof e === "boolean") {
                            var n = this.closeable_ = !!e;
                            var t = this.getChild("closeButton");
                            if (n && !t) {
                                var r = this.contentEl_;
                                this.contentEl_ = this.el_;
                                t = this.addChild("closeButton", {
                                    controlText: "Close Modal Dialog"
                                });
                                this.contentEl_ = r;
                                this.on(t, "close", this.close)
                            }
                            if (!n && t) {
                                this.off(t, "close", this.close);
                                this.removeChild(t);
                                t.dispose()
                            }
                        }
                        return this.closeable_
                    };
                    t.prototype.fill = function() {
                        this.fillWith(this.content())
                    };
                    t.prototype.fillWith = function(t) {
                        var n = this.contentEl();
                        var r = n.parentNode;
                        var i = n.nextSibling;
                        this.trigger("beforemodalfill");
                        this.hasBeenFilled_ = true;
                        r.removeChild(n);
                        this.empty();
                        Mt(n, t);
                        this.trigger("modalfill");
                        if (i) {
                            r.insertBefore(n, i)
                        } else {
                            r.appendChild(n)
                        }
                        var s = this.getChild("closeButton");
                        if (s) {
                            r.appendChild(s.el_)
                        }
                    };
                    t.prototype.empty = function() {
                        this.trigger("beforemodalempty");
                        Lt(this.contentEl());
                        this.trigger("modalempty")
                    };
                    t.prototype.content = function(t) {
                        if (typeof t !== "undefined") {
                            this.content_ = t
                        }
                        return this.content_
                    };
                    t.prototype.conditionalFocus_ = function() {
                        var t = h.activeElement;
                        var n = this.player_.el_;
                        this.previouslyActiveEl_ = null;
                        if (n.contains(t) || n === t) {
                            this.previouslyActiveEl_ = t;
                            this.focus();
                            this.on(h, "keydown", this.handleKeyDown)
                        }
                    };
                    t.prototype.conditionalBlur_ = function() {
                        if (this.previouslyActiveEl_) {
                            this.previouslyActiveEl_.focus();
                            this.previouslyActiveEl_ = null
                        }
                        this.off(h, "keydown", this.handleKeyDown)
                    };
                    t.prototype.handleKeyDown = function(t) {
                        if (t.which !== 9) {
                            return
                        }
                        var n = this.focusableEls_();
                        var r = this.el_.querySelector(":focus");
                        var i = void 0;
                        for (var s = 0; s < n.length; s++) {
                            if (r === n[s]) {
                                i = s;
                                break
                            }
                        }
                        if (h.activeElement === this.el_) {
                            i = 0
                        }
                        if (t.shiftKey && i === 0) {
                            n[n.length - 1].focus();
                            t.preventDefault()
                        } else if (!t.shiftKey && i === n.length - 1) {
                            n[0].focus();
                            t.preventDefault()
                        }
                    };
                    t.prototype.focusableEls_ = function() {
                        var t = this.el_.querySelectorAll("*");
                        return Array.prototype.filter.call(t, function(e) {
                            return (e instanceof o.HTMLAnchorElement || e instanceof o.HTMLAreaElement) && e.hasAttribute("href") || (e instanceof o.HTMLInputElement || e instanceof o.HTMLSelectElement || e instanceof o.HTMLTextAreaElement || e instanceof o.HTMLButtonElement) && !e.hasAttribute("disabled") || e instanceof o.HTMLIFrameElement || e instanceof o.HTMLObjectElement || e instanceof o.HTMLEmbedElement || e.hasAttribute("tabindex") && e.getAttribute("tabindex") !== -1 || e.hasAttribute("contenteditable")
                        })
                    };
                    return t
                }(Sn);
                Wn.prototype.options_ = {
                    pauseOnOpen: true,
                    temporary: true
                };
                Sn.registerComponent("ModalDialog", Wn);
                var Xn = function(e) {
                    function t() {
                        var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                        var r;
                        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                        j(this, t);
                        var s = I(this, e.call(this));
                        if (!i) {
                            i = s;
                            if (A) {
                                i = h.createElement("custom");
                                for (var o in t.prototype) {
                                    if (o !== "constructor") {
                                        i[o] = t.prototype[o]
                                    }
                                }
                            }
                        }
                        i.tracks_ = [];
                        Object.defineProperty(i, "length", {
                            get: function() {
                                return this.tracks_.length
                            }
                        });
                        for (var u = 0; u < n.length; u++) {
                            i.addTrack(n[u])
                        }
                        return r = i,
                            I(s, r)
                    }
                    F(t, e);
                    t.prototype.addTrack = function(t) {
                        var n = this.tracks_.length;
                        if (!("" + n in this)) {
                            Object.defineProperty(this, n, {
                                get: function() {
                                    return this.tracks_[n]
                                }
                            })
                        }
                        if (this.tracks_.indexOf(t) === -1) {
                            this.tracks_.push(t);
                            this.trigger({
                                track: t,
                                type: "addtrack"
                            })
                        }
                    };
                    t.prototype.removeTrack = function(t) {
                        var n = void 0;
                        for (var r = 0, i = this.length; r < i; r++) {
                            if (this[r] === t) {
                                n = this[r];
                                if (n.off) {
                                    n.off()
                                }
                                this.tracks_.splice(r, 1);
                                break
                            }
                        }
                        if (!n) {
                            return
                        }
                        this.trigger({
                            track: n,
                            type: "removetrack"
                        })
                    };
                    t.prototype.getTrackById = function(t) {
                        var n = null;
                        for (var r = 0, i = this.length; r < i; r++) {
                            var s = this[r];
                            if (s.id === t) {
                                n = s;
                                break
                            }
                        }
                        return n
                    };
                    return t
                }(un);
                Xn.prototype.allowedEvents_ = {
                    change: "change",
                    addtrack: "addtrack",
                    removetrack: "removetrack"
                };
                for (var Vn in Xn.prototype.allowedEvents_) {
                    Xn.prototype["on" + Vn] = null
                }
                var $n = function(t, n) {
                    for (var r = 0; r < t.length; r++) {
                        if (!Object.keys(t[r]).length || n.id === t[r].id) {
                            continue
                        }
                        t[r].enabled = false
                    }
                };
                var Jn = function(e) {
                    function t() {
                        var n, r;
                        var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                        j(this, t);
                        var s = void 0;
                        for (var o = i.length - 1; o >= 0; o--) {
                            if (i[o].enabled) {
                                $n(i, i[o]);
                                break
                            }
                        }
                        if (A) {
                            s = h.createElement("custom");
                            for (var u in Xn.prototype) {
                                if (u !== "constructor") {
                                    s[u] = Xn.prototype[u]
                                }
                            }
                            for (var a in t.prototype) {
                                if (a !== "constructor") {
                                    s[a] = t.prototype[a]
                                }
                            }
                        }
                        s = (n = I(this, e.call(this, i, s)),
                            n);
                        s.changing_ = false;
                        return r = s,
                            I(n, r)
                    }
                    F(t, e);
                    t.prototype.addTrack = function(n) {
                        var r = this;
                        if (n.enabled) {
                            $n(this, n)
                        }
                        e.prototype.addTrack.call(this, n);
                        if (!n.addEventListener) {
                            return
                        }
                        n.addEventListener("enabledchange", function() {
                            if (r.changing_) {
                                return
                            }
                            r.changing_ = true;
                            $n(r, n);
                            r.changing_ = false;
                            r.trigger("change")
                        })
                    };
                    return t
                }(Xn);
                var Kn = function(t, n) {
                    for (var r = 0; r < t.length; r++) {
                        if (!Object.keys(t[r]).length || n.id === t[r].id) {
                            continue
                        }
                        t[r].selected = false
                    }
                };
                var Qn = function(e) {
                    function t() {
                        var n, r;
                        var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                        j(this, t);
                        var s = void 0;
                        for (var o = i.length - 1; o >= 0; o--) {
                            if (i[o].selected) {
                                Kn(i, i[o]);
                                break
                            }
                        }
                        if (A) {
                            s = h.createElement("custom");
                            for (var u in Xn.prototype) {
                                if (u !== "constructor") {
                                    s[u] = Xn.prototype[u]
                                }
                            }
                            for (var a in t.prototype) {
                                if (a !== "constructor") {
                                    s[a] = t.prototype[a]
                                }
                            }
                        }
                        s = (n = I(this, e.call(this, i, s)),
                            n);
                        s.changing_ = false;
                        Object.defineProperty(s, "selectedIndex", {
                            get: function() {
                                for (var t = 0; t < this.length; t++) {
                                    if (this[t].selected) {
                                        return t
                                    }
                                }
                                return -1
                            },
                            set: function() {}
                        });
                        return r = s,
                            I(n, r)
                    }
                    F(t, e);
                    t.prototype.addTrack = function(n) {
                        var r = this;
                        if (n.selected) {
                            Kn(this, n)
                        }
                        e.prototype.addTrack.call(this, n);
                        if (!n.addEventListener) {
                            return
                        }
                        n.addEventListener("selectedchange", function() {
                            if (r.changing_) {
                                return
                            }
                            r.changing_ = true;
                            Kn(r, n);
                            r.changing_ = false;
                            r.trigger("change")
                        })
                    };
                    return t
                }(Xn);
                var Gn = function(e) {
                    function t() {
                        var n, r;
                        var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                        j(this, t);
                        var s = void 0;
                        if (A) {
                            s = h.createElement("custom");
                            for (var o in Xn.prototype) {
                                if (o !== "constructor") {
                                    s[o] = Xn.prototype[o]
                                }
                            }
                            for (var u in t.prototype) {
                                if (u !== "constructor") {
                                    s[u] = t.prototype[u]
                                }
                            }
                        }
                        s = (n = I(this, e.call(this, i, s)),
                            n);
                        return r = s,
                            I(n, r)
                    }
                    F(t, e);
                    t.prototype.addTrack = function(n) {
                        e.prototype.addTrack.call(this, n);
                        n.addEventListener("modechange", sn(this, function() {
                            this.trigger("change")
                        }));
                        var r = ["metadata", "chapters"];
                        if (r.indexOf(n.kind) === -1) {
                            n.addEventListener("modechange", sn(this, function() {
                                this.trigger("selectedlanguagechange")
                            }))
                        }
                    };
                    return t
                }(Xn);
                var Yn = function() {
                    function e() {
                        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                        j(this, e);
                        var n = this;
                        if (A) {
                            n = h.createElement("custom");
                            for (var r in e.prototype) {
                                if (r !== "constructor") {
                                    n[r] = e.prototype[r]
                                }
                            }
                        }
                        n.trackElements_ = [];
                        Object.defineProperty(n, "length", {
                            get: function() {
                                return this.trackElements_.length
                            }
                        });
                        for (var i = 0, s = t.length; i < s; i++) {
                            n.addTrackElement_(t[i])
                        }
                        if (A) {
                            return n
                        }
                    }
                    e.prototype.addTrackElement_ = function(t) {
                        var n = this.trackElements_.length;
                        if (!("" + n in this)) {
                            Object.defineProperty(this, n, {
                                get: function() {
                                    return this.trackElements_[n]
                                }
                            })
                        }
                        if (this.trackElements_.indexOf(t) === -1) {
                            this.trackElements_.push(t)
                        }
                    };
                    e.prototype.getTrackElementByTrack_ = function(t) {
                        var n = void 0;
                        for (var r = 0, i = this.trackElements_.length; r < i; r++) {
                            if (t === this.trackElements_[r].track) {
                                n = this.trackElements_[r];
                                break
                            }
                        }
                        return n
                    };
                    e.prototype.removeTrackElement_ = function(t) {
                        for (var n = 0, r = this.trackElements_.length; n < r; n++) {
                            if (t === this.trackElements_[n]) {
                                this.trackElements_.splice(n, 1);
                                break
                            }
                        }
                    };
                    return e
                }();
                var Zn = function() {
                    function e(t) {
                        j(this, e);
                        var n = this;
                        if (A) {
                            n = h.createElement("custom");
                            for (var r in e.prototype) {
                                if (r !== "constructor") {
                                    n[r] = e.prototype[r]
                                }
                            }
                        }
                        e.prototype.setCues_.call(n, t);
                        Object.defineProperty(n, "length", {
                            get: function() {
                                return this.length_
                            }
                        });
                        if (A) {
                            return n
                        }
                    }
                    e.prototype.setCues_ = function(t) {
                        var n = this.length || 0;
                        var r = 0;
                        var i = t.length;
                        this.cues_ = t;
                        this.length_ = t.length;
                        var s = function(t) {
                            if (!("" + t in this)) {
                                Object.defineProperty(this, "" + t, {
                                    get: function() {
                                        return this.cues_[t]
                                    }
                                })
                            }
                        };
                        if (n < i) {
                            r = n;
                            for (; r < i; r++) {
                                s.call(this, r)
                            }
                        }
                    };
                    e.prototype.getCueById = function(t) {
                        var n = null;
                        for (var r = 0, i = this.length; r < i; r++) {
                            var s = this[r];
                            if (s.id === t) {
                                n = s;
                                break
                            }
                        }
                        return n
                    };
                    return e
                }();
                var er = {
                    alternative: "alternative",
                    captions: "captions",
                    main: "main",
                    sign: "sign",
                    subtitles: "subtitles",
                    commentary: "commentary"
                };
                var tr = {
                    alternative: "alternative",
                    descriptions: "descriptions",
                    main: "main",
                    "main-desc": "main-desc",
                    translation: "translation",
                    commentary: "commentary"
                };
                var nr = {
                    subtitles: "subtitles",
                    captions: "captions",
                    descriptions: "descriptions",
                    chapters: "chapters",
                    metadata: "metadata"
                };
                var rr = {
                    disabled: "disabled",
                    hidden: "hidden",
                    showing: "showing"
                };
                var ir = function(e) {
                    function t() {
                        var n;
                        var r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        j(this, t);
                        var i = I(this, e.call(this));
                        var s = i;
                        if (A) {
                            s = h.createElement("custom");
                            for (var o in t.prototype) {
                                if (o !== "constructor") {
                                    s[o] = t.prototype[o]
                                }
                            }
                        }
                        var u = {
                            id: r.id || "vjs_track_" + Bt(),
                            kind: r.kind || "",
                            label: r.label || "",
                            language: r.language || ""
                        };
                        var a = function(t) {
                            Object.defineProperty(s, t, {
                                get: function() {
                                    return u[t]
                                },
                                set: function() {}
                            })
                        };
                        for (var f in u) {
                            a(f)
                        }
                        return n = s,
                            I(i, n)
                    }
                    F(t, e);
                    return t
                }(un);
                var sr = function(t) {
                    var n = ["protocol", "hostname", "port", "pathname", "search", "hash", "host"];
                    var r = h.createElement("a");
                    r.href = t;
                    var i = r.host === "" && r.protocol !== "file:";
                    var s = void 0;
                    if (i) {
                        s = h.createElement("div");
                        s.innerHTML = '<a href="' + t + '"></a>';
                        r = s.firstChild;
                        s.setAttribute("style", "display:none; position:absolute;");
                        h.body.appendChild(s)
                    }
                    var u = {};
                    for (var a = 0; a < n.length; a++) {
                        u[n[a]] = r[n[a]]
                    }
                    if (u.protocol === "http:") {
                        u.host = u.host.replace(/:80$/, "")
                    }
                    if (u.protocol === "https:") {
                        u.host = u.host.replace(/:443$/, "")
                    }
                    if (!u.protocol) {
                        u.protocol = o.location.protocol
                    }
                    if (i) {
                        h.body.removeChild(s)
                    }
                    return u
                };
                var or = function(t) {
                    if (!t.match(/^https?:\/\//)) {
                        var n = h.createElement("div");
                        n.innerHTML = '<a href="' + t + '">x</a>';
                        t = n.firstChild.href
                    }
                    return t
                };
                var ur = function(t) {
                    if (typeof t === "string") {
                        var n = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/i;
                        var r = n.exec(t);
                        if (r) {
                            return r.pop().toLowerCase()
                        }
                    }
                    return ""
                };
                var ar = function(t) {
                    var n = o.location;
                    var r = sr(t);
                    var i = r.protocol === ":" ? n.protocol : r.protocol;
                    var s = i + r.host !== n.protocol + n.host;
                    return s
                };
                var fr = (Object.freeze || Object)({
                    parseUrl: sr,
                    getAbsoluteURL: or,
                    getFileExtension: ur,
                    isCrossOrigin: ar
                });
                var lr = hr;
                var cr = Object.prototype.toString;
                var pr = i(function(e, t) {
                    function n(e) {
                        return e.replace(/^\s*|\s*$/g, "")
                    }
                    t = e.exports = n;
                    t.left = function(e) {
                        return e.replace(/^\s*/, "")
                    };
                    t.right = function(e) {
                        return e.replace(/\s*$/, "")
                    }
                });
                var dr = gr;
                var vr = Object.prototype.toString;
                var mr = Object.prototype.hasOwnProperty;
                var Er = function(t) {
                    return Object.prototype.toString.call(t) === "[object Array]"
                };
                var Sr = function(t) {
                    if (!t)
                        return {};
                    var n = {};
                    dr(pr(t).split("\n"), function(e) {
                        var t = e.indexOf(":"),
                            r = pr(e.slice(0, t)).toLowerCase(),
                            i = pr(e.slice(t + 1));
                        if (typeof n[r] === "undefined") {
                            n[r] = i
                        } else if (Er(n[r])) {
                            n[r].push(i)
                        } else {
                            n[r] = [n[r], i]
                        }
                    });
                    return n
                };
                var xr = Nr;
                var Tr = Object.prototype.hasOwnProperty;
                var Cr = Or;
                Or.XMLHttpRequest = o.XMLHttpRequest || Dr;
                Or.XDomainRequest = "withCredentials" in new Or.XMLHttpRequest ? Or.XMLHttpRequest : o.XDomainRequest;
                kr(["get", "put", "post", "patch", "head", "delete"], function(e) {
                    Or[e === "delete" ? "del" : e] = function(t, n, r) {
                        n = Ar(t, n, r);
                        n.method = e.toUpperCase();
                        return Mr(n)
                    }
                });
                var Pr = function(t, n) {
                    var r = new o.WebVTT.Parser(o, o.vttjs, o.WebVTT.StringDecoder());
                    var i = [];
                    r.oncue = function(e) {
                        n.addCue(e)
                    };
                    r.onparsingerror = function(e) {
                        i.push(e)
                    };
                    r.onflush = function() {
                        n.trigger({
                            type: "loadeddata",
                            target: n
                        })
                    };
                    r.parse(t);
                    if (i.length > 0) {
                        if (o.console && o.console.groupCollapsed) {
                            o.console.groupCollapsed("Text Track parsing errors for " + n.src)
                        }
                        i.forEach(function(e) {
                            return Y.error(e)
                        });
                        if (o.console && o.console.groupEnd) {
                            o.console.groupEnd()
                        }
                    }
                    r.flush()
                };
                var Hr = function(t, n) {
                    var r = {
                        uri: t
                    };
                    var i = ar(t);
                    if (i) {
                        r.cors = i
                    }
                    Cr(r, sn(this, function(e, t, r) {
                        if (e) {
                            return Y.error(e, t)
                        }
                        n.loaded_ = true;
                        if (typeof o.WebVTT !== "function") {
                            if (n.tech_) {
                                var i = function() {
                                    return Pr(r, n)
                                };
                                n.tech_.on("vttjsloaded", i);
                                n.tech_.on("vttjserror", function() {
                                    Y.error("vttjs failed to load, stopping trying to process " + n.src);
                                    n.tech_.off("vttjsloaded", i)
                                })
                            }
                        } else {
                            Pr(r, n)
                        }
                    }))
                };
                var Br = function(e) {
                    function t() {
                        var n, r;
                        var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        j(this, t);
                        if (!i.tech) {
                            throw new Error("A tech was not provided.")
                        }
                        var s = En(i, {
                            kind: nr[i.kind] || "subtitles",
                            language: i.language || i.srclang || ""
                        });
                        var o = rr[s.mode] || "disabled";
                        var u = s["default"];
                        if (s.kind === "metadata" || s.kind === "chapters") {
                            o = "hidden"
                        }
                        var a = (n = I(this, e.call(this, s)),
                            n);
                        a.tech_ = s.tech;
                        if (A) {
                            for (var f in t.prototype) {
                                if (f !== "constructor") {
                                    a[f] = t.prototype[f]
                                }
                            }
                        }
                        a.cues_ = [];
                        a.activeCues_ = [];
                        var l = new Zn(a.cues_);
                        var c = new Zn(a.activeCues_);
                        var h = false;
                        var p = sn(a, function() {
                            this.activeCues;
                            if (h) {
                                this.trigger("cuechange");
                                h = false
                            }
                        });
                        if (o !== "disabled") {
                            a.tech_.ready(function() {
                                a.tech_.on("timeupdate", p)
                            }, true)
                        }
                        Object.defineProperty(a, "default", {
                            get: function() {
                                return u
                            },
                            set: function() {}
                        });
                        Object.defineProperty(a, "mode", {
                            get: function() {
                                return o
                            },
                            set: function(t) {
                                var n = this;
                                if (!rr[t]) {
                                    return
                                }
                                o = t;
                                if (o === "showing") {
                                    this.tech_.ready(function() {
                                        n.tech_.on("timeupdate", p)
                                    }, true)
                                }
                                this.trigger("modechange")
                            }
                        });
                        Object.defineProperty(a, "cues", {
                            get: function() {
                                if (!this.loaded_) {
                                    return null
                                }
                                return l
                            },
                            set: function() {}
                        });
                        Object.defineProperty(a, "activeCues", {
                            get: function() {
                                if (!this.loaded_) {
                                    return null
                                }
                                if (this.cues.length === 0) {
                                    return c
                                }
                                var t = this.tech_.currentTime();
                                var n = [];
                                for (var r = 0, i = this.cues.length; r < i; r++) {
                                    var s = this.cues[r];
                                    if (s.startTime <= t && s.endTime >= t) {
                                        n.push(s)
                                    } else if (s.startTime === s.endTime && s.startTime <= t && s.startTime + .5 >= t) {
                                        n.push(s)
                                    }
                                }
                                h = false;
                                if (n.length !== this.activeCues_.length) {
                                    h = true
                                } else {
                                    for (var o = 0; o < n.length; o++) {
                                        if (this.activeCues_.indexOf(n[o]) === -1) {
                                            h = true
                                        }
                                    }
                                }
                                this.activeCues_ = n;
                                c.setCues_(this.activeCues_);
                                return c
                            },
                            set: function() {}
                        });
                        if (s.src) {
                            a.src = s.src;
                            Hr(s.src, a)
                        } else {
                            a.loaded_ = true
                        }
                        return r = a,
                            I(n, r)
                    }
                    F(t, e);
                    t.prototype.addCue = function(t) {
                        var n = t;
                        if (o.vttjs && !(t instanceof o.vttjs.VTTCue)) {
                            n = new o.vttjs.VTTCue(t.startTime, t.endTime, t.text);
                            for (var r in t) {
                                if (!(r in n)) {
                                    n[r] = t[r]
                                }
                            }
                            n.id = t.id;
                            n.originalCue_ = t
                        }
                        var i = this.tech_.textTracks();
                        for (var s = 0; s < i.length; s++) {
                            if (i[s] !== this) {
                                i[s].removeCue(n)
                            }
                        }
                        this.cues_.push(n);
                        this.cues.setCues_(this.cues_)
                    };
                    t.prototype.removeCue = function(t) {
                        var n = this.cues_.length;
                        while (n--) {
                            var r = this.cues_[n];
                            if (r === t || r.originalCue_ && r.originalCue_ === t) {
                                this.cues_.splice(n, 1);
                                this.cues.setCues_(this.cues_);
                                break
                            }
                        }
                    };
                    return t
                }(ir);
                Br.prototype.allowedEvents_ = {
                    cuechange: "cuechange"
                };
                var jr = function(e) {
                    function t() {
                        var n, r;
                        var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        j(this, t);
                        var s = En(i, {
                            kind: tr[i.kind] || ""
                        });
                        var o = (n = I(this, e.call(this, s)),
                            n);
                        var u = false;
                        if (A) {
                            for (var a in t.prototype) {
                                if (a !== "constructor") {
                                    o[a] = t.prototype[a]
                                }
                            }
                        }
                        Object.defineProperty(o, "enabled", {
                            get: function() {
                                return u
                            },
                            set: function(t) {
                                if (typeof t !== "boolean" || t === u) {
                                    return
                                }
                                u = t;
                                this.trigger("enabledchange")
                            }
                        });
                        if (s.enabled) {
                            o.enabled = s.enabled
                        }
                        o.loaded_ = true;
                        return r = o,
                            I(n, r)
                    }
                    F(t, e);
                    return t
                }(ir);
                var Fr = function(e) {
                    function t() {
                        var n, r;
                        var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        j(this, t);
                        var s = En(i, {
                            kind: er[i.kind] || ""
                        });
                        var o = (n = I(this, e.call(this, s)),
                            n);
                        var u = false;
                        if (A) {
                            for (var a in t.prototype) {
                                if (a !== "constructor") {
                                    o[a] = t.prototype[a]
                                }
                            }
                        }
                        Object.defineProperty(o, "selected", {
                            get: function() {
                                return u
                            },
                            set: function(t) {
                                if (typeof t !== "boolean" || t === u) {
                                    return
                                }
                                u = t;
                                this.trigger("selectedchange")
                            }
                        });
                        if (s.selected) {
                            o.selected = s.selected
                        }
                        return r = o,
                            I(n, r)
                    }
                    F(t, e);
                    return t
                }(ir);
                var Ir = 0;
                var qr = 1;
                var Rr = 2;
                var Ur = 3;
                var zr = function(e) {
                    function t() {
                        var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        j(this, t);
                        var r = I(this, e.call(this));
                        var i = void 0;
                        var s = r;
                        if (A) {
                            s = h.createElement("custom");
                            for (var o in t.prototype) {
                                if (o !== "constructor") {
                                    s[o] = t.prototype[o]
                                }
                            }
                        }
                        var u = new Br(n);
                        s.kind = u.kind;
                        s.src = u.src;
                        s.srclang = u.language;
                        s.label = u.label;
                        s["default"] = u["default"];
                        Object.defineProperty(s, "readyState", {
                            get: function() {
                                return i
                            }
                        });
                        Object.defineProperty(s, "track", {
                            get: function() {
                                return u
                            }
                        });
                        i = Ir;
                        u.addEventListener("loadeddata", function() {
                            i = Rr;
                            s.trigger({
                                type: "load",
                                target: s
                            })
                        });
                        if (A) {
                            var a;
                            return a = s,
                                I(r, a)
                        }
                        return r
                    }
                    F(t, e);
                    return t
                }(un);
                zr.prototype.allowedEvents_ = {
                    load: "load"
                };
                zr.NONE = Ir;
                zr.LOADING = qr;
                zr.LOADED = Rr;
                zr.ERROR = Ur;
                var Wr = {
                    audio: {
                        ListClass: Jn,
                        TrackClass: jr,
                        capitalName: "Audio"
                    },
                    video: {
                        ListClass: Qn,
                        TrackClass: Fr,
                        capitalName: "Video"
                    },
                    text: {
                        ListClass: Gn,
                        TrackClass: Br,
                        capitalName: "Text"
                    }
                };
                Object.keys(Wr).forEach(function(e) {
                    Wr[e].getterName = e + "Tracks";
                    Wr[e].privateName = e + "Tracks_"
                });
                var Xr = {
                    remoteText: {
                        ListClass: Gn,
                        TrackClass: Br,
                        capitalName: "RemoteText",
                        getterName: "remoteTextTracks",
                        privateName: "remoteTextTracks_"
                    },
                    remoteTextEl: {
                        ListClass: Yn,
                        TrackClass: zr,
                        capitalName: "RemoteTextTrackEls",
                        getterName: "remoteTextTrackEls",
                        privateName: "remoteTextTrackEls_"
                    }
                };
                var Vr = En(Wr, Xr);
                Xr.names = Object.keys(Xr);
                Wr.names = Object.keys(Wr);
                Vr.names = [].concat(Xr.names).concat(Wr.names);
                var $r = Object.create || function() {
                    function e() {}
                    return function(t) {
                        if (arguments.length !== 1) {
                            throw new Error("Object.create shim only accepts one parameter.")
                        }
                        e.prototype = t;
                        return new e
                    }
                }();
                Jr.prototype = $r(Error.prototype);
                Jr.prototype.constructor = Jr;
                Jr.Errors = {
                    BadSignature: {
                        code: 0,
                        message: "Malformed WebVTT signature."
                    },
                    BadTimeStamp: {
                        code: 1,
                        message: "Malformed time stamp."
                    }
                };
                Qr.prototype = {
                    set: function(t, n) {
                        if (!this.get(t) && n !== "") {
                            this.values[t] = n
                        }
                    },
                    get: function(t, n, r) {
                        if (r) {
                            return this.has(t) ? this.values[t] : n[r]
                        }
                        return this.has(t) ? this.values[t] : n
                    },
                    has: function(t) {
                        return t in this.values
                    },
                    alt: function(t, n, r) {
                        for (var i = 0; i < r.length; ++i) {
                            if (n === r[i]) {
                                this.set(t, n);
                                break
                            }
                        }
                    },
                    integer: function(t, n) {
                        if (/^-?\d+$/.test(n)) {
                            this.set(t, parseInt(n, 10))
                        }
                    },
                    percent: function(t, n) {
                        var r;
                        if (r = n.match(/^([\d]{1,3})(\.[\d]*)?%$/)) {
                            n = parseFloat(n);
                            if (n >= 0 && n <= 100) {
                                this.set(t, n);
                                return true
                            }
                        }
                        return false
                    }
                };
                var Zr = {
                    "&amp;": "&",
                    "&lt;": "<",
                    "&gt;": ">",
                    "&lrm;": "‎",
                    "&rlm;": "‏",
                    "&nbsp;": " "
                };
                var ei = {
                    c: "span",
                    i: "i",
                    b: "b",
                    u: "u",
                    ruby: "ruby",
                    rt: "rt",
                    v: "span",
                    lang: "span"
                };
                var ti = {
                    v: "title",
                    lang: "lang"
                };
                var ni = {
                    rt: "ruby"
                };
                var ii = [
                    [1470, 1470],
                    [1472, 1472],
                    [1475, 1475],
                    [1478, 1478],
                    [1488, 1514],
                    [1520, 1524],
                    [1544, 1544],
                    [1547, 1547],
                    [1549, 1549],
                    [1563, 1563],
                    [1566, 1610],
                    [1645, 1647],
                    [1649, 1749],
                    [1765, 1766],
                    [1774, 1775],
                    [1786, 1805],
                    [1807, 1808],
                    [1810, 1839],
                    [1869, 1957],
                    [1969, 1969],
                    [1984, 2026],
                    [2036, 2037],
                    [2042, 2042],
                    [2048, 2069],
                    [2074, 2074],
                    [2084, 2084],
                    [2088, 2088],
                    [2096, 2110],
                    [2112, 2136],
                    [2142, 2142],
                    [2208, 2208],
                    [2210, 2220],
                    [8207, 8207],
                    [64285, 64285],
                    [64287, 64296],
                    [64298, 64310],
                    [64312, 64316],
                    [64318, 64318],
                    [64320, 64321],
                    [64323, 64324],
                    [64326, 64449],
                    [64467, 64829],
                    [64848, 64911],
                    [64914, 64967],
                    [65008, 65020],
                    [65136, 65140],
                    [65142, 65276],
                    [67584, 67589],
                    [67592, 67592],
                    [67594, 67637],
                    [67639, 67640],
                    [67644, 67644],
                    [67647, 67669],
                    [67671, 67679],
                    [67840, 67867],
                    [67872, 67897],
                    [67903, 67903],
                    [67968, 68023],
                    [68030, 68031],
                    [68096, 68096],
                    [68112, 68115],
                    [68117, 68119],
                    [68121, 68147],
                    [68160, 68167],
                    [68176, 68184],
                    [68192, 68223],
                    [68352, 68405],
                    [68416, 68437],
                    [68440, 68466],
                    [68472, 68479],
                    [68608, 68680],
                    [126464, 126467],
                    [126469, 126495],
                    [126497, 126498],
                    [126500, 126500],
                    [126503, 126503],
                    [126505, 126514],
                    [126516, 126519],
                    [126521, 126521],
                    [126523, 126523],
                    [126530, 126530],
                    [126535, 126535],
                    [126537, 126537],
                    [126539, 126539],
                    [126541, 126543],
                    [126545, 126546],
                    [126548, 126548],
                    [126551, 126551],
                    [126553, 126553],
                    [126555, 126555],
                    [126557, 126557],
                    [126559, 126559],
                    [126561, 126562],
                    [126564, 126564],
                    [126567, 126570],
                    [126572, 126578],
                    [126580, 126583],
                    [126585, 126588],
                    [126590, 126590],
                    [126592, 126601],
                    [126603, 126619],
                    [126625, 126627],
                    [126629, 126633],
                    [126635, 126651],
                    [1114109, 1114109]
                ];
                ai.prototype.applyStyles = function(e, t) {
                    t = t || this.div;
                    for (var n in e) {
                        if (e.hasOwnProperty(n)) {
                            t.style[n] = e[n]
                        }
                    }
                };
                ai.prototype.formatStyle = function(e, t) {
                    return e === 0 ? 0 : e + t
                };
                fi.prototype = $r(ai.prototype);
                fi.prototype.constructor = fi;
                li.prototype.move = function(e, t) {
                    t = t !== undefined ? t : this.lineHeight;
                    switch (e) {
                        case "+x":
                            this.left += t;
                            this.right += t;
                            break;
                        case "-x":
                            this.left -= t;
                            this.right -= t;
                            break;
                        case "+y":
                            this.top += t;
                            this.bottom += t;
                            break;
                        case "-y":
                            this.top -= t;
                            this.bottom -= t;
                            break
                    }
                };
                li.prototype.overlaps = function(e) {
                    return this.left < e.right && this.right > e.left && this.top < e.bottom && this.bottom > e.top
                };
                li.prototype.overlapsAny = function(e) {
                    for (var t = 0; t < e.length; t++) {
                        if (this.overlaps(e[t])) {
                            return true
                        }
                    }
                    return false
                };
                li.prototype.within = function(e) {
                    return this.top >= e.top && this.bottom <= e.bottom && this.left >= e.left && this.right <= e.right
                };
                li.prototype.overlapsOppositeAxis = function(e, t) {
                    switch (t) {
                        case "+x":
                            return this.left < e.left;
                        case "-x":
                            return this.right > e.right;
                        case "+y":
                            return this.top < e.top;
                        case "-y":
                            return this.bottom > e.bottom
                    }
                };
                li.prototype.intersectPercentage = function(e) {
                    var t = Math.max(0, Math.min(this.right, e.right) - Math.max(this.left, e.left)),
                        n = Math.max(0, Math.min(this.bottom, e.bottom) - Math.max(this.top, e.top)),
                        r = t * n;
                    return r / (this.height * this.width)
                };
                li.prototype.toCSSCompatValues = function(e) {
                    return {
                        top: this.top - e.top,
                        bottom: e.bottom - this.bottom,
                        left: this.left - e.left,
                        right: e.right - this.right,
                        height: this.height,
                        width: this.width
                    }
                };
                li.getSimpleBoxPosition = function(e) {
                    var t = e.div ? e.div.offsetHeight : e.tagName ? e.offsetHeight : 0;
                    var n = e.div ? e.div.offsetWidth : e.tagName ? e.offsetWidth : 0;
                    var r = e.div ? e.div.offsetTop : e.tagName ? e.offsetTop : 0;
                    e = e.div ? e.div.getBoundingClientRect() : e.tagName ? e.getBoundingClientRect() : e;
                    var i = {
                        left: e.left,
                        right: e.right,
                        top: e.top || r,
                        height: e.height || t,
                        bottom: e.bottom || r + (e.height || t),
                        width: e.width || n
                    };
                    return i
                };
                hi.StringDecoder = function() {
                    return {
                        decode: function(t) {
                            if (!t) {
                                return ""
                            }
                            if (typeof t !== "string") {
                                throw new Error("Error - expected string data.")
                            }
                            return decodeURIComponent(encodeURIComponent(t))
                        }
                    }
                };
                hi.convertCueToDOMTree = function(e, t) {
                    if (!e || !t) {
                        return null
                    }
                    return ri(e, t)
                };
                var pi = .05;
                var di = "sans-serif";
                var vi = "1.5%";
                hi.processCues = function(e, t, n) {
                    function i(e) {
                        for (var t = 0; t < e.length; t++) {
                            if (e[t].hasBeenReset || !e[t].displayState) {
                                return true
                            }
                        }
                        return false
                    }
                    if (!e || !t || !n) {
                        return null
                    }
                    while (n.firstChild) {
                        n.removeChild(n.firstChild)
                    }
                    var r = e.document.createElement("div");
                    r.style.position = "absolute";
                    r.style.left = "0";
                    r.style.right = "0";
                    r.style.top = "0";
                    r.style.bottom = "0";
                    r.style.margin = vi;
                    n.appendChild(r);
                    if (!i(t)) {
                        for (var s = 0; s < t.length; s++) {
                            r.appendChild(t[s].displayState)
                        }
                        return
                    }
                    var o = [],
                        u = li.getSimpleBoxPosition(r),
                        a = Math.round(u.height * pi * 100) / 100;
                    var f = {
                        font: a + "px " + di
                    };
                    (function() {
                        var n, i;
                        for (var s = 0; s < t.length; s++) {
                            i = t[s];
                            n = new fi(e, i, f);
                            r.appendChild(n.div);
                            ci(e, n, u, o);
                            i.displayState = n.div;
                            o.push(li.getSimpleBoxPosition(n))
                        }
                    })()
                };
                hi.Parser = function(e, t, n) {
                    if (!n) {
                        n = t;
                        t = {}
                    }
                    if (!t) {
                        t = {}
                    }
                    this.window = e;
                    this.vttjs = t;
                    this.state = "INITIAL";
                    this.buffer = "";
                    this.decoder = n || new TextDecoder("utf8");
                    this.regionList = []
                };
                hi.Parser.prototype = {
                    reportOrThrowError: function(t) {
                        if (t instanceof Jr) {
                            this.onparsingerror && this.onparsingerror(t)
                        } else {
                            throw t
                        }
                    },
                    parse: function(t) {
                        function r() {
                            var e = n.buffer;
                            var t = 0;
                            while (t < e.length && e[t] !== "\r" && e[t] !== "\n") {
                                ++t
                            }
                            var r = e.substr(0, t);
                            if (e[t] === "\r") {
                                ++t
                            }
                            if (e[t] === "\n") {
                                ++t
                            }
                            n.buffer = e.substr(t);
                            return r
                        }

                        function i(e) {
                            var t = new Qr;
                            Gr(e, function(e, n) {
                                switch (e) {
                                    case "id":
                                        t.set(e, n);
                                        break;
                                    case "width":
                                        t.percent(e, n);
                                        break;
                                    case "lines":
                                        t.integer(e, n);
                                        break;
                                    case "regionanchor":
                                    case "viewportanchor":
                                        var r = n.split(",");
                                        if (r.length !== 2) {
                                            break
                                        }
                                        var i = new Qr;
                                        i.percent("x", r[0]);
                                        i.percent("y", r[1]);
                                        if (!i.has("x") || !i.has("y")) {
                                            break
                                        }
                                        t.set(e + "X", i.get("x"));
                                        t.set(e + "Y", i.get("y"));
                                        break;
                                    case "scroll":
                                        t.alt(e, n, ["up"]);
                                        break
                                }
                            }, /=/, /\s/);
                            if (t.has("id")) {
                                var r = new(n.vttjs.VTTRegion || n.window.VTTRegion);
                                r.width = t.get("width", 100);
                                r.lines = t.get("lines", 3);
                                r.regionAnchorX = t.get("regionanchorX", 0);
                                r.regionAnchorY = t.get("regionanchorY", 100);
                                r.viewportAnchorX = t.get("viewportanchorX", 0);
                                r.viewportAnchorY = t.get("viewportanchorY", 100);
                                r.scroll = t.get("scroll", "");
                                n.onregion && n.onregion(r);
                                n.regionList.push({
                                    id: t.get("id"),
                                    region: r
                                })
                            }
                        }

                        function s(e) {
                            var t = new Qr;
                            Gr(e, function(e, n) {
                                switch (e) {
                                    case "MPEGT":
                                        t.integer(e + "S", n);
                                        break;
                                    case "LOCA":
                                        t.set(e + "L", Kr(n));
                                        break
                                }
                            }, /[^\d]:/, /,/);
                            n.ontimestampmap && n.ontimestampmap({
                                MPEGTS: t.get("MPEGTS"),
                                LOCAL: t.get("LOCAL")
                            })
                        }

                        function o(e) {
                            if (e.match(/X-TIMESTAMP-MAP/)) {
                                Gr(e, function(e, t) {
                                    switch (e) {
                                        case "X-TIMESTAMP-MAP":
                                            s(t);
                                            break
                                    }
                                }, /=/)
                            } else {
                                Gr(e, function(e, t) {
                                    switch (e) {
                                        case "Region":
                                            i(t);
                                            break
                                    }
                                }, /:/)
                            }
                        }
                        var n = this;
                        if (t) {
                            n.buffer += n.decoder.decode(t, {
                                stream: true
                            })
                        }
                        try {
                            var u;
                            if (n.state === "INITIAL") {
                                if (!/\r\n|\n/.test(n.buffer)) {
                                    return this
                                }
                                u = r();
                                var a = u.match(/^WEBVTT([ \t].*)?$/);
                                if (!a || !a[0]) {
                                    throw new Jr(Jr.Errors.BadSignature)
                                }
                                n.state = "HEADER"
                            }
                            var f = false;
                            while (n.buffer) {
                                if (!/\r\n|\n/.test(n.buffer)) {
                                    return this
                                }
                                if (!f) {
                                    u = r()
                                } else {
                                    f = false
                                }
                                switch (n.state) {
                                    case "HEADER":
                                        if (/:/.test(u)) {
                                            o(u)
                                        } else if (!u) {
                                            n.state = "ID"
                                        }
                                        continue;
                                    case "NOTE":
                                        if (!u) {
                                            n.state = "ID"
                                        }
                                        continue;
                                    case "ID":
                                        if (/^NOTE($|[ \t])/.test(u)) {
                                            n.state = "NOTE";
                                            break
                                        }
                                        if (!u) {
                                            continue
                                        }
                                        n.cue = new(n.vttjs.VTTCue || n.window.VTTCue)(0, 0, "");
                                        n.state = "CUE";
                                        if (u.indexOf("-->") === -1) {
                                            n.cue.id = u;
                                            continue
                                        };
                                    case "CUE":
                                        try {
                                            Yr(u, n.cue, n.regionList)
                                        } catch (l) {
                                            n.reportOrThrowError(l);
                                            n.cue = null;
                                            n.state = "BADCUE";
                                            continue
                                        }
                                        n.state = "CUETEXT";
                                        continue;
                                    case "CUETEXT":
                                        var c = u.indexOf("-->") !== -1;
                                        if (!u || c && (f = true)) {
                                            n.oncue && n.oncue(n.cue);
                                            n.cue = null;
                                            n.state = "ID";
                                            continue
                                        }
                                        if (n.cue.text) {
                                            n.cue.text += "\n"
                                        }
                                        n.cue.text += u;
                                        continue;
                                    case "BADCUE":
                                        if (!u) {
                                            n.state = "ID"
                                        }
                                        continue
                                }
                            }
                        } catch (l) {
                            n.reportOrThrowError(l);
                            if (n.state === "CUETEXT" && n.cue && n.oncue) {
                                n.oncue(n.cue)
                            }
                            n.cue = null;
                            n.state = n.state === "INITIAL" ? "BADWEBVTT" : "BADCUE"
                        }
                        return this
                    },
                    flush: function() {
                        var t = this;
                        try {
                            t.buffer += t.decoder.decode();
                            if (t.cue || t.state === "HEADER") {
                                t.buffer += "\n\n";
                                t.parse()
                            }
                            if (t.state === "INITIAL") {
                                throw new Jr(Jr.Errors.BadSignature)
                            }
                        } catch (n) {
                            t.reportOrThrowError(n)
                        }
                        t.onflush && t.onflush();
                        return this
                    }
                };
                var mi = hi;
                var gi = "auto";
                var yi = {
                    "": true,
                    lr: true,
                    rl: true
                };
                var bi = {
                    start: true,
                    middle: true,
                    end: true,
                    left: true,
                    right: true
                };
                xi.prototype.getCueAsHTML = function() {
                    return WebVTT.convertCueToDOMTree(window, this.text)
                };
                var Ti = xi;
                var Ni = {
                    "": true,
                    up: true
                };
                var Ai = Li;
                var Oi = i(function(e) {
                    var t = e.exports = {
                        WebVTT: mi,
                        VTTCue: Ti,
                        VTTRegion: Ai
                    };
                    o.vttjs = t;
                    o.WebVTT = t.WebVTT;
                    var n = t.VTTCue;
                    var r = t.VTTRegion;
                    var i = o.VTTCue;
                    var s = o.VTTRegion;
                    t.shim = function() {
                        o.VTTCue = n;
                        o.VTTRegion = r
                    };
                    t.restore = function() {
                        o.VTTCue = i;
                        o.VTTRegion = s
                    };
                    if (!o.VTTCue) {
                        t.shim()
                    }
                });
                var _i = function(e) {
                    function t() {
                        var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function() {};
                        j(this, t);
                        n.reportTouchActivity = false;
                        var i = I(this, e.call(this, null, n, r));
                        i.hasStarted_ = false;
                        i.on("playing", function() {
                            this.hasStarted_ = true
                        });
                        i.on("loadstart", function() {
                            this.hasStarted_ = false
                        });
                        Vr.names.forEach(function(e) {
                            var t = Vr[e];
                            if (n && n[t.getterName]) {
                                i[t.privateName] = n[t.getterName]
                            }
                        });
                        if (!i.featuresProgressEvents) {
                            i.manualProgressOn()
                        }
                        if (!i.featuresTimeupdateEvents) {
                            i.manualTimeUpdatesOn()
                        }
                        ["Text", "Audio", "Video"].forEach(function(e) {
                            if (n["native" + e + "Tracks"] === false) {
                                i["featuresNative" + e + "Tracks"] = false
                            }
                        });
                        if (n.nativeCaptions === false || n.nativeTextTracks === false) {
                            i.featuresNativeTextTracks = false
                        } else if (n.nativeCaptions === true || n.nativeTextTracks === true) {
                            i.featuresNativeTextTracks = true
                        }
                        if (!i.featuresNativeTextTracks) {
                            i.emulateTextTracks()
                        }
                        i.autoRemoteTextTracks_ = new Vr.text.ListClass;
                        i.initTrackListeners();
                        if (!n.nativeControlsForTouch) {
                            i.emitTapEvents()
                        }
                        if (i.constructor) {
                            i.name_ = i.constructor.name || "Unknown Tech"
                        }
                        return i
                    }
                    F(t, e);
                    t.prototype.manualProgressOn = function() {
                        this.on("durationchange", this.onDurationChange);
                        this.manualProgress = true;
                        this.one("ready", this.trackProgress)
                    };
                    t.prototype.manualProgressOff = function() {
                        this.manualProgress = false;
                        this.stopTrackingProgress();
                        this.off("durationchange", this.onDurationChange)
                    };
                    t.prototype.trackProgress = function(t) {
                        this.stopTrackingProgress();
                        this.progressInterval = this.setInterval(sn(this, function() {
                            var e = this.bufferedPercent();
                            if (this.bufferedPercent_ !== e) {
                                this.trigger("progress")
                            }
                            this.bufferedPercent_ = e;
                            if (e === 1) {
                                this.stopTrackingProgress()
                            }
                        }), 500)
                    };
                    t.prototype.onDurationChange = function(t) {
                        this.duration_ = this.duration()
                    };
                    t.prototype.buffered = function() {
                        return Cn(0, 0)
                    };
                    t.prototype.bufferedPercent = function() {
                        return kn(this.buffered(), this.duration_)
                    };
                    t.prototype.stopTrackingProgress = function() {
                        this.clearInterval(this.progressInterval)
                    };
                    t.prototype.manualTimeUpdatesOn = function() {
                        this.manualTimeUpdates = true;
                        this.on("play", this.trackCurrentTime);
                        this.on("pause", this.stopTrackingCurrentTime)
                    };
                    t.prototype.manualTimeUpdatesOff = function() {
                        this.manualTimeUpdates = false;
                        this.stopTrackingCurrentTime();
                        this.off("play", this.trackCurrentTime);
                        this.off("pause", this.stopTrackingCurrentTime)
                    };
                    t.prototype.trackCurrentTime = function() {
                        if (this.currentTimeInterval) {
                            this.stopTrackingCurrentTime()
                        }
                        this.currentTimeInterval = this.setInterval(function() {
                            this.trigger({
                                type: "timeupdate",
                                target: this,
                                manuallyTriggered: true
                            })
                        }, 250)
                    };
                    t.prototype.stopTrackingCurrentTime = function() {
                        this.clearInterval(this.currentTimeInterval);
                        this.trigger({
                            type: "timeupdate",
                            target: this,
                            manuallyTriggered: true
                        })
                    };
                    t.prototype.dispose = function() {
                        this.clearTracks(Wr.names);
                        if (this.manualProgress) {
                            this.manualProgressOff()
                        }
                        if (this.manualTimeUpdates) {
                            this.manualTimeUpdatesOff()
                        }
                        e.prototype.dispose.call(this)
                    };
                    t.prototype.clearTracks = function(t) {
                        var n = this;
                        t = [].concat(t);
                        t.forEach(function(e) {
                            var t = n[e + "Tracks"]() || [];
                            var r = t.length;
                            while (r--) {
                                var i = t[r];
                                if (e === "text") {
                                    n.removeRemoteTextTrack(i)
                                }
                                t.removeTrack(i)
                            }
                        })
                    };
                    t.prototype.cleanupAutoTextTracks = function() {
                        var t = this.autoRemoteTextTracks_ || [];
                        var n = t.length;
                        while (n--) {
                            var r = t[n];
                            this.removeRemoteTextTrack(r)
                        }
                    };
                    t.prototype.reset = function() {};
                    t.prototype.error = function(t) {
                        if (t !== undefined) {
                            this.error_ = new Pn(t);
                            this.trigger("error")
                        }
                        return this.error_
                    };
                    t.prototype.played = function() {
                        if (this.hasStarted_) {
                            return Cn(0, 0)
                        }
                        return Cn()
                    };
                    t.prototype.setCurrentTime = function() {
                        if (this.manualTimeUpdates) {
                            this.trigger({
                                type: "timeupdate",
                                target: this,
                                manuallyTriggered: true
                            })
                        }
                    };
                    t.prototype.initTrackListeners = function() {
                        var t = this;
                        Wr.names.forEach(function(e) {
                            var n = Wr[e];
                            var r = function() {
                                t.trigger(e + "trackchange")
                            };
                            var i = t[n.getterName]();
                            i.addEventListener("removetrack", r);
                            i.addEventListener("addtrack", r);
                            t.on("dispose", function() {
                                i.removeEventListener("removetrack", r);
                                i.removeEventListener("addtrack", r)
                            })
                        })
                    };
                    t.prototype.addWebVttScript_ = function() {
                        var t = this;
                        if (o.WebVTT) {
                            return
                        }
                        if (h.body.contains(this.el())) {
                            if (!this.options_["vtt.js"] && $(Oi) && Object.keys(Oi).length > 0) {
                                this.trigger("vttjsloaded");
                                return
                            }
                            var n = h.createElement("script");
                            n.src = this.options_["vtt.js"] || "https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js";
                            n.onload = function() {
                                t.trigger("vttjsloaded")
                            };
                            n.onerror = function() {
                                t.trigger("vttjserror")
                            };
                            this.on("dispose", function() {
                                n.onload = null;
                                n.onerror = null
                            });
                            o.WebVTT = true;
                            this.el().parentNode.appendChild(n)
                        } else {
                            this.ready(this.addWebVttScript_)
                        }
                    };
                    t.prototype.emulateTextTracks = function() {
                        var t = this;
                        var n = this.textTracks();
                        var r = this.remoteTextTracks();
                        var i = function(t) {
                            return n.addTrack(t.track)
                        };
                        var s = function(t) {
                            return n.removeTrack(t.track)
                        };
                        r.on("addtrack", i);
                        r.on("removetrack", s);
                        this.addWebVttScript_();
                        var o = function() {
                            return t.trigger("texttrackchange")
                        };
                        var u = function() {
                            o();
                            for (var t = 0; t < n.length; t++) {
                                var r = n[t];
                                r.removeEventListener("cuechange", o);
                                if (r.mode === "showing") {
                                    r.addEventListener("cuechange", o)
                                }
                            }
                        };
                        u();
                        n.addEventListener("change", u);
                        n.addEventListener("addtrack", u);
                        n.addEventListener("removetrack", u);
                        this.on("dispose", function() {
                            r.off("addtrack", i);
                            r.off("removetrack", s);
                            n.removeEventListener("change", u);
                            n.removeEventListener("addtrack", u);
                            n.removeEventListener("removetrack", u);
                            for (var e = 0; e < n.length; e++) {
                                var t = n[e];
                                t.removeEventListener("cuechange", o)
                            }
                        })
                    };
                    t.prototype.addTextTrack = function(t, n, r) {
                        if (!t) {
                            throw new Error("TextTrack kind is required but was not provided")
                        }
                        return Mi(this, t, n, r)
                    };
                    t.prototype.createRemoteTextTrack = function(t) {
                        var n = En(t, {
                            tech: this
                        });
                        return new Xr.remoteTextEl.TrackClass(n)
                    };
                    t.prototype.addRemoteTextTrack = function() {
                        var t = this;
                        var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        var r = arguments[1];
                        var i = this.createRemoteTextTrack(n);
                        if (r !== true && r !== false) {
                            Y.warn('Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js');
                            r = true
                        }
                        this.remoteTextTrackEls().addTrackElement_(i);
                        this.remoteTextTracks().addTrack(i.track);
                        if (r !== true) {
                            this.ready(function() {
                                return t.autoRemoteTextTracks_.addTrack(i.track)
                            })
                        }
                        return i
                    };
                    t.prototype.removeRemoteTextTrack = function(t) {
                        var n = this.remoteTextTrackEls().getTrackElementByTrack_(t);
                        this.remoteTextTrackEls().removeTrackElement_(n);
                        this.remoteTextTracks().removeTrack(t);
                        this.autoRemoteTextTracks_.removeTrack(t)
                    };
                    t.prototype.getVideoPlaybackQuality = function() {
                        return {}
                    };
                    t.prototype.setPoster = function() {};
                    t.prototype.playsinline = function() {};
                    t.prototype.setPlaysinline = function() {};
                    t.prototype.canPlayType = function() {
                        return ""
                    };
                    t.canPlayType = function() {
                        return ""
                    };
                    t.canPlaySource = function(n, r) {
                        return t.canPlayType(n.type)
                    };
                    t.isTech = function(n) {
                        return n.prototype instanceof t || n instanceof t || n === t
                    };
                    t.registerTech = function(n, r) {
                        if (!t.techs_) {
                            t.techs_ = {}
                        }
                        if (!t.isTech(r)) {
                            throw new Error("Tech " + n + " must be a Tech")
                        }
                        if (!t.canPlayType) {
                            throw new Error("Techs must have a static canPlayType method on them")
                        }
                        if (!t.canPlaySource) {
                            throw new Error("Techs must have a static canPlaySource method on them")
                        }
                        n = bn(n);
                        t.techs_[n] = r;
                        if (n !== "Tech") {
                            t.defaultTechOrder_.push(n)
                        }
                        return r
                    };
                    t.getTech = function(n) {
                        if (!n) {
                            return
                        }
                        n = bn(n);
                        if (t.techs_ && t.techs_[n]) {
                            return t.techs_[n]
                        }
                        if (o && o.videojs && o.videojs[n]) {
                            Y.warn("The " + n + " tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)");
                            return o.videojs[n]
                        }
                    };
                    return t
                }(Sn);
                Vr.names.forEach(function(e) {
                    var t = Vr[e];
                    _i.prototype[t.getterName] = function() {
                        this[t.privateName] = this[t.privateName] || new t.ListClass;
                        return this[t.privateName]
                    }
                });
                _i.prototype.featuresVolumeControl = true;
                _i.prototype.featuresFullscreenResize = false;
                _i.prototype.featuresPlaybackRate = false;
                _i.prototype.featuresProgressEvents = false;
                _i.prototype.featuresTimeupdateEvents = false;
                _i.prototype.featuresNativeTextTracks = false;
                _i.withSourceHandlers = function(e) {
                    e.registerSourceHandler = function(t, n) {
                        var r = e.sourceHandlers;
                        if (!r) {
                            r = e.sourceHandlers = []
                        }
                        if (n === undefined) {
                            n = r.length
                        }
                        r.splice(n, 0, t)
                    };
                    e.canPlayType = function(t) {
                        var n = e.sourceHandlers || [];
                        var r = void 0;
                        for (var i = 0; i < n.length; i++) {
                            r = n[i].canPlayType(t);
                            if (r) {
                                return r
                            }
                        }
                        return ""
                    };
                    e.selectSourceHandler = function(t, n) {
                        var r = e.sourceHandlers || [];
                        var i = void 0;
                        for (var s = 0; s < r.length; s++) {
                            i = r[s].canHandleSource(t, n);
                            if (i) {
                                return r[s]
                            }
                        }
                        return null
                    };
                    e.canPlaySource = function(t, n) {
                        var r = e.selectSourceHandler(t, n);
                        if (r) {
                            return r.canHandleSource(t, n)
                        }
                        return ""
                    };
                    var t = ["seekable", "duration"];
                    t.forEach(function(e) {
                        var t = this[e];
                        if (typeof t !== "function") {
                            return
                        }
                        this[e] = function() {
                            if (this.sourceHandler_ && this.sourceHandler_[e]) {
                                return this.sourceHandler_[e].apply(this.sourceHandler_, arguments)
                            }
                            return t.apply(this, arguments)
                        }
                    }, e.prototype);
                    e.prototype.setSource = function(t) {
                        var n = e.selectSourceHandler(t, this.options_);
                        if (!n) {
                            if (e.nativeSourceHandler) {
                                n = e.nativeSourceHandler
                            } else {
                                Y.error("No source hander found for the current source.")
                            }
                        }
                        this.disposeSourceHandler();
                        this.off("dispose", this.disposeSourceHandler);
                        if (n !== e.nativeSourceHandler) {
                            this.currentSource_ = t
                        }
                        this.sourceHandler_ = n.handleSource(t, this, this.options_);
                        this.on("dispose", this.disposeSourceHandler)
                    };
                    e.prototype.disposeSourceHandler = function() {
                        if (this.currentSource_) {
                            this.clearTracks(["audio", "video"]);
                            this.currentSource_ = null
                        }
                        this.cleanupAutoTextTracks();
                        if (this.sourceHandler_) {
                            if (this.sourceHandler_.dispose) {
                                this.sourceHandler_.dispose()
                            }
                            this.sourceHandler_ = null
                        }
                    }
                };
                Sn.registerComponent("Tech", _i);
                _i.registerTech("Tech", _i);
                _i.defaultTechOrder_ = [];
                var Di = {};
                var Ii = {
                    buffered: 1,
                    currentTime: 1,
                    duration: 1,
                    seekable: 1,
                    played: 1
                };
                var qi = {
                    setCurrentTime: 1
                };
                var zi = function Fo(e) {
                    if (Array.isArray(e)) {
                        var t = [];
                        e.forEach(function(e) {
                            e = Fo(e);
                            if (Array.isArray(e)) {
                                t = t.concat(e)
                            } else if (V(e)) {
                                t.push(e)
                            }
                        });
                        e = t
                    } else if (typeof e === "string" && e.trim()) {
                        e = [{
                            src: e
                        }]
                    } else if (V(e) && typeof e.src === "string" && e.src && e.src.trim()) {
                        e = [e]
                    } else {
                        e = []
                    }
                    return e
                };
                var Wi = function(e) {
                    function t(n, r, i) {
                        j(this, t);
                        var s = En({
                            createEl: false
                        }, r);
                        var o = I(this, e.call(this, n, s, i));
                        if (!r.playerOptions.sources || r.playerOptions.sources.length === 0) {
                            for (var u = 0, a = r.playerOptions.techOrder; u < a.length; u++) {
                                var f = bn(a[u]);
                                var l = _i.getTech(f);
                                if (!f) {
                                    l = Sn.getComponent(f)
                                }
                                if (l && l.isSupported()) {
                                    n.loadTech_(f);
                                    break
                                }
                            }
                        } else {
                            n.src(r.playerOptions.sources)
                        }
                        return o
                    }
                    F(t, e);
                    return t
                }(Sn);
                Sn.registerComponent("MediaLoader", Wi);
                var Xi = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.emitTapEvents();
                        i.enable();
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "div";
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                        r = X({
                            innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
                            className: this.buildCSSClass(),
                            tabIndex: 0
                        }, r);
                        if (n === "button") {
                            Y.error("Creating a ClickableComponent with an HTML element of " + n + " is not supported; use a Button instead.")
                        }
                        i = X({
                            role: "button",
                            "aria-live": "polite"
                        }, i);
                        this.tabIndex_ = r.tabIndex;
                        var s = e.prototype.createEl.call(this, n, r, i);
                        this.createControlTextEl(s);
                        return s
                    };
                    t.prototype.createControlTextEl = function(t) {
                        this.controlTextEl_ = lt("span", {
                            className: "vjs-control-text"
                        });
                        if (t) {
                            t.appendChild(this.controlTextEl_)
                        }
                        this.controlText(this.controlText_, t);
                        return this.controlTextEl_
                    };
                    t.prototype.controlText = function(t) {
                        var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();
                        if (!t) {
                            return this.controlText_ || "Need Text"
                        }
                        var r = this.localize(t);
                        this.controlText_ = t;
                        ct(this.controlTextEl_, r);
                        if (!this.nonIconControl) {
                            n.setAttribute("title", r)
                        }
                    };
                    t.prototype.buildCSSClass = function() {
                        return "vjs-control vjs-button " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.enable = function() {
                        if (!this.enabled_) {
                            this.enabled_ = true;
                            this.removeClass("vjs-disabled");
                            this.el_.setAttribute("aria-disabled", "false");
                            if (typeof this.tabIndex_ !== "undefined") {
                                this.el_.setAttribute("tabIndex", this.tabIndex_)
                            }
                            this.on(["tap", "click"], this.handleClick);
                            this.on("focus", this.handleFocus);
                            this.on("blur", this.handleBlur)
                        }
                    };
                    t.prototype.disable = function() {
                        this.enabled_ = false;
                        this.addClass("vjs-disabled");
                        this.el_.setAttribute("aria-disabled", "true");
                        if (typeof this.tabIndex_ !== "undefined") {
                            this.el_.removeAttribute("tabIndex")
                        }
                        this.off(["tap", "click"], this.handleClick);
                        this.off("focus", this.handleFocus);
                        this.off("blur", this.handleBlur)
                    };
                    t.prototype.handleClick = function(t) {};
                    t.prototype.handleFocus = function(t) {
                        $t(h, "keydown", sn(this, this.handleKeyPress))
                    };
                    t.prototype.handleKeyPress = function(n) {
                        if (n.which === 32 || n.which === 13) {
                            n.preventDefault();
                            this.trigger("click")
                        } else if (e.prototype.handleKeyPress) {
                            e.prototype.handleKeyPress.call(this, n)
                        }
                    };
                    t.prototype.handleBlur = function(t) {
                        Jt(h, "keydown", sn(this, this.handleKeyPress))
                    };
                    return t
                }(Sn);
                Sn.registerComponent("ClickableComponent", Xi);
                var Vi = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.update();
                        n.on("posterchange", sn(i, i.update));
                        return i
                    }
                    F(t, e);
                    t.prototype.dispose = function() {
                        this.player().off("posterchange", this.update);
                        e.prototype.dispose.call(this)
                    };
                    t.prototype.createEl = function() {
                        var t = lt("div", {
                            className: "vjs-poster",
                            tabIndex: -1
                        });
                        if (!P) {
                            this.fallbackImg_ = lt("img");
                            t.appendChild(this.fallbackImg_)
                        }
                        return t
                    };
                    t.prototype.update = function(t) {
                        var n = this.player().poster();
                        this.setSrc(n);
                        if (n) {
                            this.show()
                        } else {
                            this.hide()
                        }
                    };
                    t.prototype.setSrc = function(t) {
                        if (this.fallbackImg_) {
                            this.fallbackImg_.src = t
                        } else {
                            var n = "";
                            if (t) {
                                n = 'url("' + t + '")'
                            }
                            this.el_.style.backgroundImage = n
                        }
                    };
                    t.prototype.handleClick = function(t) {
                        if (!this.player_.controls()) {
                            return
                        }
                        if (this.player_.paused()) {
                            this.player_.play()
                        } else {
                            this.player_.pause()
                        }
                    };
                    return t
                }(Xi);
                Sn.registerComponent("PosterImage", Vi);
                var $i = "#222";
                var Ji = "#ccc";
                var Ki = {
                    monospace: "monospace",
                    sansSerif: "sans-serif",
                    serif: "serif",
                    monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
                    monospaceSerif: '"Courier New", monospace',
                    proportionalSansSerif: "sans-serif",
                    proportionalSerif: "serif",
                    casual: '"Comic Sans MS", Impact, fantasy',
                    script: '"Monotype Corsiva", cursive',
                    smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif'
                };
                var Yi = function(e) {
                    function t(n, r, i) {
                        j(this, t);
                        var s = I(this, e.call(this, n, r, i));
                        n.on("loadstart", sn(s, s.toggleDisplay));
                        n.on("texttrackchange", sn(s, s.updateDisplay));
                        n.on("loadstart", sn(s, s.preselectTrack));
                        n.ready(sn(s, function() {
                            if (n.tech_ && n.tech_.featuresNativeTextTracks) {
                                this.hide();
                                return
                            }
                            n.on("fullscreenchange", sn(this, this.updateDisplay));
                            var e = this.options_.playerOptions.tracks || [];
                            for (var t = 0; t < e.length; t++) {
                                this.player_.addRemoteTextTrack(e[t], true)
                            }
                            this.preselectTrack()
                        }));
                        return s
                    }
                    F(t, e);
                    t.prototype.preselectTrack = function() {
                        var t = {
                            captions: 1,
                            subtitles: 1
                        };
                        var n = this.player_.textTracks();
                        var r = this.player_.cache_.selectedLanguage;
                        var i = void 0;
                        var s = void 0;
                        var o = void 0;
                        for (var u = 0; u < n.length; u++) {
                            var a = n[u];
                            if (r && r.enabled && r.language === a.language) {
                                if (a.kind === r.kind) {
                                    o = a
                                } else if (!o) {
                                    o = a
                                }
                            } else if (r && !r.enabled) {
                                o = null;
                                i = null;
                                s = null
                            } else if (a["default"]) {
                                if (a.kind === "descriptions" && !i) {
                                    i = a
                                } else if (a.kind in t && !s) {
                                    s = a
                                }
                            }
                        }
                        if (o) {
                            o.mode = "showing"
                        } else if (s) {
                            s.mode = "showing"
                        } else if (i) {
                            i.mode = "showing"
                        }
                    };
                    t.prototype.toggleDisplay = function() {
                        if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {
                            this.hide()
                        } else {
                            this.show()
                        }
                    };
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-text-track-display"
                        }, {
                            "aria-live": "off",
                            "aria-atomic": "true"
                        })
                    };
                    t.prototype.clearDisplay = function() {
                        if (typeof o.WebVTT === "function") {
                            o.WebVTT.processCues(o, [], this.el_)
                        }
                    };
                    t.prototype.updateDisplay = function() {
                        var t = this.player_.textTracks();
                        this.clearDisplay();
                        var n = null;
                        var r = null;
                        var i = t.length;
                        while (i--) {
                            var s = t[i];
                            if (s.mode === "showing") {
                                if (s.kind === "descriptions") {
                                    n = s
                                } else {
                                    r = s
                                }
                            }
                        }
                        if (r) {
                            if (this.getAttribute("aria-live") !== "off") {
                                this.setAttribute("aria-live", "off")
                            }
                            this.updateForTrack(r)
                        } else if (n) {
                            if (this.getAttribute("aria-live") !== "assertive") {
                                this.setAttribute("aria-live", "assertive")
                            }
                            this.updateForTrack(n)
                        }
                    };
                    t.prototype.updateForTrack = function(t) {
                        if (typeof o.WebVTT !== "function" || !t.activeCues) {
                            return
                        }
                        var n = this.player_.textTrackSettings.getValues();
                        var r = [];
                        for (var i = 0; i < t.activeCues.length; i++) {
                            r.push(t.activeCues[i])
                        }
                        o.WebVTT.processCues(o, r, this.el_);
                        var s = r.length;
                        while (s--) {
                            var u = r[s];
                            if (!u) {
                                continue
                            }
                            var a = u.displayState;
                            if (n.color) {
                                a.firstChild.style.color = n.color
                            }
                            if (n.textOpacity) {
                                Gi(a.firstChild, "color", Qi(n.color || "#fff", n.textOpacity))
                            }
                            if (n.backgroundColor) {
                                a.firstChild.style.backgroundColor = n.backgroundColor
                            }
                            if (n.backgroundOpacity) {
                                Gi(a.firstChild, "backgroundColor", Qi(n.backgroundColor || "#000", n.backgroundOpacity))
                            }
                            if (n.windowColor) {
                                if (n.windowOpacity) {
                                    Gi(a, "backgroundColor", Qi(n.windowColor, n.windowOpacity))
                                } else {
                                    a.style.backgroundColor = n.windowColor
                                }
                            }
                            if (n.edgeStyle) {
                                if (n.edgeStyle === "dropshadow") {
                                    a.firstChild.style.textShadow = "2px 2px 3px " + $i + ", 2px 2px 4px " + $i + ", 2px 2px 5px " + $i
                                } else if (n.edgeStyle === "raised") {
                                    a.firstChild.style.textShadow = "1px 1px " + $i + ", 2px 2px " + $i + ", 3px 3px " + $i
                                } else if (n.edgeStyle === "depressed") {
                                    a.firstChild.style.textShadow = "1px 1px " + Ji + ", 0 1px " + Ji + ", -1px -1px " + $i + ", 0 -1px " + $i
                                } else if (n.edgeStyle === "uniform") {
                                    a.firstChild.style.textShadow = "0 0 4px " + $i + ", 0 0 4px " + $i + ", 0 0 4px " + $i + ", 0 0 4px " + $i
                                }
                            }
                            if (n.fontPercent && n.fontPercent !== 1) {
                                var f = o.parseFloat(a.style.fontSize);
                                a.style.fontSize = f * n.fontPercent + "px";
                                a.style.height = "auto";
                                a.style.top = "auto";
                                a.style.bottom = "2px"
                            }
                            if (n.fontFamily && n.fontFamily !== "default") {
                                if (n.fontFamily === "small-caps") {
                                    a.firstChild.style.fontVariant = "small-caps"
                                } else {
                                    a.firstChild.style.fontFamily = Ki[n.fontFamily]
                                }
                            }
                        }
                    };
                    return t
                }(Sn);
                Sn.registerComponent("TextTrackDisplay", Yi);
                var Zi = function(e) {
                    function t() {
                        j(this, t);
                        return I(this, e.apply(this, arguments))
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-loading-spinner",
                            dir: "ltr"
                        })
                    };
                    return t
                }(Sn);
                Sn.registerComponent("LoadingSpinner", Zi);
                var es = function(e) {
                    function t() {
                        j(this, t);
                        return I(this, e.apply(this, arguments))
                    }
                    F(t, e);
                    t.prototype.createEl = function(t) {
                        var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                        t = "button";
                        n = X({
                            innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
                            className: this.buildCSSClass()
                        }, n);
                        r = X({
                            type: "button",
                            "aria-live": "polite"
                        }, r);
                        var i = Sn.prototype.createEl.call(this, t, n, r);
                        this.createControlTextEl(i);
                        return i
                    };
                    t.prototype.addChild = function(t) {
                        var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        var r = this.constructor.name;
                        Y.warn("Adding an actionable (user controllable) child to a Button (" + r + ") is not supported; use a ClickableComponent instead.");
                        return Sn.prototype.addChild.call(this, t, n)
                    };
                    t.prototype.enable = function() {
                        e.prototype.enable.call(this);
                        this.el_.removeAttribute("disabled")
                    };
                    t.prototype.disable = function() {
                        e.prototype.disable.call(this);
                        this.el_.setAttribute("disabled", "disabled")
                    };
                    t.prototype.handleKeyPress = function(n) {
                        if (n.which === 32 || n.which === 13) {
                            return
                        }
                        e.prototype.handleKeyPress.call(this, n)
                    };
                    return t
                }(Xi);
                Sn.registerComponent("Button", es);
                var ts = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.mouseused_ = false;
                        i.on("mousedown", i.handleMouseDown);
                        return i
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-big-play-button"
                    };
                    t.prototype.handleClick = function(t) {
                        var n = this.player_.play();
                        if (this.mouseused_ && t.clientX && t.clientY) {
                            return
                        }
                        var r = this.player_.getChild("controlBar");
                        var i = r && r.getChild("playToggle");
                        if (!i) {
                            this.player_.focus();
                            return
                        }
                        var s = function() {
                            return i.focus()
                        };
                        if (n && n.then) {
                            var o = function() {};
                            n.then(s, o)
                        } else {
                            this.setTimeout(s, 1)
                        }
                    };
                    t.prototype.handleKeyPress = function(n) {
                        this.mouseused_ = false;
                        e.prototype.handleKeyPress.call(this, n)
                    };
                    t.prototype.handleMouseDown = function(t) {
                        this.mouseused_ = true
                    };
                    return t
                }(es);
                ts.prototype.controlText_ = "Play Video";
                Sn.registerComponent("BigPlayButton", ts);
                var ns = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.controlText(r && r.controlText || i.localize("Close"));
                        return i
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-close-button " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.handleClick = function(t) {
                        this.trigger({
                            type: "close",
                            bubbles: false
                        })
                    };
                    return t
                }(es);
                Sn.registerComponent("CloseButton", ns);
                var rs = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.on(n, "play", i.handlePlay);
                        i.on(n, "pause", i.handlePause);
                        i.on(n, "ended", i.handleEnded);
                        return i
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-play-control " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.handleClick = function(t) {
                        if (this.player_.paused()) {
                            this.player_.play()
                        } else {
                            this.player_.pause()
                        }
                    };
                    t.prototype.handleSeeked = function(t) {
                        this.removeClass("vjs-ended");
                        if (this.player_.paused()) {
                            this.handlePause(t)
                        } else {
                            this.handlePlay(t)
                        }
                    };
                    t.prototype.handlePlay = function(t) {
                        this.removeClass("vjs-ended");
                        this.removeClass("vjs-paused");
                        this.addClass("vjs-playing");
                        this.controlText("Pause")
                    };
                    t.prototype.handlePause = function(t) {
                        this.removeClass("vjs-playing");
                        this.addClass("vjs-paused");
                        this.controlText("Play")
                    };
                    t.prototype.handleEnded = function(t) {
                        this.removeClass("vjs-playing");
                        this.addClass("vjs-ended");
                        this.controlText("Replay");
                        this.one(this.player_, "seeked", this.handleSeeked)
                    };
                    return t
                }(es);
                rs.prototype.controlText_ = "Play";
                Sn.registerComponent("PlayToggle", rs);
                var ss = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.throttledUpdateContent = on(sn(i, i.updateContent), 25);
                        i.on(n, "timeupdate", i.throttledUpdateContent);
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function(n) {
                        var r = this.buildCSSClass();
                        var i = e.prototype.createEl.call(this, "div", {
                            className: r + " vjs-time-control vjs-control"
                        });
                        this.contentEl_ = lt("div", {
                            className: r + "-display"
                        }, {
                            "aria-live": "off"
                        }, lt("span", {
                            className: "vjs-control-text",
                            textContent: this.localize(this.controlText_)
                        }));
                        this.updateTextNode_();
                        i.appendChild(this.contentEl_);
                        return i
                    };
                    t.prototype.updateTextNode_ = function() {
                        if (!this.contentEl_) {
                            return
                        }
                        while (this.contentEl_.firstChild) {
                            this.contentEl_.removeChild(this.contentEl_.firstChild)
                        }
                        this.textNode_ = h.createTextNode(this.formattedTime_ || "0:00");
                        this.contentEl_.appendChild(this.textNode_)
                    };
                    t.prototype.formatTime_ = function(t) {
                        return is(t)
                    };
                    t.prototype.updateFormattedTime_ = function(t) {
                        var n = this.formatTime_(t);
                        if (n === this.formattedTime_) {
                            return
                        }
                        this.formattedTime_ = n;
                        this.requestAnimationFrame(this.updateTextNode_)
                    };
                    t.prototype.updateContent = function(t) {};
                    return t
                }(Sn);
                ss.prototype.controlText_ = "Time";
                Sn.registerComponent("TimeDisplay", ss);
                var os = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.on(n, "ended", i.handleEnded);
                        return i
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-current-time"
                    };
                    t.prototype.updateContent = function(t) {
                        var n = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
                        this.updateFormattedTime_(n)
                    };
                    t.prototype.handleEnded = function(t) {
                        if (!this.player_.duration()) {
                            return
                        }
                        this.updateFormattedTime_(this.player_.duration())
                    };
                    return t
                }(ss);
                os.prototype.controlText_ = "Current Time";
                Sn.registerComponent("CurrentTimeDisplay", os);
                var us = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.on(n, "durationchange", i.updateContent);
                        i.on(n, "loadedmetadata", i.throttledUpdateContent);
                        return i
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-duration"
                    };
                    t.prototype.updateContent = function(t) {
                        var n = this.player_.duration();
                        if (n && this.duration_ !== n) {
                            this.duration_ = n;
                            this.updateFormattedTime_(n)
                        }
                    };
                    return t
                }(ss);
                us.prototype.controlText_ = "Duration Time";
                Sn.registerComponent("DurationDisplay", us);
                var as = function(e) {
                    function t() {
                        j(this, t);
                        return I(this, e.apply(this, arguments))
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-time-control vjs-time-divider",
                            innerHTML: "<div><span>/</span></div>"
                        })
                    };
                    return t
                }(Sn);
                Sn.registerComponent("TimeDivider", as);
                var fs = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.on(n, "durationchange", i.throttledUpdateContent);
                        i.on(n, "ended", i.handleEnded);
                        return i
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-remaining-time"
                    };
                    t.prototype.formatTime_ = function(n) {
                        return "-" + e.prototype.formatTime_.call(this, n)
                    };
                    t.prototype.updateContent = function(t) {
                        if (!this.player_.duration()) {
                            return
                        }
                        if (this.player_.remainingTimeDisplay) {
                            this.updateFormattedTime_(this.player_.remainingTimeDisplay())
                        } else {
                            this.updateFormattedTime_(this.player_.remainingTime())
                        }
                    };
                    t.prototype.handleEnded = function(t) {
                        if (!this.player_.duration()) {
                            return
                        }
                        this.updateFormattedTime_(0)
                    };
                    return t
                }(ss);
                fs.prototype.controlText_ = "Remaining Time";
                Sn.registerComponent("RemainingTimeDisplay", fs);
                var ls = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.updateShowing();
                        i.on(i.player(), "durationchange", i.updateShowing);
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        var n = e.prototype.createEl.call(this, "div", {
                            className: "vjs-live-control vjs-control"
                        });
                        this.contentEl_ = lt("div", {
                            className: "vjs-live-display",
                            innerHTML: '<span class="vjs-control-text">' + this.localize("Stream Type") + "</span>" + this.localize("LIVE")
                        }, {
                            "aria-live": "off"
                        });
                        n.appendChild(this.contentEl_);
                        return n
                    };
                    t.prototype.updateShowing = function(t) {
                        if (this.player().duration() === Infinity) {
                            this.show()
                        } else {
                            this.hide()
                        }
                    };
                    return t
                }(Sn);
                Sn.registerComponent("LiveDisplay", ls);
                var cs = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.bar = i.getChild(i.options_.barName);
                        i.vertical(!!i.options_.vertical);
                        i.enable();
                        return i
                    }
                    F(t, e);
                    t.prototype.enabled = function() {
                        return this.enabled_
                    };
                    t.prototype.enable = function() {
                        if (this.enabled()) {
                            return
                        }
                        this.on("mousedown", this.handleMouseDown);
                        this.on("touchstart", this.handleMouseDown);
                        this.on("focus", this.handleFocus);
                        this.on("blur", this.handleBlur);
                        this.on("click", this.handleClick);
                        this.on(this.player_, "controlsvisible", this.update);
                        if (this.playerEvent) {
                            this.on(this.player_, this.playerEvent, this.update)
                        }
                        this.removeClass("disabled");
                        this.setAttribute("tabindex", 0);
                        this.enabled_ = true
                    };
                    t.prototype.disable = function() {
                        if (!this.enabled()) {
                            return
                        }
                        var t = this.bar.el_.ownerDocument;
                        this.off("mousedown", this.handleMouseDown);
                        this.off("touchstart", this.handleMouseDown);
                        this.off("focus", this.handleFocus);
                        this.off("blur", this.handleBlur);
                        this.off("click", this.handleClick);
                        this.off(this.player_, "controlsvisible", this.update);
                        this.off(t, "mousemove", this.handleMouseMove);
                        this.off(t, "mouseup", this.handleMouseUp);
                        this.off(t, "touchmove", this.handleMouseMove);
                        this.off(t, "touchend", this.handleMouseUp);
                        this.removeAttribute("tabindex");
                        this.addClass("disabled");
                        if (this.playerEvent) {
                            this.off(this.player_, this.playerEvent, this.update)
                        }
                        this.enabled_ = false
                    };
                    t.prototype.createEl = function(n) {
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                        r.className = r.className + " vjs-slider";
                        r = X({
                            tabIndex: 0
                        }, r);
                        i = X({
                            role: "slider",
                            "aria-valuenow": 0,
                            "aria-valuemin": 0,
                            "aria-valuemax": 100,
                            tabIndex: 0
                        }, i);
                        return e.prototype.createEl.call(this, n, r, i)
                    };
                    t.prototype.handleMouseDown = function(t) {
                        var n = this.bar.el_.ownerDocument;
                        t.preventDefault();
                        St();
                        this.addClass("vjs-sliding");
                        this.trigger("slideractive");
                        this.on(n, "mousemove", this.handleMouseMove);
                        this.on(n, "mouseup", this.handleMouseUp);
                        this.on(n, "touchmove", this.handleMouseMove);
                        this.on(n, "touchend", this.handleMouseUp);
                        this.handleMouseMove(t)
                    };
                    t.prototype.handleMouseMove = function(t) {};
                    t.prototype.handleMouseUp = function() {
                        var t = this.bar.el_.ownerDocument;
                        xt();
                        this.removeClass("vjs-sliding");
                        this.trigger("sliderinactive");
                        this.off(t, "mousemove", this.handleMouseMove);
                        this.off(t, "mouseup", this.handleMouseUp);
                        this.off(t, "touchmove", this.handleMouseMove);
                        this.off(t, "touchend", this.handleMouseUp);
                        this.update()
                    };
                    t.prototype.update = function() {
                        if (!this.el_) {
                            return
                        }
                        var t = this.getPercent();
                        var n = this.bar;
                        if (!n) {
                            return
                        }
                        if (typeof t !== "number" || t !== t || t < 0 || t === Infinity) {
                            t = 0
                        }
                        var r = (t * 100).toFixed(2) + "%";
                        var i = n.el().style;
                        if (this.vertical()) {
                            i.height = r
                        } else {
                            i.width = r
                        }
                        return t
                    };
                    t.prototype.calculateDistance = function(t) {
                        var n = Ct(this.el_, t);
                        if (this.vertical()) {
                            return n.y
                        }
                        return n.x
                    };
                    t.prototype.handleFocus = function() {
                        this.on(this.bar.el_.ownerDocument, "keydown", this.handleKeyPress)
                    };
                    t.prototype.handleKeyPress = function(t) {
                        if (t.which === 37 || t.which === 40) {
                            t.preventDefault();
                            this.stepBack()
                        } else if (t.which === 38 || t.which === 39) {
                            t.preventDefault();
                            this.stepForward()
                        }
                    };
                    t.prototype.handleBlur = function() {
                        this.off(this.bar.el_.ownerDocument, "keydown", this.handleKeyPress)
                    };
                    t.prototype.handleClick = function(t) {
                        t.stopImmediatePropagation();
                        t.preventDefault()
                    };
                    t.prototype.vertical = function(t) {
                        if (t === undefined) {
                            return this.vertical_ || false
                        }
                        this.vertical_ = !!t;
                        if (this.vertical_) {
                            this.addClass("vjs-slider-vertical")
                        } else {
                            this.addClass("vjs-slider-horizontal")
                        }
                    };
                    return t
                }(Sn);
                Sn.registerComponent("Slider", cs);
                var hs = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.partEls_ = [];
                        i.on(n, "progress", i.update);
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-load-progress",
                            innerHTML: '<span class="vjs-control-text"><span>' + this.localize("Loaded") + "</span>: 0%</span>"
                        })
                    };
                    t.prototype.update = function(t) {
                        var n = this.player_.buffered();
                        var r = this.player_.duration();
                        var i = this.player_.bufferedEnd();
                        var s = this.partEls_;
                        var o = function(t, n) {
                            var r = t / n || 0;
                            return (r >= 1 ? 1 : r) * 100 + "%"
                        };
                        this.el_.style.width = o(i, r);
                        for (var u = 0; u < n.length; u++) {
                            var a = n.start(u);
                            var f = n.end(u);
                            var l = s[u];
                            if (!l) {
                                l = this.el_.appendChild(lt());
                                s[u] = l
                            }
                            l.style.left = o(a, i);
                            l.style.width = o(f - a, i)
                        }
                        for (var c = s.length; c > n.length; c--) {
                            this.el_.removeChild(s[c - 1])
                        }
                        s.length = n.length
                    };
                    return t
                }(Sn);
                Sn.registerComponent("LoadProgressBar", hs);
                var ps = function(e) {
                    function t() {
                        j(this, t);
                        return I(this, e.apply(this, arguments))
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-time-tooltip"
                        })
                    };
                    t.prototype.update = function(t, n, r) {
                        var i = Tt(this.el_);
                        var s = Tt(this.player_.el());
                        var o = t.width * n;
                        if (!s || !i) {
                            return
                        }
                        var u = t.left - s.left + o;
                        var a = t.width - o + (s.right - t.right);
                        var f = i.width / 2;
                        if (u < f) {
                            f += f - u
                        } else if (a < f) {
                            f = a
                        }
                        if (f < 0) {
                            f = 0
                        } else if (f > i.width) {
                            f = i.width
                        }
                        this.el_.style.right = "-" + f + "px";
                        ct(this.el_, r)
                    };
                    return t
                }(Sn);
                Sn.registerComponent("TimeTooltip", ps);
                var ds = function(e) {
                    function t() {
                        j(this, t);
                        return I(this, e.apply(this, arguments))
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-play-progress vjs-slider-bar",
                            innerHTML: '<span class="vjs-control-text"><span>' + this.localize("Progress") + "</span>: 0%</span>"
                        })
                    };
                    t.prototype.update = function(t, n) {
                        var r = this;
                        if (this.rafId_) {
                            this.cancelAnimationFrame(this.rafId_)
                        }
                        this.rafId_ = this.requestAnimationFrame(function() {
                            var e = r.player_.scrubbing() ? r.player_.getCache().currentTime : r.player_.currentTime();
                            var i = is(e, r.player_.duration());
                            var s = r.getChild("timeTooltip");
                            if (s) {
                                s.update(t, n, i)
                            }
                        })
                    };
                    return t
                }(Sn);
                ds.prototype.options_ = {
                    children: []
                };
                if ((!O || O > 8) && !b && !E) {
                    ds.prototype.options_.children.push("timeTooltip")
                }
                Sn.registerComponent("PlayProgressBar", ds);
                var vs = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.update = on(sn(i, i.update), 25);
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-mouse-display"
                        })
                    };
                    t.prototype.update = function(t, n) {
                        var r = this;
                        if (this.rafId_) {
                            this.cancelAnimationFrame(this.rafId_)
                        }
                        this.rafId_ = this.requestAnimationFrame(function() {
                            var e = r.player_.duration();
                            var i = is(n * e, e);
                            r.el_.style.left = t.width * n + "px";
                            r.getChild("timeTooltip").update(t, n, i)
                        })
                    };
                    return t
                }(Sn);
                vs.prototype.options_ = {
                    children: ["timeTooltip"]
                };
                Sn.registerComponent("MouseTimeDisplay", vs);
                var ms = 5;
                var gs = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.update = on(sn(i, i.update), 50);
                        i.on(n, "timeupdate", i.update);
                        i.on(n, "ended", i.handleEnded);
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-progress-holder"
                        }, {
                            "aria-label": this.localize("Progress Bar")
                        })
                    };
                    t.prototype.update_ = function(t, n) {
                        var r = this.player_.duration();
                        this.el_.setAttribute("aria-valuenow", (n * 100).toFixed(2));
                        this.el_.setAttribute("aria-valuetext", this.localize("progress bar timing: currentTime={1} duration={2}", [is(t, r), is(r, r)], "{1} of {2}"));
                        this.bar.update(Tt(this.el_), n)
                    };
                    t.prototype.update = function(n) {
                        var r = e.prototype.update.call(this);
                        this.update_(this.getCurrentTime_(), r);
                        return r
                    };
                    t.prototype.getCurrentTime_ = function() {
                        return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime()
                    };
                    t.prototype.handleEnded = function(t) {
                        this.update_(this.player_.duration(), 1)
                    };
                    t.prototype.getPercent = function() {
                        var t = this.getCurrentTime_() / this.player_.duration();
                        return t >= 1 ? 1 : t
                    };
                    t.prototype.handleMouseDown = function(n) {
                        this.player_.scrubbing(true);
                        this.videoWasPlaying = !this.player_.paused();
                        this.player_.pause();
                        e.prototype.handleMouseDown.call(this, n)
                    };
                    t.prototype.handleMouseMove = function(t) {
                        var n = this.calculateDistance(t) * this.player_.duration();
                        if (n === this.player_.duration()) {
                            n = n - .1
                        }
                        this.player_.currentTime(n)
                    };
                    t.prototype.enable = function() {
                        e.prototype.enable.call(this);
                        var n = this.getChild("mouseTimeDisplay");
                        if (!n) {
                            return
                        }
                        n.show()
                    };
                    t.prototype.disable = function() {
                        e.prototype.disable.call(this);
                        var n = this.getChild("mouseTimeDisplay");
                        if (!n) {
                            return
                        }
                        n.hide()
                    };
                    t.prototype.handleMouseUp = function(n) {
                        e.prototype.handleMouseUp.call(this, n);
                        this.player_.scrubbing(false);
                        if (this.videoWasPlaying) {
                            this.player_.play()
                        }
                    };
                    t.prototype.stepForward = function() {
                        this.player_.currentTime(this.player_.currentTime() + ms)
                    };
                    t.prototype.stepBack = function() {
                        this.player_.currentTime(this.player_.currentTime() - ms)
                    };
                    t.prototype.handleAction = function(t) {
                        if (this.player_.paused()) {
                            this.player_.play()
                        } else {
                            this.player_.pause()
                        }
                    };
                    t.prototype.handleKeyPress = function(n) {
                        if (n.which === 32 || n.which === 13) {
                            n.preventDefault();
                            this.handleAction(n)
                        } else if (e.prototype.handleKeyPress) {
                            e.prototype.handleKeyPress.call(this, n)
                        }
                    };
                    return t
                }(cs);
                gs.prototype.options_ = {
                    children: ["loadProgressBar", "playProgressBar"],
                    barName: "playProgressBar"
                };
                if ((!O || O > 8) && !b && !E) {
                    gs.prototype.options_.children.splice(1, 0, "mouseTimeDisplay")
                }
                gs.prototype.playerEvent = "timeupdate";
                Sn.registerComponent("SeekBar", gs);
                var ys = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.handleMouseMove = on(sn(i, i.handleMouseMove), 25);
                        i.throttledHandleMouseSeek = on(sn(i, i.handleMouseSeek), 25);
                        i.enable();
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-progress-control vjs-control"
                        })
                    };
                    t.prototype.handleMouseMove = function(t) {
                        var n = this.getChild("seekBar");
                        var r = n.getChild("mouseTimeDisplay");
                        var i = n.el();
                        var s = Tt(i);
                        var o = Ct(i, t).x;
                        if (o > 1) {
                            o = 1
                        } else if (o < 0) {
                            o = 0
                        }
                        if (r) {
                            r.update(s, o)
                        }
                    };
                    t.prototype.handleMouseSeek = function(t) {
                        var n = this.getChild("seekBar");
                        n.handleMouseMove(t)
                    };
                    t.prototype.enabled = function() {
                        return this.enabled_
                    };
                    t.prototype.disable = function() {
                        this.children().forEach(function(e) {
                            return e.disable && e.disable()
                        });
                        if (!this.enabled()) {
                            return
                        }
                        this.off(["mousedown", "touchstart"], this.handleMouseDown);
                        this.off(this.el_, "mousemove", this.handleMouseMove);
                        this.handleMouseUp();
                        this.addClass("disabled");
                        this.enabled_ = false
                    };
                    t.prototype.enable = function() {
                        this.children().forEach(function(e) {
                            return e.enable && e.enable()
                        });
                        if (this.enabled()) {
                            return
                        }
                        this.on(["mousedown", "touchstart"], this.handleMouseDown);
                        this.on(this.el_, "mousemove", this.handleMouseMove);
                        this.removeClass("disabled");
                        this.enabled_ = true
                    };
                    t.prototype.handleMouseDown = function(t) {
                        var n = this.el_.ownerDocument;
                        this.on(n, "mousemove", this.throttledHandleMouseSeek);
                        this.on(n, "touchmove", this.throttledHandleMouseSeek);
                        this.on(n, "mouseup", this.handleMouseUp);
                        this.on(n, "touchend", this.handleMouseUp)
                    };
                    t.prototype.handleMouseUp = function(t) {
                        var n = this.el_.ownerDocument;
                        this.off(n, "mousemove", this.throttledHandleMouseSeek);
                        this.off(n, "touchmove", this.throttledHandleMouseSeek);
                        this.off(n, "mouseup", this.handleMouseUp);
                        this.off(n, "touchend", this.handleMouseUp)
                    };
                    return t
                }(Sn);
                ys.prototype.options_ = {
                    children: ["seekBar"]
                };
                Sn.registerComponent("ProgressControl", ys);
                var bs = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.on(n, "fullscreenchange", i.handleFullscreenChange);
                        return i
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-fullscreen-control " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.handleFullscreenChange = function(t) {
                        if (this.player_.isFullscreen()) {
                            this.controlText("Non-Fullscreen")
                        } else {
                            this.controlText("Fullscreen")
                        }
                    };
                    t.prototype.handleClick = function(t) {
                        if (!this.player_.isFullscreen()) {
                            this.player_.requestFullscreen()
                        } else {
                            this.player_.exitFullscreen()
                        }
                    };
                    return t
                }(es);
                bs.prototype.controlText_ = "Fullscreen";
                Sn.registerComponent("FullscreenToggle", bs);
                var ws = function(t, n) {
                    if (n.tech_ && !n.tech_.featuresVolumeControl) {
                        t.addClass("vjs-hidden")
                    }
                    t.on(n, "loadstart", function() {
                        if (!n.tech_.featuresVolumeControl) {
                            t.addClass("vjs-hidden")
                        } else {
                            t.removeClass("vjs-hidden")
                        }
                    })
                };
                var Es = function(e) {
                    function t() {
                        j(this, t);
                        return I(this, e.apply(this, arguments))
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-volume-level",
                            innerHTML: '<span class="vjs-control-text"></span>'
                        })
                    };
                    return t
                }(Sn);
                Sn.registerComponent("VolumeLevel", Es);
                var Ss = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.on("slideractive", i.updateLastVolume_);
                        i.on(n, "volumechange", i.updateARIAAttributes);
                        n.ready(function() {
                            return i.updateARIAAttributes()
                        });
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-volume-bar vjs-slider-bar"
                        }, {
                            "aria-label": this.localize("Volume Level"),
                            "aria-live": "polite"
                        })
                    };
                    t.prototype.handleMouseMove = function(t) {
                        this.checkMuted();
                        this.player_.volume(this.calculateDistance(t))
                    };
                    t.prototype.checkMuted = function() {
                        if (this.player_.muted()) {
                            this.player_.muted(false)
                        }
                    };
                    t.prototype.getPercent = function() {
                        if (this.player_.muted()) {
                            return 0
                        }
                        return this.player_.volume()
                    };
                    t.prototype.stepForward = function() {
                        this.checkMuted();
                        this.player_.volume(this.player_.volume() + .1)
                    };
                    t.prototype.stepBack = function() {
                        this.checkMuted();
                        this.player_.volume(this.player_.volume() - .1)
                    };
                    t.prototype.updateARIAAttributes = function(t) {
                        var n = this.player_.muted() ? 0 : this.volumeAsPercentage_();
                        this.el_.setAttribute("aria-valuenow", n);
                        this.el_.setAttribute("aria-valuetext", n + "%")
                    };
                    t.prototype.volumeAsPercentage_ = function() {
                        return Math.round(this.player_.volume() * 100)
                    };
                    t.prototype.updateLastVolume_ = function() {
                        var t = this;
                        var n = this.player_.volume();
                        this.one("sliderinactive", function() {
                            if (t.player_.volume() === 0) {
                                t.player_.lastVolume_(n)
                            }
                        })
                    };
                    return t
                }(cs);
                Ss.prototype.options_ = {
                    children: ["volumeLevel"],
                    barName: "volumeLevel"
                };
                Ss.prototype.playerEvent = "volumechange";
                Sn.registerComponent("VolumeBar", Ss);
                var xs = function(e) {
                    function t(n) {
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        j(this, t);
                        r.vertical = r.vertical || false;
                        if (typeof r.volumeBar === "undefined" || $(r.volumeBar)) {
                            r.volumeBar = r.volumeBar || {};
                            r.volumeBar.vertical = r.vertical
                        }
                        var i = I(this, e.call(this, n, r));
                        ws(i, n);
                        i.throttledHandleMouseMove = on(sn(i, i.handleMouseMove), 25);
                        i.on("mousedown", i.handleMouseDown);
                        i.on("touchstart", i.handleMouseDown);
                        i.on(i.volumeBar, ["focus", "slideractive"], function() {
                            i.volumeBar.addClass("vjs-slider-active");
                            i.addClass("vjs-slider-active");
                            i.trigger("slideractive")
                        });
                        i.on(i.volumeBar, ["blur", "sliderinactive"], function() {
                            i.volumeBar.removeClass("vjs-slider-active");
                            i.removeClass("vjs-slider-active");
                            i.trigger("sliderinactive")
                        });
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        var n = "vjs-volume-horizontal";
                        if (this.options_.vertical) {
                            n = "vjs-volume-vertical"
                        }
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-volume-control vjs-control " + n
                        })
                    };
                    t.prototype.handleMouseDown = function(t) {
                        var n = this.el_.ownerDocument;
                        this.on(n, "mousemove", this.throttledHandleMouseMove);
                        this.on(n, "touchmove", this.throttledHandleMouseMove);
                        this.on(n, "mouseup", this.handleMouseUp);
                        this.on(n, "touchend", this.handleMouseUp)
                    };
                    t.prototype.handleMouseUp = function(t) {
                        var n = this.el_.ownerDocument;
                        this.off(n, "mousemove", this.throttledHandleMouseMove);
                        this.off(n, "touchmove", this.throttledHandleMouseMove);
                        this.off(n, "mouseup", this.handleMouseUp);
                        this.off(n, "touchend", this.handleMouseUp)
                    };
                    t.prototype.handleMouseMove = function(t) {
                        this.volumeBar.handleMouseMove(t)
                    };
                    return t
                }(Sn);
                xs.prototype.options_ = {
                    children: ["volumeBar"]
                };
                Sn.registerComponent("VolumeControl", xs);
                var Ts = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        ws(i, n);
                        i.on(n, ["loadstart", "volumechange"], i.update);
                        return i
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-mute-control " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.handleClick = function(t) {
                        var n = this.player_.volume();
                        var r = this.player_.lastVolume_();
                        if (n === 0) {
                            var i = r < .1 ? .1 : r;
                            this.player_.volume(i);
                            this.player_.muted(false)
                        } else {
                            this.player_.muted(this.player_.muted() ? false : true)
                        }
                    };
                    t.prototype.update = function(t) {
                        this.updateIcon_();
                        this.updateControlText_()
                    };
                    t.prototype.updateIcon_ = function() {
                        var t = this.player_.volume();
                        var n = 3;
                        if (t === 0 || this.player_.muted()) {
                            n = 0
                        } else if (t < .33) {
                            n = 1
                        } else if (t < .67) {
                            n = 2
                        }
                        for (var r = 0; r < 4; r++) {
                            vt(this.el_, "vjs-vol-" + r)
                        }
                        dt(this.el_, "vjs-vol-" + n)
                    };
                    t.prototype.updateControlText_ = function() {
                        var t = this.player_.muted() || this.player_.volume() === 0;
                        var n = t ? "Unmute" : "Mute";
                        if (this.controlText() !== n) {
                            this.controlText(n)
                        }
                    };
                    return t
                }(es);
                Ts.prototype.controlText_ = "Mute";
                Sn.registerComponent("MuteToggle", Ts);
                var Ns = function(e) {
                    function t(n) {
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        j(this, t);
                        if (typeof r.inline !== "undefined") {
                            r.inline = r.inline
                        } else {
                            r.inline = true
                        }
                        if (typeof r.volumeControl === "undefined" || $(r.volumeControl)) {
                            r.volumeControl = r.volumeControl || {};
                            r.volumeControl.vertical = !r.inline
                        }
                        var i = I(this, e.call(this, n, r));
                        ws(i, n);
                        i.on(i.volumeControl, ["slideractive"], i.sliderActive_);
                        i.on(i.muteToggle, "focus", i.sliderActive_);
                        i.on(i.volumeControl, ["sliderinactive"], i.sliderInactive_);
                        i.on(i.muteToggle, "blur", i.sliderInactive_);
                        return i
                    }
                    F(t, e);
                    t.prototype.sliderActive_ = function() {
                        this.addClass("vjs-slider-active")
                    };
                    t.prototype.sliderInactive_ = function() {
                        this.removeClass("vjs-slider-active")
                    };
                    t.prototype.createEl = function() {
                        var n = "vjs-volume-panel-horizontal";
                        if (!this.options_.inline) {
                            n = "vjs-volume-panel-vertical"
                        }
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-volume-panel vjs-control " + n
                        })
                    };
                    return t
                }(Sn);
                Ns.prototype.options_ = {
                    children: ["muteToggle", "volumeControl"]
                };
                Sn.registerComponent("VolumePanel", Ns);
                var Cs = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        if (r) {
                            i.menuButton_ = r.menuButton
                        }
                        i.focusedChild_ = -1;
                        i.on("keydown", i.handleKeyPress);
                        return i
                    }
                    F(t, e);
                    t.prototype.addItem = function(t) {
                        this.addChild(t);
                        t.on("click", sn(this, function(e) {
                            if (this.menuButton_) {
                                this.menuButton_.unpressButton();
                                if (t.name() !== "CaptionSettingsMenuItem") {
                                    this.menuButton_.focus()
                                }
                            }
                        }))
                    };
                    t.prototype.createEl = function() {
                        var n = this.options_.contentElType || "ul";
                        this.contentEl_ = lt(n, {
                            className: "vjs-menu-content"
                        });
                        this.contentEl_.setAttribute("role", "menu");
                        var r = e.prototype.createEl.call(this, "div", {
                            append: this.contentEl_,
                            className: "vjs-menu"
                        });
                        r.appendChild(this.contentEl_);
                        $t(r, "click", function(e) {
                            e.preventDefault();
                            e.stopImmediatePropagation()
                        });
                        return r
                    };
                    t.prototype.handleKeyPress = function(t) {
                        if (t.which === 37 || t.which === 40) {
                            t.preventDefault();
                            this.stepForward()
                        } else if (t.which === 38 || t.which === 39) {
                            t.preventDefault();
                            this.stepBack()
                        }
                    };
                    t.prototype.stepForward = function() {
                        var t = 0;
                        if (this.focusedChild_ !== undefined) {
                            t = this.focusedChild_ + 1
                        }
                        this.focus(t)
                    };
                    t.prototype.stepBack = function() {
                        var t = 0;
                        if (this.focusedChild_ !== undefined) {
                            t = this.focusedChild_ - 1
                        }
                        this.focus(t)
                    };
                    t.prototype.focus = function() {
                        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
                        var n = this.children().slice();
                        var r = n.length && n[0].className && /vjs-menu-title/.test(n[0].className);
                        if (r) {
                            n.shift()
                        }
                        if (n.length > 0) {
                            if (t < 0) {
                                t = 0
                            } else if (t >= n.length) {
                                t = n.length - 1
                            }
                            this.focusedChild_ = t;
                            n[t].el_.focus()
                        }
                    };
                    return t
                }(Sn);
                Sn.registerComponent("Menu", Cs);
                var ks = function(e) {
                    function t(n) {
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.menuButton_ = new es(n, r);
                        i.menuButton_.controlText(i.controlText_);
                        i.menuButton_.el_.setAttribute("aria-haspopup", "true");
                        var s = es.prototype.buildCSSClass();
                        i.menuButton_.el_.className = i.buildCSSClass() + " " + s;
                        i.menuButton_.removeClass("vjs-control");
                        i.addChild(i.menuButton_);
                        i.update();
                        i.enabled_ = true;
                        i.on(i.menuButton_, "tap", i.handleClick);
                        i.on(i.menuButton_, "click", i.handleClick);
                        i.on(i.menuButton_, "focus", i.handleFocus);
                        i.on(i.menuButton_, "blur", i.handleBlur);
                        i.on("keydown", i.handleSubmenuKeyPress);
                        return i
                    }
                    F(t, e);
                    t.prototype.update = function() {
                        var t = this.createMenu();
                        if (this.menu) {
                            this.removeChild(this.menu)
                        }
                        this.menu = t;
                        this.addChild(t);
                        this.buttonPressed_ = false;
                        this.menuButton_.el_.setAttribute("aria-expanded", "false");
                        if (this.items && this.items.length <= this.hideThreshold_) {
                            this.hide()
                        } else {
                            this.show()
                        }
                    };
                    t.prototype.createMenu = function() {
                        var t = new Cs(this.player_, {
                            menuButton: this
                        });
                        this.hideThreshold_ = 0;
                        if (this.options_.title) {
                            var n = lt("li", {
                                className: "vjs-menu-title",
                                innerHTML: bn(this.options_.title),
                                tabIndex: -1
                            });
                            this.hideThreshold_ += 1;
                            t.children_.unshift(n);
                            ht(n, t.contentEl())
                        }
                        this.items = this.createItems();
                        if (this.items) {
                            for (var r = 0; r < this.items.length; r++) {
                                t.addItem(this.items[r])
                            }
                        }
                        return t
                    };
                    t.prototype.createItems = function() {};
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: this.buildWrapperCSSClass()
                        }, {})
                    };
                    t.prototype.buildWrapperCSSClass = function() {
                        var n = "vjs-menu-button";
                        if (this.options_.inline === true) {
                            n += "-inline"
                        } else {
                            n += "-popup"
                        }
                        var r = es.prototype.buildCSSClass();
                        return "vjs-menu-button " + n + " " + r + " " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.buildCSSClass = function() {
                        var n = "vjs-menu-button";
                        if (this.options_.inline === true) {
                            n += "-inline"
                        } else {
                            n += "-popup"
                        }
                        return "vjs-menu-button " + n + " " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.controlText = function(t) {
                        var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();
                        return this.menuButton_.controlText(t, n)
                    };
                    t.prototype.handleClick = function(t) {
                        this.one(this.menu.contentEl(), "mouseleave", sn(this, function(e) {
                            this.unpressButton();
                            this.el_.blur()
                        }));
                        if (this.buttonPressed_) {
                            this.unpressButton()
                        } else {
                            this.pressButton()
                        }
                    };
                    t.prototype.focus = function() {
                        this.menuButton_.focus()
                    };
                    t.prototype.blur = function() {
                        this.menuButton_.blur()
                    };
                    t.prototype.handleFocus = function() {
                        $t(h, "keydown", sn(this, this.handleKeyPress))
                    };
                    t.prototype.handleBlur = function() {
                        Jt(h, "keydown", sn(this, this.handleKeyPress))
                    };
                    t.prototype.handleKeyPress = function(t) {
                        if (t.which === 27 || t.which === 9) {
                            if (this.buttonPressed_) {
                                this.unpressButton()
                            }
                            if (t.which !== 9) {
                                t.preventDefault();
                                this.menuButton_.el_.focus()
                            }
                        } else if (t.which === 38 || t.which === 40) {
                            if (!this.buttonPressed_) {
                                this.pressButton();
                                t.preventDefault()
                            }
                        }
                    };
                    t.prototype.handleSubmenuKeyPress = function(t) {
                        if (t.which === 27 || t.which === 9) {
                            if (this.buttonPressed_) {
                                this.unpressButton()
                            }
                            if (t.which !== 9) {
                                t.preventDefault();
                                this.menuButton_.el_.focus()
                            }
                        }
                    };
                    t.prototype.pressButton = function() {
                        if (this.enabled_) {
                            this.buttonPressed_ = true;
                            this.menu.lockShowing();
                            this.menuButton_.el_.setAttribute("aria-expanded", "true");
                            if (!b && !at()) {
                                this.menu.focus()
                            }
                        }
                    };
                    t.prototype.unpressButton = function() {
                        if (this.enabled_) {
                            this.buttonPressed_ = false;
                            this.menu.unlockShowing();
                            this.menuButton_.el_.setAttribute("aria-expanded", "false")
                        }
                    };
                    t.prototype.disable = function() {
                        this.unpressButton();
                        this.enabled_ = false;
                        this.addClass("vjs-disabled");
                        this.menuButton_.disable()
                    };
                    t.prototype.enable = function() {
                        this.enabled_ = true;
                        this.removeClass("vjs-disabled");
                        this.menuButton_.enable()
                    };
                    return t
                }(Sn);
                Sn.registerComponent("MenuButton", ks);
                var Ls = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = r.tracks;
                        var s = I(this, e.call(this, n, r));
                        if (s.items.length <= 1) {
                            s.hide()
                        }
                        if (!i) {
                            return I(s)
                        }
                        var o = sn(s, s.update);
                        i.addEventListener("removetrack", o);
                        i.addEventListener("addtrack", o);
                        s.player_.on("ready", o);
                        s.player_.on("dispose", function() {
                            i.removeEventListener("removetrack", o);
                            i.removeEventListener("addtrack", o)
                        });
                        return s
                    }
                    F(t, e);
                    return t
                }(ks);
                Sn.registerComponent("TrackButton", Ls);
                var As = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.selectable = r.selectable;
                        i.selected(r.selected);
                        if (i.selectable) {
                            i.el_.setAttribute("role", "menuitemcheckbox")
                        } else {
                            i.el_.setAttribute("role", "menuitem")
                        }
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function(n, r, i) {
                        this.nonIconControl = true;
                        return e.prototype.createEl.call(this, "li", X({
                            className: "vjs-menu-item",
                            innerHTML: '<span class="vjs-menu-item-text">' + this.localize(this.options_.label) + "</span>",
                            tabIndex: -1
                        }, r), i)
                    };
                    t.prototype.handleClick = function(t) {
                        this.selected(true)
                    };
                    t.prototype.selected = function(t) {
                        if (this.selectable) {
                            if (t) {
                                this.addClass("vjs-selected");
                                this.el_.setAttribute("aria-checked", "true");
                                this.controlText(", selected")
                            } else {
                                this.removeClass("vjs-selected");
                                this.el_.setAttribute("aria-checked", "false");
                                this.controlText(" ")
                            }
                        }
                    };
                    return t
                }(Xi);
                Sn.registerComponent("MenuItem", As);
                var Os = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = r.track;
                        var s = n.textTracks();
                        r.label = i.label || i.language || "Unknown";
                        r.selected = i.mode === "showing";
                        var u = I(this, e.call(this, n, r));
                        u.track = i;
                        var a = sn(u, u.handleTracksChange);
                        var f = sn(u, u.handleSelectedLanguageChange);
                        n.on(["loadstart", "texttrackchange"], a);
                        s.addEventListener("change", a);
                        s.addEventListener("selectedlanguagechange", f);
                        u.on("dispose", function() {
                            s.removeEventListener("change", a);
                            s.removeEventListener("selectedlanguagechange", f)
                        });
                        if (s.onchange === undefined) {
                            var l = void 0;
                            u.on(["tap", "click"], function() {
                                if (B(o.Event) !== "object") {
                                    try {
                                        l = new o.Event("change")
                                    } catch (e) {}
                                }
                                if (!l) {
                                    l = h.createEvent("Event");
                                    l.initEvent("change", true, true)
                                }
                                s.dispatchEvent(l)
                            })
                        }
                        return u
                    }
                    F(t, e);
                    t.prototype.handleClick = function(n) {
                        var r = this.track.kind;
                        var i = this.track.kinds;
                        var s = this.player_.textTracks();
                        if (!i) {
                            i = [r]
                        }
                        e.prototype.handleClick.call(this, n);
                        if (!s) {
                            return
                        }
                        for (var o = 0; o < s.length; o++) {
                            var u = s[o];
                            if (u === this.track && i.indexOf(u.kind) > -1) {
                                if (u.mode !== "showing") {
                                    u.mode = "showing"
                                }
                            } else if (u.mode !== "disabled") {
                                u.mode = "disabled"
                            }
                        }
                    };
                    t.prototype.handleTracksChange = function(t) {
                        this.selected(this.track.mode === "showing")
                    };
                    t.prototype.handleSelectedLanguageChange = function(t) {
                        if (this.track.mode === "showing") {
                            var n = this.player_.cache_.selectedLanguage;
                            if (n && n.enabled && n.language === this.track.language && n.kind !== this.track.kind) {
                                return
                            }
                            this.player_.cache_.selectedLanguage = {
                                enabled: true,
                                language: this.track.language,
                                kind: this.track.kind
                            }
                        }
                    };
                    return t
                }(As);
                Sn.registerComponent("TextTrackMenuItem", Os);
                var Ms = function(e) {
                    function t(n, r) {
                        j(this, t);
                        r.track = {
                            player: n,
                            kind: r.kind,
                            kinds: r.kinds,
                            "default": false,
                            mode: "disabled"
                        };
                        if (!r.kinds) {
                            r.kinds = [r.kind]
                        }
                        if (r.label) {
                            r.track.label = r.label
                        } else {
                            r.track.label = r.kinds.join(" and ") + " off"
                        }
                        r.selectable = true;
                        var i = I(this, e.call(this, n, r));
                        i.selected(true);
                        return i
                    }
                    F(t, e);
                    t.prototype.handleTracksChange = function(t) {
                        var n = this.player().textTracks();
                        var r = true;
                        for (var i = 0, s = n.length; i < s; i++) {
                            var o = n[i];
                            if (this.options_.kinds.indexOf(o.kind) > -1 && o.mode === "showing") {
                                r = false;
                                break
                            }
                        }
                        this.selected(r)
                    };
                    t.prototype.handleSelectedLanguageChange = function(t) {
                        var n = this.player().textTracks();
                        var r = true;
                        for (var i = 0, s = n.length; i < s; i++) {
                            var o = n[i];
                            if (["captions", "descriptions", "subtitles"].indexOf(o.kind) > -1 && o.mode === "showing") {
                                r = false;
                                break
                            }
                        }
                        if (r) {
                            this.player_.cache_.selectedLanguage = {
                                enabled: false
                            }
                        }
                    };
                    return t
                }(Os);
                Sn.registerComponent("OffTextTrackMenuItem", Ms);
                var _s = function(e) {
                    function t(n) {
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        j(this, t);
                        r.tracks = n.textTracks();
                        return I(this, e.call(this, n, r))
                    }
                    F(t, e);
                    t.prototype.createItems = function() {
                        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                        var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Os;
                        var r = void 0;
                        if (this.label_) {
                            r = this.label_ + " off"
                        }
                        t.push(new Ms(this.player_, {
                            kinds: this.kinds_,
                            kind: this.kind_,
                            label: r
                        }));
                        this.hideThreshold_ += 1;
                        var i = this.player_.textTracks();
                        if (!Array.isArray(this.kinds_)) {
                            this.kinds_ = [this.kind_]
                        }
                        for (var s = 0; s < i.length; s++) {
                            var o = i[s];
                            if (this.kinds_.indexOf(o.kind) > -1) {
                                var u = new n(this.player_, {
                                    track: o,
                                    selectable: true
                                });
                                u.addClass("vjs-" + o.kind + "-menu-item");
                                t.push(u)
                            }
                        }
                        return t
                    };
                    return t
                }(Ls);
                Sn.registerComponent("TextTrackButton", _s);
                var Ds = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = r.track;
                        var s = r.cue;
                        var o = n.currentTime();
                        r.selectable = true;
                        r.label = s.text;
                        r.selected = s.startTime <= o && o < s.endTime;
                        var u = I(this, e.call(this, n, r));
                        u.track = i;
                        u.cue = s;
                        i.addEventListener("cuechange", sn(u, u.update));
                        return u
                    }
                    F(t, e);
                    t.prototype.handleClick = function(n) {
                        e.prototype.handleClick.call(this);
                        this.player_.currentTime(this.cue.startTime);
                        this.update(this.cue.startTime)
                    };
                    t.prototype.update = function(t) {
                        var n = this.cue;
                        var r = this.player_.currentTime();
                        this.selected(n.startTime <= r && r < n.endTime)
                    };
                    return t
                }(As);
                Sn.registerComponent("ChaptersTrackMenuItem", Ds);
                var Ps = function(e) {
                    function t(n, r, i) {
                        j(this, t);
                        return I(this, e.call(this, n, r, i))
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-chapters-button " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.buildWrapperCSSClass = function() {
                        return "vjs-chapters-button " + e.prototype.buildWrapperCSSClass.call(this)
                    };
                    t.prototype.update = function(n) {
                        if (!this.track_ || n && (n.type === "addtrack" || n.type === "removetrack")) {
                            this.setTrack(this.findChaptersTrack())
                        }
                        e.prototype.update.call(this)
                    };
                    t.prototype.setTrack = function(t) {
                        if (this.track_ === t) {
                            return
                        }
                        if (!this.updateHandler_) {
                            this.updateHandler_ = this.update.bind(this)
                        }
                        if (this.track_) {
                            var n = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
                            if (n) {
                                n.removeEventListener("load", this.updateHandler_)
                            }
                            this.track_ = null
                        }
                        this.track_ = t;
                        if (this.track_) {
                            this.track_.mode = "hidden";
                            var r = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
                            if (r) {
                                r.addEventListener("load", this.updateHandler_)
                            }
                        }
                    };
                    t.prototype.findChaptersTrack = function() {
                        var t = this.player_.textTracks() || [];
                        for (var n = t.length - 1; n >= 0; n--) {
                            var r = t[n];
                            if (r.kind === this.kind_) {
                                return r
                            }
                        }
                    };
                    t.prototype.getMenuCaption = function() {
                        if (this.track_ && this.track_.label) {
                            return this.track_.label
                        }
                        return this.localize(bn(this.kind_))
                    };
                    t.prototype.createMenu = function() {
                        this.options_.title = this.getMenuCaption();
                        return e.prototype.createMenu.call(this)
                    };
                    t.prototype.createItems = function() {
                        var t = [];
                        if (!this.track_) {
                            return t
                        }
                        var n = this.track_.cues;
                        if (!n) {
                            return t
                        }
                        for (var r = 0, i = n.length; r < i; r++) {
                            var s = n[r];
                            var o = new Ds(this.player_, {
                                track: this.track_,
                                cue: s
                            });
                            t.push(o)
                        }
                        return t
                    };
                    return t
                }(_s);
                Ps.prototype.kind_ = "chapters";
                Ps.prototype.controlText_ = "Chapters";
                Sn.registerComponent("ChaptersButton", Ps);
                var Hs = function(e) {
                    function t(n, r, i) {
                        j(this, t);
                        var s = I(this, e.call(this, n, r, i));
                        var o = n.textTracks();
                        var u = sn(s, s.handleTracksChange);
                        o.addEventListener("change", u);
                        s.on("dispose", function() {
                            o.removeEventListener("change", u)
                        });
                        return s
                    }
                    F(t, e);
                    t.prototype.handleTracksChange = function(t) {
                        var n = this.player().textTracks();
                        var r = false;
                        for (var i = 0, s = n.length; i < s; i++) {
                            var o = n[i];
                            if (o.kind !== this.kind_ && o.mode === "showing") {
                                r = true;
                                break
                            }
                        }
                        if (r) {
                            this.disable()
                        } else {
                            this.enable()
                        }
                    };
                    t.prototype.buildCSSClass = function() {
                        return "vjs-descriptions-button " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.buildWrapperCSSClass = function() {
                        return "vjs-descriptions-button " + e.prototype.buildWrapperCSSClass.call(this)
                    };
                    return t
                }(_s);
                Hs.prototype.kind_ = "descriptions";
                Hs.prototype.controlText_ = "Descriptions";
                Sn.registerComponent("DescriptionsButton", Hs);
                var Bs = function(e) {
                    function t(n, r, i) {
                        j(this, t);
                        return I(this, e.call(this, n, r, i))
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-subtitles-button " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.buildWrapperCSSClass = function() {
                        return "vjs-subtitles-button " + e.prototype.buildWrapperCSSClass.call(this)
                    };
                    return t
                }(_s);
                Bs.prototype.kind_ = "subtitles";
                Bs.prototype.controlText_ = "Subtitles";
                Sn.registerComponent("SubtitlesButton", Bs);
                var js = function(e) {
                    function t(n, r) {
                        j(this, t);
                        r.track = {
                            player: n,
                            kind: r.kind,
                            label: r.kind + " settings",
                            selectable: false,
                            "default": false,
                            mode: "disabled"
                        };
                        r.selectable = false;
                        r.name = "CaptionSettingsMenuItem";
                        var i = I(this, e.call(this, n, r));
                        i.addClass("vjs-texttrack-settings");
                        i.controlText(", opens " + r.kind + " settings dialog");
                        return i
                    }
                    F(t, e);
                    t.prototype.handleClick = function(t) {
                        this.player().getChild("textTrackSettings").open()
                    };
                    return t
                }(Os);
                Sn.registerComponent("CaptionSettingsMenuItem", js);
                var Fs = function(e) {
                    function t(n, r, i) {
                        j(this, t);
                        return I(this, e.call(this, n, r, i))
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-captions-button " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.buildWrapperCSSClass = function() {
                        return "vjs-captions-button " + e.prototype.buildWrapperCSSClass.call(this)
                    };
                    t.prototype.createItems = function() {
                        var n = [];
                        if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks)) {
                            n.push(new js(this.player_, {
                                kind: this.kind_
                            }));
                            this.hideThreshold_ += 1
                        }
                        return e.prototype.createItems.call(this, n)
                    };
                    return t
                }(_s);
                Fs.prototype.kind_ = "captions";
                Fs.prototype.controlText_ = "Captions";
                Sn.registerComponent("CaptionsButton", Fs);
                var Is = function(e) {
                    function t() {
                        j(this, t);
                        return I(this, e.apply(this, arguments))
                    }
                    F(t, e);
                    t.prototype.createEl = function(n, r, i) {
                        var s = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
                        if (this.options_.track.kind === "captions") {
                            s += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize("Captions") + "</span>\n      "
                        }
                        s += "</span>";
                        var o = e.prototype.createEl.call(this, n, X({
                            innerHTML: s
                        }, r), i);
                        return o
                    };
                    return t
                }(Os);
                Sn.registerComponent("SubsCapsMenuItem", Is);
                var qs = function(e) {
                    function t(n) {
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.label_ = "subtitles";
                        if (["en", "en-us", "en-ca", "fr-ca"].indexOf(i.player_.language_) > -1) {
                            i.label_ = "captions"
                        }
                        i.menuButton_.controlText(bn(i.label_));
                        return i
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-subs-caps-button " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.buildWrapperCSSClass = function() {
                        return "vjs-subs-caps-button " + e.prototype.buildWrapperCSSClass.call(this)
                    };
                    t.prototype.createItems = function() {
                        var n = [];
                        if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks)) {
                            n.push(new js(this.player_, {
                                kind: this.label_
                            }));
                            this.hideThreshold_ += 1
                        }
                        n = e.prototype.createItems.call(this, n, Is);
                        return n
                    };
                    return t
                }(_s);
                qs.prototype.kinds_ = ["captions", "subtitles"];
                qs.prototype.controlText_ = "Subtitles";
                Sn.registerComponent("SubsCapsButton", qs);
                var Rs = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = r.track;
                        var s = n.audioTracks();
                        r.label = i.label || i.language || "Unknown";
                        r.selected = i.enabled;
                        var o = I(this, e.call(this, n, r));
                        o.track = i;
                        var u = sn(o, o.handleTracksChange);
                        s.addEventListener("change", u);
                        o.on("dispose", function() {
                            s.removeEventListener("change", u)
                        });
                        return o
                    }
                    F(t, e);
                    t.prototype.handleClick = function(n) {
                        var r = this.player_.audioTracks();
                        e.prototype.handleClick.call(this, n);
                        for (var i = 0; i < r.length; i++) {
                            var s = r[i];
                            s.enabled = s === this.track
                        }
                    };
                    t.prototype.handleTracksChange = function(t) {
                        this.selected(this.track.enabled)
                    };
                    return t
                }(As);
                Sn.registerComponent("AudioTrackMenuItem", Rs);
                var Us = function(e) {
                    function t(n) {
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        j(this, t);
                        r.tracks = n.audioTracks();
                        return I(this, e.call(this, n, r))
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-audio-button " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.buildWrapperCSSClass = function() {
                        return "vjs-audio-button " + e.prototype.buildWrapperCSSClass.call(this)
                    };
                    t.prototype.createItems = function() {
                        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                        this.hideThreshold_ = 1;
                        var n = this.player_.audioTracks();
                        for (var r = 0; r < n.length; r++) {
                            var i = n[r];
                            t.push(new Rs(this.player_, {
                                track: i,
                                selectable: true
                            }))
                        }
                        return t
                    };
                    return t
                }(Ls);
                Us.prototype.controlText_ = "Audio Track";
                Sn.registerComponent("AudioTrackButton", Us);
                var zs = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = r.rate;
                        var s = parseFloat(i, 10);
                        r.label = i;
                        r.selected = s === 1;
                        r.selectable = true;
                        var o = I(this, e.call(this, n, r));
                        o.label = i;
                        o.rate = s;
                        o.on(n, "ratechange", o.update);
                        return o
                    }
                    F(t, e);
                    t.prototype.handleClick = function(n) {
                        e.prototype.handleClick.call(this);
                        this.player().playbackRate(this.rate)
                    };
                    t.prototype.update = function(t) {
                        this.selected(this.player().playbackRate() === this.rate)
                    };
                    return t
                }(As);
                zs.prototype.contentElType = "button";
                Sn.registerComponent("PlaybackRateMenuItem", zs);
                var Ws = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.updateVisibility();
                        i.updateLabel();
                        i.on(n, "loadstart", i.updateVisibility);
                        i.on(n, "ratechange", i.updateLabel);
                        return i
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        var n = e.prototype.createEl.call(this);
                        this.labelEl_ = lt("div", {
                            className: "vjs-playback-rate-value",
                            innerHTML: "1x"
                        });
                        n.appendChild(this.labelEl_);
                        return n
                    };
                    t.prototype.buildCSSClass = function() {
                        return "vjs-playback-rate " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.buildWrapperCSSClass = function() {
                        return "vjs-playback-rate " + e.prototype.buildWrapperCSSClass.call(this)
                    };
                    t.prototype.createMenu = function() {
                        var t = new Cs(this.player());
                        var n = this.playbackRates();
                        if (n) {
                            for (var r = n.length - 1; r >= 0; r--) {
                                t.addChild(new zs(this.player(), {
                                    rate: n[r] + "x"
                                }))
                            }
                        }
                        return t
                    };
                    t.prototype.updateARIAAttributes = function() {
                        this.el().setAttribute("aria-valuenow", this.player().playbackRate())
                    };
                    t.prototype.handleClick = function(t) {
                        var n = this.player().playbackRate();
                        var r = this.playbackRates();
                        var i = r[0];
                        for (var s = 0; s < r.length; s++) {
                            if (r[s] > n) {
                                i = r[s];
                                break
                            }
                        }
                        this.player().playbackRate(i)
                    };
                    t.prototype.playbackRates = function() {
                        return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates
                    };
                    t.prototype.playbackRateSupported = function() {
                        return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0
                    };
                    t.prototype.updateVisibility = function(t) {
                        if (this.playbackRateSupported()) {
                            this.removeClass("vjs-hidden")
                        } else {
                            this.addClass("vjs-hidden")
                        }
                    };
                    t.prototype.updateLabel = function(t) {
                        if (this.playbackRateSupported()) {
                            this.labelEl_.innerHTML = this.player().playbackRate() + "x"
                        }
                    };
                    return t
                }(ks);
                Ws.prototype.controlText_ = "Playback Rate";
                Sn.registerComponent("PlaybackRateMenuButton", Ws);
                var Xs = function(e) {
                    function t() {
                        j(this, t);
                        return I(this, e.apply(this, arguments))
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-spacer " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: this.buildCSSClass()
                        })
                    };
                    return t
                }(Sn);
                Sn.registerComponent("Spacer", Xs);
                var Vs = function(e) {
                    function t() {
                        j(this, t);
                        return I(this, e.apply(this, arguments))
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-custom-control-spacer " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.createEl = function() {
                        var n = e.prototype.createEl.call(this, {
                            className: this.buildCSSClass()
                        });
                        n.innerHTML = "&nbsp;";
                        return n
                    };
                    return t
                }(Xs);
                Sn.registerComponent("CustomControlSpacer", Vs);
                var $s = function(e) {
                    function t() {
                        j(this, t);
                        return I(this, e.apply(this, arguments))
                    }
                    F(t, e);
                    t.prototype.createEl = function() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-control-bar",
                            dir: "ltr"
                        }, {
                            role: "group"
                        })
                    };
                    return t
                }(Sn);
                $s.prototype.options_ = {
                    children: ["playToggle", "volumePanel", "currentTimeDisplay", "timeDivider", "durationDisplay", "progressControl", "liveDisplay", "remainingTimeDisplay", "customControlSpacer", "playbackRateMenuButton", "chaptersButton", "descriptionsButton", "subsCapsButton", "audioTrackButton", "fullscreenToggle"]
                };
                Sn.registerComponent("ControlBar", $s);
                var Js = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        i.on(n, "error", i.open);
                        return i
                    }
                    F(t, e);
                    t.prototype.buildCSSClass = function() {
                        return "vjs-error-display " + e.prototype.buildCSSClass.call(this)
                    };
                    t.prototype.content = function() {
                        var t = this.player().error();
                        return t ? this.localize(t.message) : ""
                    };
                    return t
                }(Wn);
                Js.prototype.options_ = En(Wn.prototype.options_, {
                    pauseOnOpen: false,
                    fillAlways: true,
                    temporary: false,
                    uncloseable: true
                });
                Sn.registerComponent("ErrorDisplay", Js);
                var Ks = "vjs-text-track-settings";
                var Qs = ["#000", "Black"];
                var Gs = ["#00F", "Blue"];
                var Ys = ["#0FF", "Cyan"];
                var Zs = ["#0F0", "Green"];
                var eo = ["#F0F", "Magenta"];
                var to = ["#F00", "Red"];
                var no = ["#FFF", "White"];
                var ro = ["#FF0", "Yellow"];
                var io = ["1", "Opaque"];
                var so = ["0.5", "Semi-Transparent"];
                var oo = ["0", "Transparent"];
                var uo = {
                    backgroundColor: {
                        selector: ".vjs-bg-color > select",
                        id: "captions-background-color-%s",
                        label: "Color",
                        options: [Qs, no, to, Zs, Gs, ro, eo, Ys]
                    },
                    backgroundOpacity: {
                        selector: ".vjs-bg-opacity > select",
                        id: "captions-background-opacity-%s",
                        label: "Transparency",
                        options: [io, so, oo]
                    },
                    color: {
                        selector: ".vjs-fg-color > select",
                        id: "captions-foreground-color-%s",
                        label: "Color",
                        options: [no, Qs, to, Zs, Gs, ro, eo, Ys]
                    },
                    edgeStyle: {
                        selector: ".vjs-edge-style > select",
                        id: "%s",
                        label: "Text Edge Style",
                        options: [
                            ["none", "None"],
                            ["raised", "Raised"],
                            ["depressed", "Depressed"],
                            ["uniform", "Uniform"],
                            ["dropshadow", "Dropshadow"]
                        ]
                    },
                    fontFamily: {
                        selector: ".vjs-font-family > select",
                        id: "captions-font-family-%s",
                        label: "Font Family",
                        options: [
                            ["proportionalSansSerif", "Proportional Sans-Serif"],
                            ["monospaceSansSerif", "Monospace Sans-Serif"],
                            ["proportionalSerif", "Proportional Serif"],
                            ["monospaceSerif", "Monospace Serif"],
                            ["casual", "Casual"],
                            ["script", "Script"],
                            ["small-caps", "Small Caps"]
                        ]
                    },
                    fontPercent: {
                        selector: ".vjs-font-percent > select",
                        id: "captions-font-size-%s",
                        label: "Font Size",
                        options: [
                            ["0.50", "50%"],
                            ["0.75", "75%"],
                            ["1.00", "100%"],
                            ["1.25", "125%"],
                            ["1.50", "150%"],
                            ["1.75", "175%"],
                            ["2.00", "200%"],
                            ["3.00", "300%"],
                            ["4.00", "400%"]
                        ],
                        "default": 2,
                        parser: function(t) {
                            return t === "1.00" ? null : Number(t)
                        }
                    },
                    textOpacity: {
                        selector: ".vjs-text-opacity > select",
                        id: "captions-foreground-opacity-%s",
                        label: "Transparency",
                        options: [io, so]
                    },
                    windowColor: {
                        selector: ".vjs-window-color > select",
                        id: "captions-window-color-%s",
                        label: "Color"
                    },
                    windowOpacity: {
                        selector: ".vjs-window-opacity > select",
                        id: "captions-window-opacity-%s",
                        label: "Transparency",
                        options: [oo, so, io]
                    }
                };
                uo.windowColor.options = uo.backgroundColor.options;
                var co = function(e) {
                    function t(n, r) {
                        j(this, t);
                        r.temporary = false;
                        var i = I(this, e.call(this, n, r));
                        i.updateDisplay = sn(i, i.updateDisplay);
                        i.fill();
                        i.hasBeenOpened_ = i.hasBeenFilled_ = true;
                        i.endDialog = lt("p", {
                            className: "vjs-control-text",
                            textContent: i.localize("End of dialog window.")
                        });
                        i.el().appendChild(i.endDialog);
                        i.setDefaults();
                        if (r.persistTextTrackSettings === undefined) {
                            i.options_.persistTextTrackSettings = i.options_.playerOptions.persistTextTrackSettings
                        }
                        i.on(i.$(".vjs-done-button"), "click", function() {
                            i.saveSettings();
                            i.close()
                        });
                        i.on(i.$(".vjs-default-button"), "click", function() {
                            i.setDefaults();
                            i.updateDisplay()
                        });
                        z(uo, function(e) {
                            i.on(i.$(e.selector), "change", i.updateDisplay)
                        });
                        if (i.options_.persistTextTrackSettings) {
                            i.restoreSettings()
                        }
                        return i
                    }
                    F(t, e);
                    t.prototype.createElSelect_ = function(t) {
                        var n = this;
                        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
                        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "label";
                        var s = uo[t];
                        var o = s.id.replace("%s", this.id_);
                        return ["<" + i + ' id="' + o + '" class="' + (i === "label" ? "vjs-label" : "") + '">', this.localize(s.label), "</" + i + ">", '<select aria-labelledby="' + (r !== "" ? r + " " : "") + o + '">'].concat(s.options.map(function(e) {
                            var t = o + "-" + e[1];
                            return ['<option id="' + t + '" value="' + e[0] + '" ', 'aria-labelledby="' + (r !== "" ? r + " " : "") + o + " " + t + '">', n.localize(e[1]), "</option>"].join("")
                        })).concat("</select>").join("")
                    };
                    t.prototype.createElFgColor_ = function() {
                        var t = "captions-text-legend-" + this.id_;
                        return ['<fieldset class="vjs-fg-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Text"), "</legend>", this.createElSelect_("color", t), '<span class="vjs-text-opacity vjs-opacity">', this.createElSelect_("textOpacity", t), "</span>", "</fieldset>"].join("")
                    };
                    t.prototype.createElBgColor_ = function() {
                        var t = "captions-background-" + this.id_;
                        return ['<fieldset class="vjs-bg-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Background"), "</legend>", this.createElSelect_("backgroundColor", t), '<span class="vjs-bg-opacity vjs-opacity">', this.createElSelect_("backgroundOpacity", t), "</span>", "</fieldset>"].join("")
                    };
                    t.prototype.createElWinColor_ = function() {
                        var t = "captions-window-" + this.id_;
                        return ['<fieldset class="vjs-window-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Window"), "</legend>", this.createElSelect_("windowColor", t), '<span class="vjs-window-opacity vjs-opacity">', this.createElSelect_("windowOpacity", t), "</span>", "</fieldset>"].join("")
                    };
                    t.prototype.createElColors_ = function() {
                        return lt("div", {
                            className: "vjs-track-settings-colors",
                            innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join("")
                        })
                    };
                    t.prototype.createElFont_ = function() {
                        return lt("div", {
                            className: 'vjs-track-settings-font">',
                            innerHTML: ['<fieldset class="vjs-font-percent vjs-track-setting">', this.createElSelect_("fontPercent", "", "legend"), "</fieldset>", '<fieldset class="vjs-edge-style vjs-track-setting">', this.createElSelect_("edgeStyle", "", "legend"), "</fieldset>", '<fieldset class="vjs-font-family vjs-track-setting">', this.createElSelect_("fontFamily", "", "legend"), "</fieldset>"].join("")
                        })
                    };
                    t.prototype.createElControls_ = function() {
                        var t = this.localize("restore all settings to the default values");
                        return lt("div", {
                            className: "vjs-track-settings-controls",
                            innerHTML: ['<button class="vjs-default-button" title="' + t + '">', this.localize("Reset"), '<span class="vjs-control-text"> ' + t + "</span>", "</button>", '<button class="vjs-done-button">' + this.localize("Done") + "</button>"].join("")
                        })
                    };
                    t.prototype.content = function() {
                        return [this.createElColors_(), this.createElFont_(), this.createElControls_()]
                    };
                    t.prototype.label = function() {
                        return this.localize("Caption Settings Dialog")
                    };
                    t.prototype.description = function() {
                        return this.localize("Beginning of dialog window. Escape will cancel and close the window.")
                    };
                    t.prototype.buildCSSClass = function() {
                        return e.prototype.buildCSSClass.call(this) + " vjs-text-track-settings"
                    };
                    t.prototype.getValues = function() {
                        var t = this;
                        return W(uo, function(e, n, r) {
                            var i = fo(t.$(n.selector), n.parser);
                            if (i !== undefined) {
                                e[r] = i
                            }
                            return e
                        }, {})
                    };
                    t.prototype.setValues = function(t) {
                        var n = this;
                        z(uo, function(e, r) {
                            lo(n.$(e.selector), t[r], e.parser)
                        })
                    };
                    t.prototype.setDefaults = function() {
                        var t = this;
                        z(uo, function(e) {
                            var n = e.hasOwnProperty("default") ? e["default"] : 0;
                            t.$(e.selector).selectedIndex = n
                        })
                    };
                    t.prototype.restoreSettings = function() {
                        var t = void 0;
                        try {
                            t = JSON.parse(o.localStorage.getItem(Ks))
                        } catch (n) {
                            Y.warn(n)
                        }
                        if (t) {
                            this.setValues(t)
                        }
                    };
                    t.prototype.saveSettings = function() {
                        if (!this.options_.persistTextTrackSettings) {
                            return
                        }
                        var t = this.getValues();
                        try {
                            if (Object.keys(t).length) {
                                o.localStorage.setItem(Ks, JSON.stringify(t))
                            } else {
                                o.localStorage.removeItem(Ks)
                            }
                        } catch (n) {
                            Y.warn(n)
                        }
                    };
                    t.prototype.updateDisplay = function() {
                        var t = this.player_.getChild("textTrackDisplay");
                        if (t) {
                            t.updateDisplay()
                        }
                    };
                    t.prototype.conditionalBlur_ = function() {
                        this.previouslyActiveEl_ = null;
                        this.off(h, "keydown", this.handleKeyDown);
                        var t = this.player_.controlBar;
                        var n = t && t.subsCapsButton;
                        var r = t && t.captionsButton;
                        if (n) {
                            n.focus()
                        } else if (r) {
                            r.focus()
                        }
                    };
                    return t
                }(Wn);
                Sn.registerComponent("TextTrackSettings", co);
                var ho = q(["Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\n            This may prevent text tracks from loading."], ["Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\n            This may prevent text tracks from loading."]);
                var po = function(e) {
                    function t(n, r) {
                        j(this, t);
                        var i = I(this, e.call(this, n, r));
                        var s = n.source;
                        var o = false;
                        if (s && (i.el_.currentSrc !== s.src || n.tag && n.tag.initNetworkState_ === 3)) {
                            i.setSource(s)
                        } else {
                            i.handleLateInit_(i.el_)
                        }
                        if (i.el_.hasChildNodes()) {
                            var u = i.el_.childNodes;
                            var a = u.length;
                            var f = [];
                            while (a--) {
                                var l = u[a];
                                var c = l.nodeName.toLowerCase();
                                if (c === "track") {
                                    if (!i.featuresNativeTextTracks) {
                                        f.push(l)
                                    } else {
                                        i.remoteTextTrackEls().addTrackElement_(l);
                                        i.remoteTextTracks().addTrack(l.track);
                                        i.textTracks().addTrack(l.track);
                                        if (!o && !i.el_.hasAttribute("crossorigin") && ar(l.src)) {
                                            o = true
                                        }
                                    }
                                }
                            }
                            for (var h = 0; h < f.length; h++) {
                                i.el_.removeChild(f[h])
                            }
                        }
                        i.proxyNativeTracks_();
                        if (i.featuresNativeTextTracks && o) {
                            Y.warn(et(ho))
                        }
                        i.restoreMetadataTracksInIOSNativePlayer_();
                        if ((D || g || T) && n.nativeControlsForTouch === true) {
                            i.setControls(true)
                        }
                        i.proxyWebkitFullscreen_();
                        i.triggerReady();
                        return i
                    }
                    F(t, e);
                    t.prototype.dispose = function() {
                        t.disposeMediaElement(this.el_);
                        e.prototype.dispose.call(this)
                    };
                    t.prototype.restoreMetadataTracksInIOSNativePlayer_ = function() {
                        var t = this.textTracks();
                        var n = void 0;
                        var r = function() {
                            n = [];
                            for (var r = 0; r < t.length; r++) {
                                var i = t[r];
                                if (i.kind === "metadata") {
                                    n.push({
                                        track: i,
                                        storedMode: i.mode
                                    })
                                }
                            }
                        };
                        r();
                        t.addEventListener("change", r);
                        var i = function s() {
                            for (var e = 0; e < n.length; e++) {
                                var r = n[e];
                                if (r.track.mode === "disabled" && r.track.mode !== r.storedMode) {
                                    r.track.mode = r.storedMode
                                }
                            }
                            t.removeEventListener("change", s)
                        };
                        this.on("webkitbeginfullscreen", function() {
                            t.removeEventListener("change", r);
                            t.removeEventListener("change", i);
                            t.addEventListener("change", i)
                        });
                        this.on("webkitendfullscreen", function() {
                            t.removeEventListener("change", r);
                            t.addEventListener("change", r);
                            t.removeEventListener("change", i)
                        })
                    };
                    t.prototype.proxyNativeTracks_ = function() {
                        var t = this;
                        Wr.names.forEach(function(e) {
                            var n = Wr[e];
                            var r = t.el()[n.getterName];
                            var i = t[n.getterName]();
                            if (!t["featuresNative" + n.capitalName + "Tracks"] || !r || !r.addEventListener) {
                                return
                            }
                            var s = {
                                change: function(t) {
                                    i.trigger({
                                        type: "change",
                                        target: i,
                                        currentTarget: i,
                                        srcElement: i
                                    })
                                },
                                addtrack: function(t) {
                                    i.addTrack(t.track)
                                },
                                removetrack: function(t) {
                                    i.removeTrack(t.track)
                                }
                            };
                            var o = function() {
                                var t = [];
                                for (var n = 0; n < i.length; n++) {
                                    var s = false;
                                    for (var o = 0; o < r.length; o++) {
                                        if (r[o] === i[n]) {
                                            s = true;
                                            break
                                        }
                                    }
                                    if (!s) {
                                        t.push(i[n])
                                    }
                                }
                                while (t.length) {
                                    i.removeTrack(t.shift())
                                }
                            };
                            Object.keys(s).forEach(function(e) {
                                var n = s[e];
                                r.addEventListener(e, n);
                                t.on("dispose", function(t) {
                                    return r.removeEventListener(e, n)
                                })
                            });
                            t.on("loadstart", o);
                            t.on("dispose", function(e) {
                                return t.off("loadstart", o)
                            })
                        })
                    };
                    t.prototype.createEl = function() {
                        var n = this.options_.tag;
                        if (!n || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {
                            if (n) {
                                var r = n.cloneNode(true);
                                if (n.parentNode) {
                                    n.parentNode.insertBefore(r, n)
                                }
                                t.disposeMediaElement(n);
                                n = r
                            } else {
                                n = h.createElement("video");
                                var i = this.options_.tag && yt(this.options_.tag);
                                var s = En({}, i);
                                if (!D || this.options_.nativeControlsForTouch !== true) {
                                    delete s.controls
                                }
                                gt(n, X(s, {
                                    id: this.options_.techId,
                                    "class": "vjs-tech"
                                }))
                            }
                            n.playerId = this.options_.playerId
                        }
                        if (typeof this.options_.preload !== "undefined") {
                            wt(n, "preload", this.options_.preload)
                        }
                        var o = ["loop", "muted", "playsinline", "autoplay"];
                        for (var u = o.length - 1; u >= 0; u--) {
                            var a = o[u];
                            var f = this.options_[a];
                            if (typeof f !== "undefined") {
                                if (f) {
                                    wt(n, a, a)
                                } else {
                                    Et(n, a)
                                }
                                n[a] = f
                            }
                        }
                        return n
                    };
                    t.prototype.handleLateInit_ = function(t) {
                        if (t.networkState === 0 || t.networkState === 3) {
                            return
                        }
                        if (t.readyState === 0) {
                            var n = false;
                            var r = function() {
                                n = true
                            };
                            this.on("loadstart", r);
                            var i = function() {
                                if (!n) {
                                    this.trigger("loadstart")
                                }
                            };
                            this.on("loadedmetadata", i);
                            this.ready(function() {
                                this.off("loadstart", r);
                                this.off("loadedmetadata", i);
                                if (!n) {
                                    this.trigger("loadstart")
                                }
                            });
                            return
                        }
                        var s = ["loadstart"];
                        s.push("loadedmetadata");
                        if (t.readyState >= 2) {
                            s.push("loadeddata")
                        }
                        if (t.readyState >= 3) {
                            s.push("canplay")
                        }
                        if (t.readyState >= 4) {
                            s.push("canplaythrough")
                        }
                        this.ready(function() {
                            s.forEach(function(e) {
                                this.trigger(e)
                            }, this)
                        })
                    };
                    t.prototype.setCurrentTime = function(t) {
                        try {
                            this.el_.currentTime = t
                        } catch (n) {
                            Y(n, "Video is not ready. (Video.js)")
                        }
                    };
                    t.prototype.duration = function() {
                        var t = this;
                        if (this.el_.duration === Infinity && E && k && this.el_.currentTime === 0) {
                            var n = function r() {
                                if (t.el_.currentTime > 0) {
                                    if (t.el_.duration === Infinity) {
                                        t.trigger("durationchange")
                                    }
                                    t.off("timeupdate", r)
                                }
                            };
                            this.on("timeupdate", n);
                            return NaN
                        }
                        return this.el_.duration || NaN
                    };
                    t.prototype.width = function() {
                        return this.el_.offsetWidth
                    };
                    t.prototype.height = function() {
                        return this.el_.offsetHeight
                    };
                    t.prototype.proxyWebkitFullscreen_ = function() {
                        var t = this;
                        if (!("webkitDisplayingFullscreen" in this.el_)) {
                            return
                        }
                        var n = function() {
                            this.trigger("fullscreenchange", {
                                isFullscreen: false
                            })
                        };
                        var r = function() {
                            if ("webkitPresentationMode" in this.el_ && this.el_.webkitPresentationMode !== "picture-in-picture") {
                                this.one("webkitendfullscreen", n);
                                this.trigger("fullscreenchange", {
                                    isFullscreen: true
                                })
                            }
                        };
                        this.on("webkitbeginfullscreen", r);
                        this.on("dispose", function() {
                            t.off("webkitbeginfullscreen", r);
                            t.off("webkitendfullscreen", n)
                        })
                    };
                    t.prototype.supportsFullScreen = function() {
                        if (typeof this.el_.webkitEnterFullScreen === "function") {
                            var t = o.navigator && o.navigator.userAgent || "";
                            if (/Android/.test(t) || !/Chrome|Mac OS X 10.5/.test(t)) {
                                return true
                            }
                        }
                        return false
                    };
                    t.prototype.enterFullScreen = function() {
                        var t = this.el_;
                        if (t.paused && t.networkState <= t.HAVE_METADATA) {
                            this.el_.play();
                            this.setTimeout(function() {
                                t.pause();
                                t.webkitEnterFullScreen()
                            }, 0)
                        } else {
                            t.webkitEnterFullScreen()
                        }
                    };
                    t.prototype.exitFullScreen = function() {
                        this.el_.webkitExitFullScreen()
                    };
                    t.prototype.src = function(t) {
                        if (t === undefined) {
                            return this.el_.src
                        }
                        this.setSrc(t)
                    };
                    t.prototype.reset = function() {
                        t.resetMediaElement(this.el_)
                    };
                    t.prototype.currentSrc = function() {
                        if (this.currentSource_) {
                            return this.currentSource_.src
                        }
                        return this.el_.currentSrc
                    };
                    t.prototype.setControls = function(t) {
                        this.el_.controls = !!t
                    };
                    t.prototype.addTextTrack = function(n, r, i) {
                        if (!this.featuresNativeTextTracks) {
                            return e.prototype.addTextTrack.call(this, n, r, i)
                        }
                        return this.el_.addTextTrack(n, r, i)
                    };
                    t.prototype.createRemoteTextTrack = function(n) {
                        if (!this.featuresNativeTextTracks) {
                            return e.prototype.createRemoteTextTrack.call(this, n)
                        }
                        var r = h.createElement("track");
                        if (n.kind) {
                            r.kind = n.kind
                        }
                        if (n.label) {
                            r.label = n.label
                        }
                        if (n.language || n.srclang) {
                            r.srclang = n.language || n.srclang
                        }
                        if (n["default"]) {
                            r["default"] = n["default"]
                        }
                        if (n.id) {
                            r.id = n.id
                        }
                        if (n.src) {
                            r.src = n.src
                        }
                        return r
                    };
                    t.prototype.addRemoteTextTrack = function(n, r) {
                        var i = e.prototype.addRemoteTextTrack.call(this, n, r);
                        if (this.featuresNativeTextTracks) {
                            this.el().appendChild(i)
                        }
                        return i
                    };
                    t.prototype.removeRemoteTextTrack = function(n) {
                        e.prototype.removeRemoteTextTrack.call(this, n);
                        if (this.featuresNativeTextTracks) {
                            var r = this.$$("track");
                            var i = r.length;
                            while (i--) {
                                if (n === r[i] || n === r[i].track) {
                                    this.el().removeChild(r[i])
                                }
                            }
                        }
                    };
                    t.prototype.getVideoPlaybackQuality = function() {
                        if (typeof this.el().getVideoPlaybackQuality === "function") {
                            return this.el().getVideoPlaybackQuality()
                        }
                        var t = {};
                        if (typeof this.el().webkitDroppedFrameCount !== "undefined" && typeof this.el().webkitDecodedFrameCount !== "undefined") {
                            t.droppedVideoFrames = this.el().webkitDroppedFrameCount;
                            t.totalVideoFrames = this.el().webkitDecodedFrameCount
                        }
                        if (o.performance && typeof o.performance.now === "function") {
                            t.creationTime = o.performance.now()
                        } else if (o.performance && o.performance.timing && typeof o.performance.timing.navigationStart === "number") {
                            t.creationTime = o.Date.now() - o.performance.timing.navigationStart
                        }
                        return t
                    };
                    return t
                }(_i);
                if (ot()) {
                    po.TEST_VID = h.createElement("video");
                    var vo = h.createElement("track");
                    vo.kind = "captions";
                    vo.srclang = "en";
                    vo.label = "English";
                    po.TEST_VID.appendChild(vo)
                }
                po.isSupported = function() {
                    try {
                        po.TEST_VID.volume = .5
                    } catch (e) {
                        return false
                    }
                    return !!(po.TEST_VID && po.TEST_VID.canPlayType)
                };
                po.canPlayType = function(e) {
                    return po.TEST_VID.canPlayType(e)
                };
                po.canPlaySource = function(e, t) {
                    return po.canPlayType(e.type)
                };
                po.canControlVolume = function() {
                    try {
                        var e = po.TEST_VID.volume;
                        po.TEST_VID.volume = e / 2 + .1;
                        return e !== po.TEST_VID.volume
                    } catch (t) {
                        return false
                    }
                };
                po.canControlPlaybackRate = function() {
                    if (E && k && L < 58) {
                        return false
                    }
                    try {
                        var e = po.TEST_VID.playbackRate;
                        po.TEST_VID.playbackRate = e / 2 + .1;
                        return e !== po.TEST_VID.playbackRate
                    } catch (t) {
                        return false
                    }
                };
                po.supportsNativeTextTracks = function() {
                    return _
                };
                po.supportsNativeVideoTracks = function() {
                    return !!(po.TEST_VID && po.TEST_VID.videoTracks)
                };
                po.supportsNativeAudioTracks = function() {
                    return !!(po.TEST_VID && po.TEST_VID.audioTracks)
                };
                po.Events = ["loadstart", "suspend", "abort", "error", "emptied", "stalled", "loadedmetadata", "loadeddata", "canplay", "canplaythrough", "playing", "waiting", "seeking", "seeked", "ended", "durationchange", "timeupdate", "progress", "play", "pause", "ratechange", "resize", "volumechange"];
                po.prototype.featuresVolumeControl = po.canControlVolume();
                po.prototype.featuresPlaybackRate = po.canControlPlaybackRate();
                po.prototype.movingMediaElementInDOM = !b;
                po.prototype.featuresFullscreenResize = true;
                po.prototype.featuresProgressEvents = true;
                po.prototype.featuresTimeupdateEvents = true;
                po.prototype.featuresNativeTextTracks = po.supportsNativeTextTracks();
                po.prototype.featuresNativeVideoTracks = po.supportsNativeVideoTracks();
                po.prototype.featuresNativeAudioTracks = po.supportsNativeAudioTracks();
                var mo = po.TEST_VID && po.TEST_VID.constructor.prototype.canPlayType;
                var go = /^application\/(?:x-|vnd\.apple\.)mpegurl/i;
                var yo = /^video\/mp4/i;
                po.patchCanPlayType = function() {
                    if (S >= 4 && !N) {
                        po.TEST_VID.constructor.prototype.canPlayType = function(e) {
                            if (e && go.test(e)) {
                                return "maybe"
                            }
                            return mo.call(this, e)
                        }
                    } else if (x) {
                        po.TEST_VID.constructor.prototype.canPlayType = function(e) {
                            if (e && yo.test(e)) {
                                return "maybe"
                            }
                            return mo.call(this, e)
                        }
                    }
                };
                po.unpatchCanPlayType = function() {
                    var e = po.TEST_VID.constructor.prototype.canPlayType;
                    po.TEST_VID.constructor.prototype.canPlayType = mo;
                    return e
                };
                po.patchCanPlayType();
                po.disposeMediaElement = function(e) {
                    if (!e) {
                        return
                    }
                    if (e.parentNode) {
                        e.parentNode.removeChild(e)
                    }
                    while (e.hasChildNodes()) {
                        e.removeChild(e.firstChild)
                    }
                    e.removeAttribute("src");
                    if (typeof e.load === "function") {
                        (function() {
                            try {
                                e.load()
                            } catch (t) {}
                        })()
                    }
                };
                po.resetMediaElement = function(e) {
                    if (!e) {
                        return
                    }
                    var t = e.querySelectorAll("source");
                    var n = t.length;
                    while (n--) {
                        e.removeChild(t[n])
                    }
                    e.removeAttribute("src");
                    if (typeof e.load === "function") {
                        (function() {
                            try {
                                e.load()
                            } catch (t) {}
                        })()
                    }
                };
                ["muted", "defaultMuted", "autoplay", "controls", "loop", "playsinline"].forEach(function(e) {
                    po.prototype[e] = function() {
                        return this.el_[e] || this.el_.hasAttribute(e)
                    }
                });
                ["muted", "defaultMuted", "autoplay", "loop", "playsinline"].forEach(function(e) {
                    po.prototype["set" + bn(e)] = function(t) {
                        this.el_[e] = t;
                        if (t) {
                            this.el_.setAttribute(e, e)
                        } else {
                            this.el_.removeAttribute(e)
                        }
                    }
                });
                ["paused", "currentTime", "buffered", "volume", "poster", "preload", "error", "seeking", "seekable", "ended", "playbackRate", "defaultPlaybackRate", "played", "networkState", "readyState", "videoWidth", "videoHeight"].forEach(function(e) {
                    po.prototype[e] = function() {
                        return this.el_[e]
                    }
                });
                ["volume", "src", "poster", "preload", "playbackRate", "defaultPlaybackRate"].forEach(function(e) {
                    po.prototype["set" + bn(e)] = function(t) {
                        this.el_[e] = t
                    }
                });
                ["pause", "load", "play"].forEach(function(e) {
                    po.prototype[e] = function() {
                        return this.el_[e]()
                    }
                });
                _i.withSourceHandlers(po);
                po.nativeSourceHandler = {};
                po.nativeSourceHandler.canPlayType = function(e) {
                    try {
                        return po.TEST_VID.canPlayType(e)
                    } catch (t) {
                        return ""
                    }
                };
                po.nativeSourceHandler.canHandleSource = function(e, t) {
                    if (e.type) {
                        return po.nativeSourceHandler.canPlayType(e.type)
                    } else if (e.src) {
                        var n = ur(e.src);
                        return po.nativeSourceHandler.canPlayType("video/" + n)
                    }
                    return ""
                };
                po.nativeSourceHandler.handleSource = function(e, t, n) {
                    t.setSrc(e.src)
                };
                po.nativeSourceHandler.dispose = function() {};
                po.registerSourceHandler(po.nativeSourceHandler);
                _i.registerTech("Html5", po);
                var bo = q(["\n        Using the tech directly can be dangerous. I hope you know what you're doing.\n        See https://github.com/videojs/video.js/issues/2617 for more info.\n      "], ["\n        Using the tech directly can be dangerous. I hope you know what you're doing.\n        See https://github.com/videojs/video.js/issues/2617 for more info.\n      "]);
                var wo = ["progress", "abort", "suspend", "emptied", "stalled", "loadedmetadata", "loadeddata", "timeupdate", "ratechange", "resize", "volumechange", "texttrackchange"];
                var Eo = function(e) {
                    function n(r, i, s) {
                        j(this, n);
                        r.id = r.id || "vjs_video_" + Bt();
                        i = X(n.getTagSettings(r), i);
                        i.initChildren = false;
                        i.createEl = false;
                        i.reportTouchActivity = false;
                        if (!i.language) {
                            if (typeof r.closest === "function") {
                                var o = r.closest("[lang]");
                                if (o) {
                                    i.language = o.getAttribute("lang")
                                }
                            } else {
                                var u = r;
                                while (u && u.nodeType === 1) {
                                    if (yt(u).hasOwnProperty("lang")) {
                                        i.language = u.getAttribute("lang");
                                        break
                                    }
                                    u = u.parentNode
                                }
                            }
                        }
                        var a = I(this, e.call(this, null, i, s));
                        a.isReady_ = false;
                        a.hasStarted_ = false;
                        if (!a.options_ || !a.options_.techOrder || !a.options_.techOrder.length) {
                            throw new Error("No techOrder specified. Did you overwrite " + "videojs.options instead of just changing the " + "properties you want to override?")
                        }
                        a.tag = r;
                        a.tagAttributes = r && yt(r);
                        a.language(a.options_.language);
                        if (i.languages) {
                            var f = {};
                            Object.getOwnPropertyNames(i.languages).forEach(function(e) {
                                f[e.toLowerCase()] = i.languages[e]
                            });
                            a.languages_ = f
                        } else {
                            a.languages_ = n.prototype.options_.languages
                        }
                        a.cache_ = {};
                        a.poster_ = i.poster || "";
                        a.controls_ = !!i.controls;
                        a.cache_.lastVolume = 1;
                        r.controls = false;
                        a.scrubbing_ = false;
                        a.el_ = a.createEl();
                        mn(a, {
                            eventBusKey: "el_"
                        });
                        var l = En(a.options_);
                        if (i.plugins) {
                            var c = i.plugins;
                            Object.keys(c).forEach(function(e) {
                                if (typeof this[e] === "function") {
                                    this[e](c[e])
                                } else {
                                    throw new Error('plugin "' + e + '" does not exist')
                                }
                            }, a)
                        }
                        a.options_.playerOptions = l;
                        a.middleware_ = [];
                        a.initChildren();
                        a.isAudio(r.nodeName.toLowerCase() === "audio");
                        if (a.controls()) {
                            a.addClass("vjs-controls-enabled")
                        } else {
                            a.addClass("vjs-controls-disabled")
                        }
                        a.el_.setAttribute("role", "region");
                        if (a.isAudio()) {
                            a.el_.setAttribute("aria-label", a.localize("Audio Player"))
                        } else {
                            a.el_.setAttribute("aria-label", a.localize("Video Player"))
                        }
                        if (a.isAudio()) {
                            a.addClass("vjs-audio")
                        }
                        if (a.flexNotSupported_()) {
                            a.addClass("vjs-no-flex")
                        }
                        if (!b) {
                            a.addClass("vjs-workinghover")
                        }
                        n.players[a.id_] = a;
                        var h = t.split(".")[0];
                        a.addClass("vjs-v" + h);
                        a.userActive(true);
                        a.reportUserActivity();
                        a.listenForUserActivity_();
                        a.on("fullscreenchange", a.handleFullscreenChange_);
                        a.on("stageclick", a.handleStageClick_);
                        a.changingSrc_ = false;
                        return a
                    }
                    F(n, e);
                    n.prototype.dispose = function() {
                        this.trigger("dispose");
                        this.off("dispose");
                        if (this.styleEl_ && this.styleEl_.parentNode) {
                            this.styleEl_.parentNode.removeChild(this.styleEl_)
                        }
                        n.players[this.id_] = null;
                        if (this.tag && this.tag.player) {
                            this.tag.player = null
                        }
                        if (this.el_ && this.el_.player) {
                            this.el_.player = null
                        }
                        if (this.tech_) {
                            this.tech_.dispose()
                        }
                        e.prototype.dispose.call(this)
                    };
                    n.prototype.createEl = function() {
                        var n = this.tag;
                        var r = void 0;
                        var i = this.playerElIngest_ = n.parentNode && n.parentNode.hasAttribute && n.parentNode.hasAttribute("data-vjs-player");
                        if (i) {
                            r = this.el_ = n.parentNode
                        } else {
                            r = this.el_ = e.prototype.createEl.call(this, "div")
                        }
                        n.setAttribute("tabindex", "-1");
                        n.removeAttribute("width");
                        n.removeAttribute("height");
                        var s = yt(n);
                        Object.getOwnPropertyNames(s).forEach(function(e) {
                            if (e === "class") {
                                r.className += " " + s[e]
                            } else {
                                r.setAttribute(e, s[e])
                            }
                        });
                        n.playerId = n.id;
                        n.id += "_html5_api";
                        n.className = "vjs-tech";
                        n.player = r.player = this;
                        this.addClass("vjs-paused");
                        if (o.VIDEOJS_NO_DYNAMIC_STYLE !== true) {
                            this.styleEl_ = nn("vjs-styles-dimensions");
                            var u = _t(".vjs-styles-defaults");
                            var a = _t("head");
                            a.insertBefore(this.styleEl_, u ? u.nextSibling : a.firstChild)
                        }
                        this.width(this.options_.width);
                        this.height(this.options_.height);
                        this.fluid(this.options_.fluid);
                        this.aspectRatio(this.options_.aspectRatio);
                        var f = n.getElementsByTagName("a");
                        for (var l = 0; l < f.length; l++) {
                            var c = f.item(l);
                            dt(c, "vjs-hidden");
                            c.setAttribute("hidden", "hidden")
                        }
                        n.initNetworkState_ = n.networkState;
                        if (n.parentNode && !i) {
                            n.parentNode.insertBefore(r, n)
                        }
                        ht(n, r);
                        this.children_.unshift(n);
                        this.el_.setAttribute("lang", this.language_);
                        this.el_ = r;
                        return r
                    };
                    n.prototype.width = function(t) {
                        return this.dimension("width", t)
                    };
                    n.prototype.height = function(t) {
                        return this.dimension("height", t)
                    };
                    n.prototype.dimension = function(t, n) {
                        var r = t + "_";
                        if (n === undefined) {
                            return this[r] || 0
                        }
                        if (n === "") {
                            this[r] = undefined;
                            this.updateStyleEl_();
                            return
                        }
                        var i = parseFloat(n);
                        if (isNaN(i)) {
                            Y.error('Improper value "' + n + '" supplied for for ' + t);
                            return
                        }
                        this[r] = i;
                        this.updateStyleEl_()
                    };
                    n.prototype.fluid = function(t) {
                        if (t === undefined) {
                            return !!this.fluid_
                        }
                        this.fluid_ = !!t;
                        if (t) {
                            this.addClass("vjs-fluid")
                        } else {
                            this.removeClass("vjs-fluid")
                        }
                        this.updateStyleEl_()
                    };
                    n.prototype.aspectRatio = function(t) {
                        if (t === undefined) {
                            return this.aspectRatio_
                        }
                        if (!/^\d+\:\d+$/.test(t)) {
                            throw new Error("Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.")
                        }
                        this.aspectRatio_ = t;
                        this.fluid(true);
                        this.updateStyleEl_()
                    };
                    n.prototype.updateStyleEl_ = function() {
                        if (o.VIDEOJS_NO_DYNAMIC_STYLE === true) {
                            var t = typeof this.width_ === "number" ? this.width_ : this.options_.width;
                            var n = typeof this.height_ === "number" ? this.height_ : this.options_.height;
                            var r = this.tech_ && this.tech_.el();
                            if (r) {
                                if (t >= 0) {
                                    r.width = t
                                }
                                if (n >= 0) {
                                    r.height = n
                                }
                            }
                            return
                        }
                        var i = void 0;
                        var s = void 0;
                        var u = void 0;
                        var a = void 0;
                        if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== "auto") {
                            u = this.aspectRatio_
                        } else if (this.videoWidth() > 0) {
                            u = this.videoWidth() + ":" + this.videoHeight()
                        } else {
                            u = "16:9"
                        }
                        var f = u.split(":");
                        var l = f[1] / f[0];
                        if (this.width_ !== undefined) {
                            i = this.width_
                        } else if (this.height_ !== undefined) {
                            i = this.height_ / l
                        } else {
                            i = this.videoWidth() || 300
                        }
                        if (this.height_ !== undefined) {
                            s = this.height_
                        } else {
                            s = i * l
                        }
                        if (/^[^a-zA-Z]/.test(this.id())) {
                            a = "dimensions-" + this.id()
                        } else {
                            a = this.id() + "-dimensions"
                        }
                        this.addClass(a);
                        rn(this.styleEl_, "\n      ." + a + " {\n        width: " + i + "px;\n        height: " + s + "px;\n      }\n\n      ." + a + ".vjs-fluid {\n        padding-top: " + l * 100 + "%;\n      }\n    ")
                    };
                    n.prototype.loadTech_ = function(t, n) {
                        var r = this;
                        if (this.tech_) {
                            this.unloadTech_()
                        }
                        var i = bn(t);
                        var s = t.charAt(0).toLowerCase() + t.slice(1);
                        if (i !== "Html5" && this.tag) {
                            _i.getTech("Html5").disposeMediaElement(this.tag);
                            this.tag.player = null;
                            this.tag = null
                        }
                        this.techName_ = i;
                        this.isReady_ = false;
                        var o = {
                            source: n,
                            nativeControlsForTouch: this.options_.nativeControlsForTouch,
                            playerId: this.id(),
                            techId: this.id() + "_" + i + "_api",
                            autoplay: this.options_.autoplay,
                            playsinline: this.options_.playsinline,
                            preload: this.options_.preload,
                            loop: this.options_.loop,
                            muted: this.options_.muted,
                            poster: this.poster(),
                            language: this.language(),
                            playerElIngest: this.playerElIngest_ || false,
                            "vtt.js": this.options_["vtt.js"]
                        };
                        Vr.names.forEach(function(e) {
                            var t = Vr[e];
                            o[t.getterName] = r[t.privateName]
                        });
                        X(o, this.options_[i]);
                        X(o, this.options_[s]);
                        X(o, this.options_[t.toLowerCase()]);
                        if (this.tag) {
                            o.tag = this.tag
                        }
                        if (n && n.src === this.cache_.src && this.cache_.currentTime > 0) {
                            o.startTime = this.cache_.currentTime
                        }
                        var u = _i.getTech(t);
                        if (!u) {
                            throw new Error("No Tech named '" + i + "' exists! '" + i + "' should be registered using videojs.registerTech()'")
                        }
                        this.tech_ = new u(o);
                        this.tech_.ready(sn(this, this.handleTechReady_), true);
                        Rn.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);
                        wo.forEach(function(e) {
                            r.on(r.tech_, e, r["handleTech" + bn(e) + "_"])
                        });
                        this.on(this.tech_, "loadstart", this.handleTechLoadStart_);
                        this.on(this.tech_, "waiting", this.handleTechWaiting_);
                        this.on(this.tech_, "canplay", this.handleTechCanPlay_);
                        this.on(this.tech_, "canplaythrough", this.handleTechCanPlayThrough_);
                        this.on(this.tech_, "playing", this.handleTechPlaying_);
                        this.on(this.tech_, "ended", this.handleTechEnded_);
                        this.on(this.tech_, "seeking", this.handleTechSeeking_);
                        this.on(this.tech_, "seeked", this.handleTechSeeked_);
                        this.on(this.tech_, "play", this.handleTechPlay_);
                        this.on(this.tech_, "firstplay", this.handleTechFirstPlay_);
                        this.on(this.tech_, "pause", this.handleTechPause_);
                        this.on(this.tech_, "durationchange", this.handleTechDurationChange_);
                        this.on(this.tech_, "fullscreenchange", this.handleTechFullscreenChange_);
                        this.on(this.tech_, "error", this.handleTechError_);
                        this.on(this.tech_, "loadedmetadata", this.updateStyleEl_);
                        this.on(this.tech_, "posterchange", this.handleTechPosterChange_);
                        this.on(this.tech_, "textdata", this.handleTechTextData_);
                        this.usingNativeControls(this.techGet_("controls"));
                        if (this.controls() && !this.usingNativeControls()) {
                            this.addTechControlsListeners_()
                        }
                        if (this.tech_.el().parentNode !== this.el() && (i !== "Html5" || !this.tag)) {
                            ht(this.tech_.el(), this.el())
                        }
                        if (this.tag) {
                            this.tag.player = null;
                            this.tag = null
                        }
                    };
                    n.prototype.unloadTech_ = function() {
                        var t = this;
                        Vr.names.forEach(function(e) {
                            var n = Vr[e];
                            t[n.privateName] = t[n.getterName]()
                        });
                        this.textTracksJson_ = Rn.textTracksToJson(this.tech_);
                        this.isReady_ = false;
                        this.tech_.dispose();
                        this.tech_ = false
                    };
                    n.prototype.tech = function(t) {
                        if (t === undefined) {
                            Y.warn(et(bo))
                        }
                        return this.tech_
                    };
                    n.prototype.addTechControlsListeners_ = function() {
                        this.removeTechControlsListeners_();
                        this.on(this.tech_, "mousedown", this.handleTechClick_);
                        this.on(this.tech_, "touchstart", this.handleTechTouchStart_);
                        this.on(this.tech_, "touchmove", this.handleTechTouchMove_);
                        this.on(this.tech_, "touchend", this.handleTechTouchEnd_);
                        this.on(this.tech_, "tap", this.handleTechTap_)
                    };
                    n.prototype.removeTechControlsListeners_ = function() {
                        this.off(this.tech_, "tap", this.handleTechTap_);
                        this.off(this.tech_, "touchstart", this.handleTechTouchStart_);
                        this.off(this.tech_, "touchmove", this.handleTechTouchMove_);
                        this.off(this.tech_, "touchend", this.handleTechTouchEnd_);
                        this.off(this.tech_, "mousedown", this.handleTechClick_)
                    };
                    n.prototype.handleTechReady_ = function() {
                        this.triggerReady();
                        if (this.cache_.volume) {
                            this.techCall_("setVolume", this.cache_.volume)
                        }
                        this.handleTechPosterChange_();
                        this.handleTechDurationChange_();
                        if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {
                            try {
                                delete this.tag.poster
                            } catch (t) {
                                Y("deleting tag.poster throws in some browsers", t)
                            }
                        }
                    };
                    n.prototype.handleTechLoadStart_ = function() {
                        this.removeClass("vjs-ended");
                        this.removeClass("vjs-seeking");
                        this.error(null);
                        if (!this.paused()) {
                            this.trigger("loadstart");
                            this.trigger("firstplay")
                        } else {
                            this.hasStarted(false);
                            this.trigger("loadstart")
                        }
                    };
                    n.prototype.hasStarted = function(t) {
                        if (t === undefined) {
                            return this.hasStarted_
                        }
                        if (t === this.hasStarted_) {
                            return
                        }
                        this.hasStarted_ = t;
                        if (this.hasStarted_) {
                            this.addClass("vjs-has-started");
                            this.trigger("firstplay")
                        } else {
                            this.removeClass("vjs-has-started")
                        }
                    };
                    n.prototype.handleTechPlay_ = function() {
                        this.removeClass("vjs-ended");
                        this.removeClass("vjs-paused");
                        this.addClass("vjs-playing");
                        this.hasStarted(true);
                        this.trigger("play")
                    };
                    n.prototype.handleTechWaiting_ = function() {
                        var t = this;
                        this.addClass("vjs-waiting");
                        this.trigger("waiting");
                        this.one("timeupdate", function() {
                            return t.removeClass("vjs-waiting")
                        })
                    };
                    n.prototype.handleTechCanPlay_ = function() {
                        this.removeClass("vjs-waiting");
                        this.trigger("canplay")
                    };
                    n.prototype.handleTechCanPlayThrough_ = function() {
                        this.removeClass("vjs-waiting");
                        this.trigger("canplaythrough")
                    };
                    n.prototype.handleTechPlaying_ = function() {
                        this.removeClass("vjs-waiting");
                        this.trigger("playing")
                    };
                    n.prototype.handleTechSeeking_ = function() {
                        this.addClass("vjs-seeking");
                        this.trigger("seeking")
                    };
                    n.prototype.handleTechSeeked_ = function() {
                        this.removeClass("vjs-seeking");
                        this.trigger("seeked")
                    };
                    n.prototype.handleTechFirstPlay_ = function() {
                        if (this.options_.starttime) {
                            Y.warn("Passing the `starttime` option to the player will be deprecated in 6.0");
                            this.currentTime(this.options_.starttime)
                        }
                        this.addClass("vjs-has-started");
                        this.trigger("firstplay")
                    };
                    n.prototype.handleTechPause_ = function() {
                        this.removeClass("vjs-playing");
                        this.addClass("vjs-paused");
                        this.trigger("pause")
                    };
                    n.prototype.handleTechEnded_ = function() {
                        this.addClass("vjs-ended");
                        if (this.options_.loop) {
                            this.currentTime(0);
                            this.play()
                        } else if (!this.paused()) {
                            this.pause()
                        }
                        this.trigger("ended")
                    };
                    n.prototype.handleTechDurationChange_ = function() {
                        this.duration(this.techGet_("duration"))
                    };
                    n.prototype.handleTechClick_ = function(t) {
                        if (t.button !== 0) {
                            return
                        }
                        if (this.controls()) {
                            if (this.paused()) {
                                this.play()
                            } else {
                                this.pause()
                            }
                        }
                    };
                    n.prototype.handleTechTap_ = function() {
                        this.userActive(!this.userActive())
                    };
                    n.prototype.handleTechTouchStart_ = function() {
                        this.userWasActive = this.userActive()
                    };
                    n.prototype.handleTechTouchMove_ = function() {
                        if (this.userWasActive) {
                            this.reportUserActivity()
                        }
                    };
                    n.prototype.handleTechTouchEnd_ = function(t) {
                        t.preventDefault()
                    };
                    n.prototype.handleFullscreenChange_ = function() {
                        if (this.isFullscreen()) {
                            this.addClass("vjs-fullscreen")
                        } else {
                            this.removeClass("vjs-fullscreen")
                        }
                    };
                    n.prototype.handleStageClick_ = function() {
                        this.reportUserActivity()
                    };
                    n.prototype.handleTechFullscreenChange_ = function(t, n) {
                        if (n) {
                            this.isFullscreen(n.isFullscreen)
                        }
                        this.trigger("fullscreenchange")
                    };
                    n.prototype.handleTechError_ = function() {
                        var t = this.tech_.error();
                        this.error(t)
                    };
                    n.prototype.handleTechTextData_ = function() {
                        var t = null;
                        if (arguments.length > 1) {
                            t = arguments[1]
                        }
                        this.trigger("textdata", t)
                    };
                    n.prototype.getCache = function() {
                        return this.cache_
                    };
                    n.prototype.techCall_ = function(t, n) {
                        this.ready(function() {
                            if (t in qi) {
                                return Fi(this.middleware_, this.tech_, t, n)
                            }
                            try {
                                if (this.tech_) {
                                    this.tech_[t](n)
                                }
                            } catch (e) {
                                Y(e);
                                throw e
                            }
                        }, true)
                    };
                    n.prototype.techGet_ = function(t) {
                        if (!this.tech_ || !this.tech_.isReady_) {
                            return
                        }
                        if (t in Ii) {
                            return ji(this.middleware_, this.tech_, t)
                        }
                        try {
                            return this.tech_[t]()
                        } catch (n) {
                            if (this.tech_[t] === undefined) {
                                Y("Video.js: " + t + " method not defined for " + this.techName_ + " playback technology.", n);
                                throw n
                            }
                            if (n.name === "TypeError") {
                                Y("Video.js: " + t + " unavailable on " + this.techName_ + " playback technology element.", n);
                                this.tech_.isReady_ = false;
                                throw n
                            }
                            Y(n);
                            throw n
                        }
                    };
                    n.prototype.play = function() {
                        if (this.changingSrc_) {
                            this.ready(function() {
                                var e = this.techGet_("play");
                                if (e !== undefined && typeof e.then === "function") {
                                    e.then(null, function(e) {})
                                }
                            })
                        } else if (this.isReady_ && (this.src() || this.currentSrc())) {
                            return this.techGet_("play")
                        } else {
                            this.ready(function() {
                                this.tech_.one("loadstart", function() {
                                    var e = this.play();
                                    if (e !== undefined && typeof e.then === "function") {
                                        e.then(null, function(e) {})
                                    }
                                })
                            })
                        }
                    };
                    n.prototype.pause = function() {
                        this.techCall_("pause")
                    };
                    n.prototype.paused = function() {
                        return this.techGet_("paused") === false ? false : true
                    };
                    n.prototype.played = function() {
                        return this.techGet_("played") || Cn(0, 0)
                    };
                    n.prototype.scrubbing = function(t) {
                        if (typeof t === "undefined") {
                            return this.scrubbing_
                        }
                        this.scrubbing_ = !!t;
                        if (t) {
                            this.addClass("vjs-scrubbing")
                        } else {
                            this.removeClass("vjs-scrubbing")
                        }
                    };
                    n.prototype.currentTime = function(t) {
                        if (typeof t !== "undefined") {
                            this.techCall_("setCurrentTime", t);
                            return
                        }
                        this.cache_.currentTime = this.techGet_("currentTime") || 0;
                        return this.cache_.currentTime
                    };
                    n.prototype.duration = function(t) {
                        if (t === undefined) {
                            return this.cache_.duration !== undefined ? this.cache_.duration : NaN
                        }
                        t = parseFloat(t);
                        if (t < 0) {
                            t = Infinity
                        }
                        if (t !== this.cache_.duration) {
                            this.cache_.duration = t;
                            if (t === Infinity) {
                                this.addClass("vjs-live")
                            } else {
                                this.removeClass("vjs-live")
                            }
                            this.trigger("durationchange")
                        }
                    };
                    n.prototype.remainingTime = function() {
                        return this.duration() - this.currentTime()
                    };
                    n.prototype.remainingTimeDisplay = function() {
                        return Math.floor(this.duration()) - Math.floor(this.currentTime())
                    };
                    n.prototype.buffered = function r() {
                        var r = this.techGet_("buffered");
                        if (!r || !r.length) {
                            r = Cn(0, 0)
                        }
                        return r
                    };
                    n.prototype.bufferedPercent = function() {
                        return kn(this.buffered(), this.duration())
                    };
                    n.prototype.bufferedEnd = function() {
                        var t = this.buffered();
                        var n = this.duration();
                        var r = t.end(t.length - 1);
                        if (r > n) {
                            r = n
                        }
                        return r
                    };
                    n.prototype.volume = function(t) {
                        var n = void 0;
                        if (t !== undefined) {
                            n = Math.max(0, Math.min(1, parseFloat(t)));
                            this.cache_.volume = n;
                            this.techCall_("setVolume", n);
                            if (n > 0) {
                                this.lastVolume_(n)
                            }
                            return
                        }
                        n = parseFloat(this.techGet_("volume"));
                        return isNaN(n) ? 1 : n
                    };
                    n.prototype.muted = function(t) {
                        if (t !== undefined) {
                            this.techCall_("setMuted", t);
                            return
                        }
                        return this.techGet_("muted") || false
                    };
                    n.prototype.defaultMuted = function(t) {
                        if (t !== undefined) {
                            return this.techCall_("setDefaultMuted", t)
                        }
                        return this.techGet_("defaultMuted") || false
                    };
                    n.prototype.lastVolume_ = function(t) {
                        if (t !== undefined && t !== 0) {
                            this.cache_.lastVolume = t;
                            return
                        }
                        return this.cache_.lastVolume
                    };
                    n.prototype.supportsFullScreen = function() {
                        return this.techGet_("supportsFullScreen") || false
                    };
                    n.prototype.isFullscreen = function(t) {
                        if (t !== undefined) {
                            this.isFullscreen_ = !!t;
                            return
                        }
                        return !!this.isFullscreen_
                    };
                    n.prototype.requestFullscreen = function() {
                        var t = Ln;
                        this.isFullscreen(true);
                        if (t.requestFullscreen) {
                            $t(h, t.fullscreenchange, sn(this, function n(e) {
                                this.isFullscreen(h[t.fullscreenElement]);
                                if (this.isFullscreen() === false) {
                                    Jt(h, t.fullscreenchange, n)
                                }
                                this.trigger("fullscreenchange")
                            }));
                            this.el_[t.requestFullscreen]()
                        } else if (this.tech_.supportsFullScreen()) {
                            this.techCall_("enterFullScreen")
                        } else {
                            this.enterFullWindow();
                            this.trigger("fullscreenchange")
                        }
                    };
                    n.prototype.exitFullscreen = function() {
                        var t = Ln;
                        this.isFullscreen(false);
                        if (t.requestFullscreen) {
                            h[t.exitFullscreen]()
                        } else if (this.tech_.supportsFullScreen()) {
                            this.techCall_("exitFullScreen")
                        } else {
                            this.exitFullWindow();
                            this.trigger("fullscreenchange")
                        }
                    };
                    n.prototype.enterFullWindow = function() {
                        this.isFullWindow = true;
                        this.docOrigOverflow = h.documentElement.style.overflow;
                        $t(h, "keydown", sn(this, this.fullWindowOnEscKey));
                        h.documentElement.style.overflow = "hidden";
                        dt(h.body, "vjs-full-window");
                        this.trigger("enterFullWindow")
                    };
                    n.prototype.fullWindowOnEscKey = function(t) {
                        if (t.keyCode === 27) {
                            if (this.isFullscreen() === true) {
                                this.exitFullscreen()
                            } else {
                                this.exitFullWindow()
                            }
                        }
                    };
                    n.prototype.exitFullWindow = function() {
                        this.isFullWindow = false;
                        Jt(h, "keydown", this.fullWindowOnEscKey);
                        h.documentElement.style.overflow = this.docOrigOverflow;
                        vt(h.body, "vjs-full-window");
                        this.trigger("exitFullWindow")
                    };
                    n.prototype.canPlayType = function(t) {
                        var n = void 0;
                        for (var r = 0, i = this.options_.techOrder; r < i.length; r++) {
                            var s = i[r];
                            var o = _i.getTech(s);
                            if (!o) {
                                o = Sn.getComponent(s)
                            }
                            if (!o) {
                                Y.error('The "' + s + '" tech is undefined. Skipped browser support check for that tech.');
                                continue
                            }
                            if (o.isSupported()) {
                                n = o.canPlayType(t);
                                if (n) {
                                    return n
                                }
                            }
                        }
                        return ""
                    };
                    n.prototype.selectSource = function(t) {
                        var n = this;
                        var r = this.options_.techOrder.map(function(e) {
                            return [e, _i.getTech(e)]
                        }).filter(function(e) {
                            var t = e[0],
                                n = e[1];
                            if (n) {
                                return n.isSupported()
                            }
                            Y.error('The "' + t + '" tech is undefined. Skipped browser support check for that tech.');
                            return false
                        });
                        var i = function(t, n, r) {
                            var i = void 0;
                            t.some(function(e) {
                                return n.some(function(t) {
                                    i = r(e, t);
                                    if (i) {
                                        return true
                                    }
                                })
                            });
                            return i
                        };
                        var s = void 0;
                        var o = function(t) {
                            return function(e, n) {
                                return t(n, e)
                            }
                        };
                        var u = function(t, r) {
                            var i = t[0],
                                s = t[1];
                            if (s.canPlaySource(r, n.options_[i.toLowerCase()])) {
                                return {
                                    source: r,
                                    tech: i
                                }
                            }
                        };
                        if (this.options_.sourceOrder) {
                            s = i(t, r, o(u))
                        } else {
                            s = i(r, t, u)
                        }
                        return s || false
                    };
                    n.prototype.src = function(t) {
                        var n = this;
                        if (typeof t === "undefined") {
                            return this.cache_.src || ""
                        }
                        var r = zi(t);
                        if (!r.length) {
                            this.setTimeout(function() {
                                this.error({
                                    code: 4,
                                    message: this.localize(this.options_.notSupportedMessage)
                                })
                            }, 0);
                            return
                        }
                        this.cache_.sources = r;
                        this.changingSrc_ = true;
                        this.cache_.source = r[0];
                        Hi(this, r[0], function(e, t) {
                            n.middleware_ = t;
                            var i = n.src_(e);
                            if (i) {
                                if (r.length > 1) {
                                    return n.src(r.slice(1))
                                }
                                n.setTimeout(function() {
                                    this.error({
                                        code: 4,
                                        message: this.localize(this.options_.notSupportedMessage)
                                    })
                                }, 0);
                                n.triggerReady();
                                return
                            }
                            n.changingSrc_ = false;
                            n.cache_.src = e.src;
                            Bi(t, n.tech_)
                        })
                    };
                    n.prototype.src_ = function(t) {
                        var n = this.selectSource([t]);
                        if (!n) {
                            return true
                        }
                        if (!wn(n.tech, this.techName_)) {
                            this.changingSrc_ = true;
                            this.loadTech_(n.tech, n.source);
                            return false
                        }
                        this.ready(function() {
                            if (this.tech_.constructor.prototype.hasOwnProperty("setSource")) {
                                this.techCall_("setSource", t)
                            } else {
                                this.techCall_("src", t.src)
                            }
                            if (this.options_.preload === "auto") {
                                this.load()
                            }
                        }, true);
                        return false
                    };
                    n.prototype.load = function() {
                        this.techCall_("load")
                    };
                    n.prototype.reset = function() {
                        this.loadTech_(this.options_.techOrder[0], null);
                        this.techCall_("reset")
                    };
                    n.prototype.currentSources = function() {
                        var t = this.currentSource();
                        var n = [];
                        if (Object.keys(t).length !== 0) {
                            n.push(t)
                        }
                        return this.cache_.sources || n
                    };
                    n.prototype.currentSource = function() {
                        return this.cache_.source || {}
                    };
                    n.prototype.currentSrc = function() {
                        return this.currentSource() && this.currentSource().src || ""
                    };
                    n.prototype.currentType = function() {
                        return this.currentSource() && this.currentSource().type || ""
                    };
                    n.prototype.preload = function(t) {
                        if (t !== undefined) {
                            this.techCall_("setPreload", t);
                            this.options_.preload = t;
                            return
                        }
                        return this.techGet_("preload")
                    };
                    n.prototype.autoplay = function(t) {
                        if (t !== undefined) {
                            this.techCall_("setAutoplay", t);
                            this.options_.autoplay = t;
                            return
                        }
                        return this.techGet_("autoplay", t)
                    };
                    n.prototype.playsinline = function(t) {
                        if (t !== undefined) {
                            this.techCall_("setPlaysinline", t);
                            this.options_.playsinline = t;
                            return this
                        }
                        return this.techGet_("playsinline")
                    };
                    n.prototype.loop = function(t) {
                        if (t !== undefined) {
                            this.techCall_("setLoop", t);
                            this.options_.loop = t;
                            return
                        }
                        return this.techGet_("loop")
                    };
                    n.prototype.poster = function(t) {
                        if (t === undefined) {
                            return this.poster_
                        }
                        if (!t) {
                            t = ""
                        }
                        this.poster_ = t;
                        this.techCall_("setPoster", t);
                        this.trigger("posterchange")
                    };
                    n.prototype.handleTechPosterChange_ = function() {
                        if (!this.poster_ && this.tech_ && this.tech_.poster) {
                            this.poster_ = this.tech_.poster() || "";
                            this.trigger("posterchange")
                        }
                    };
                    n.prototype.controls = function(t) {
                        if (t !== undefined) {
                            t = !!t;
                            if (this.controls_ !== t) {
                                this.controls_ = t;
                                if (this.usingNativeControls()) {
                                    this.techCall_("setControls", t)
                                }
                                if (t) {
                                    this.removeClass("vjs-controls-disabled");
                                    this.addClass("vjs-controls-enabled");
                                    this.trigger("controlsenabled");
                                    if (!this.usingNativeControls()) {
                                        this.addTechControlsListeners_()
                                    }
                                } else {
                                    this.removeClass("vjs-controls-enabled");
                                    this.addClass("vjs-controls-disabled");
                                    this.trigger("controlsdisabled");
                                    if (!this.usingNativeControls()) {
                                        this.removeTechControlsListeners_()
                                    }
                                }
                            }
                            return
                        }
                        return !!this.controls_
                    };
                    n.prototype.usingNativeControls = function(t) {
                        if (t !== undefined) {
                            t = !!t;
                            if (this.usingNativeControls_ !== t) {
                                this.usingNativeControls_ = t;
                                if (t) {
                                    this.addClass("vjs-using-native-controls");
                                    this.trigger("usingnativecontrols")
                                } else {
                                    this.removeClass("vjs-using-native-controls");
                                    this.trigger("usingcustomcontrols")
                                }
                            }
                            return
                        }
                        return !!this.usingNativeControls_
                    };
                    n.prototype.error = function(t) {
                        if (t === undefined) {
                            return this.error_ || null
                        }
                        if (t === null) {
                            this.error_ = t;
                            this.removeClass("vjs-error");
                            if (this.errorDisplay) {
                                this.errorDisplay.close()
                            }
                            return
                        }
                        this.error_ = new Pn(t);
                        this.addClass("vjs-error");
                        Y.error("(CODE:" + this.error_.code + " " + Pn.errorTypes[this.error_.code] + ")", this.error_.message, this.error_);
                        this.trigger("error");
                        return
                    };
                    n.prototype.reportUserActivity = function(t) {
                        this.userActivity_ = true
                    };
                    n.prototype.userActive = function(t) {
                        if (t !== undefined) {
                            t = !!t;
                            if (t !== this.userActive_) {
                                this.userActive_ = t;
                                if (t) {
                                    this.userActivity_ = true;
                                    this.removeClass("vjs-user-inactive");
                                    this.addClass("vjs-user-active");
                                    this.trigger("useractive")
                                } else {
                                    this.userActivity_ = false;
                                    if (this.tech_) {
                                        this.tech_.one("mousemove", function(e) {
                                            e.stopPropagation();
                                            e.preventDefault()
                                        })
                                    }
                                    this.removeClass("vjs-user-active");
                                    this.addClass("vjs-user-inactive");
                                    this.trigger("userinactive")
                                }
                            }
                            return
                        }
                        return this.userActive_
                    };
                    n.prototype.listenForUserActivity_ = function() {
                        var t = void 0;
                        var n = void 0;
                        var r = void 0;
                        var i = sn(this, this.reportUserActivity);
                        var s = function(t) {
                            if (t.screenX !== n || t.screenY !== r) {
                                n = t.screenX;
                                r = t.screenY;
                                i()
                            }
                        };
                        var o = function() {
                            i();
                            this.clearInterval(t);
                            t = this.setInterval(i, 250)
                        };
                        var u = function(n) {
                            i();
                            this.clearInterval(t)
                        };
                        this.on("mousedown", o);
                        this.on("mousemove", s);
                        this.on("mouseup", u);
                        this.on("keydown", i);
                        this.on("keyup", i);
                        var a = void 0;
                        this.setInterval(function() {
                            if (this.userActivity_) {
                                this.userActivity_ = false;
                                this.userActive(true);
                                this.clearTimeout(a);
                                var e = this.options_.inactivityTimeout;
                                if (e > 0) {
                                    a = this.setTimeout(function() {
                                        if (!this.userActivity_) {
                                            this.userActive(false)
                                        }
                                    }, e)
                                }
                            }
                        }, 250)
                    };
                    n.prototype.playbackRate = function(t) {
                        if (t !== undefined) {
                            this.techCall_("setPlaybackRate", t);
                            return
                        }
                        if (this.tech_ && this.tech_.featuresPlaybackRate) {
                            return this.techGet_("playbackRate")
                        }
                        return 1
                    };
                    n.prototype.defaultPlaybackRate = function(t) {
                        if (t !== undefined) {
                            return this.techCall_("setDefaultPlaybackRate", t)
                        }
                        if (this.tech_ && this.tech_.featuresPlaybackRate) {
                            return this.techGet_("defaultPlaybackRate")
                        }
                        return 1
                    };
                    n.prototype.isAudio = function(t) {
                        if (t !== undefined) {
                            this.isAudio_ = !!t;
                            return
                        }
                        return !!this.isAudio_
                    };
                    n.prototype.addTextTrack = function(t, n, r) {
                        if (this.tech_) {
                            return this.tech_.addTextTrack(t, n, r)
                        }
                    };
                    n.prototype.addRemoteTextTrack = function(t, n) {
                        if (this.tech_) {
                            return this.tech_.addRemoteTextTrack(t, n)
                        }
                    };
                    n.prototype.removeRemoteTextTrack = function() {
                        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                            n = t.track,
                            r = n === undefined ? arguments[0] : n;
                        if (this.tech_) {
                            return this.tech_.removeRemoteTextTrack(r)
                        }
                    };
                    n.prototype.getVideoPlaybackQuality = function() {
                        return this.techGet_("getVideoPlaybackQuality")
                    };
                    n.prototype.videoWidth = function() {
                        return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0
                    };
                    n.prototype.videoHeight = function() {
                        return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0
                    };
                    n.prototype.language = function(t) {
                        if (t === undefined) {
                            return this.language_
                        }
                        this.language_ = String(t).toLowerCase()
                    };
                    n.prototype.languages = function() {
                        return En(n.prototype.options_.languages, this.languages_)
                    };
                    n.prototype.toJSON = function() {
                        var t = En(this.options_);
                        var n = t.tracks;
                        t.tracks = [];
                        for (var r = 0; r < n.length; r++) {
                            var i = n[r];
                            i = En(i);
                            i.player = undefined;
                            t.tracks[r] = i
                        }
                        return t
                    };
                    n.prototype.createModal = function(t, n) {
                        var r = this;
                        n = n || {};
                        n.content = t || "";
                        var i = new Wn(this, n);
                        this.addChild(i);
                        i.on("dispose", function() {
                            r.removeChild(i)
                        });
                        i.open();
                        return i
                    };
                    n.getTagSettings = function(t) {
                        var n = {
                            sources: [],
                            tracks: []
                        };
                        var r = yt(t);
                        var i = r["data-setup"];
                        if (pt(t, "vjs-fluid")) {
                            r.fluid = true
                        }
                        if (i !== null) {
                            var s = Bn(i || "{}"),
                                o = s[0],
                                u = s[1];
                            if (o) {
                                Y.error(o)
                            }
                            X(r, u)
                        }
                        X(n, r);
                        if (t.hasChildNodes()) {
                            var a = t.childNodes;
                            for (var f = 0, l = a.length; f < l; f++) {
                                var c = a[f];
                                var h = c.nodeName.toLowerCase();
                                if (h === "source") {
                                    n.sources.push(yt(c))
                                } else if (h === "track") {
                                    n.tracks.push(yt(c))
                                }
                            }
                        }
                        return n
                    };
                    n.prototype.flexNotSupported_ = function() {
                        var t = h.createElement("i");
                        return !("flexBasis" in t.style || "webkitFlexBasis" in t.style || "mozFlexBasis" in t.style || "msFlexBasis" in t.style || "msFlexOrder" in t.style)
                    };
                    return n
                }(Sn);
                Vr.names.forEach(function(e) {
                    var t = Vr[e];
                    Eo.prototype[t.getterName] = function() {
                        if (this.tech_) {
                            return this.tech_[t.getterName]()
                        }
                        this[t.privateName] = this[t.privateName] || new t.ListClass;
                        return this[t.privateName]
                    }
                });
                Eo.players = {};
                var So = o.navigator;
                Eo.prototype.options_ = {
                    techOrder: _i.defaultTechOrder_,
                    html5: {},
                    flash: {},
                    inactivityTimeout: 2e3,
                    playbackRates: [],
                    children: ["mediaLoader", "posterImage", "textTrackDisplay", "loadingSpinner", "bigPlayButton", "controlBar", "errorDisplay", "textTrackSettings"],
                    language: So && (So.languages && So.languages[0] || So.userLanguage || So.language) || "en",
                    languages: {},
                    notSupportedMessage: "No compatible source was found for this media."
                };
                ["ended", "seeking", "seekable", "networkState", "readyState"].forEach(function(e) {
                    Eo.prototype[e] = function() {
                        return this.techGet_(e)
                    }
                });
                wo.forEach(function(e) {
                    Eo.prototype["handleTech" + bn(e) + "_"] = function() {
                        return this.trigger(e)
                    }
                });
                Sn.registerComponent("Player", Eo);
                var xo = "plugin";
                var To = "activePlugins_";
                var No = {};
                var Co = function(t) {
                    return No.hasOwnProperty(t)
                };
                var ko = function(t) {
                    return Co(t) ? No[t] : undefined
                };
                var Lo = function(t, n) {
                    t[To] = t[To] || {};
                    t[To][n] = true
                };
                var Ao = function(t, n, r) {
                    var i = (r ? "before" : "") + "pluginsetup";
                    t.trigger(i, n);
                    t.trigger(i + ":" + n.name, n)
                };
                var Oo = function(t, n) {
                    var r = function() {
                        Ao(this, {
                            name: t,
                            plugin: n,
                            instance: null
                        }, true);
                        var r = n.apply(this, arguments);
                        Lo(this, t);
                        Ao(this, {
                            name: t,
                            plugin: n,
                            instance: r
                        });
                        return r
                    };
                    Object.keys(n).forEach(function(e) {
                        r[e] = n[e]
                    });
                    return r
                };
                var Mo = function(t, n) {
                    n.prototype.name = t;
                    return function() {
                        Ao(this, {
                            name: t,
                            plugin: n,
                            instance: null
                        }, true);
                        for (var e = arguments.length, r = Array(e), i = 0; i < e; i++) {
                            r[i] = arguments[i]
                        }
                        var s = new(Function.prototype.bind.apply(n, [null].concat([this].concat(r))));
                        this[t] = function() {
                            return s
                        };
                        Ao(this, s.getEventHash());
                        return s
                    }
                };
                var _o = function() {
                    function e(t) {
                        j(this, e);
                        if (this.constructor === e) {
                            throw new Error("Plugin must be sub-classed; not directly instantiated.")
                        }
                        this.player = t;
                        mn(this);
                        delete this.trigger;
                        yn(this, this.constructor.defaultState);
                        Lo(t, this.name);
                        this.dispose = sn(this, this.dispose);
                        t.on("dispose", this.dispose)
                    }
                    e.prototype.getEventHash = function() {
                        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        t.name = this.name;
                        t.plugin = this.constructor;
                        t.instance = this;
                        return t
                    };
                    e.prototype.trigger = function(t) {
                        var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                        return Kt(this.eventBusEl_, t, this.getEventHash(n))
                    };
                    e.prototype.handleStateChanged = function(t) {};
                    e.prototype.dispose = function() {
                        var t = this.name,
                            n = this.player;
                        this.trigger("dispose");
                        this.off();
                        n.off("dispose", this.dispose);
                        n[To][t] = false;
                        this.player = this.state = null;
                        n[t] = Mo(t, No[t])
                    };
                    e.isBasic = function(n) {
                        var r = typeof n === "string" ? ko(n) : n;
                        return typeof r === "function" && !e.prototype.isPrototypeOf(r.prototype)
                    };
                    e.registerPlugin = function(n, r) {
                        if (typeof n !== "string") {
                            throw new Error('Illegal plugin name, "' + n + '", must be a string, was ' + (typeof n === "undefined" ? "undefined" : B(n)) + ".")
                        }
                        if (Co(n)) {
                            Y.warn('A plugin named "' + n + '" already exists. You may want to avoid re-registering plugins!')
                        } else if (Eo.prototype.hasOwnProperty(n)) {
                            throw new Error('Illegal plugin name, "' + n + '", cannot share a name with an existing player method!')
                        }
                        if (typeof r !== "function") {
                            throw new Error('Illegal plugin for "' + n + '", must be a function, was ' + (typeof r === "undefined" ? "undefined" : B(r)) + ".")
                        }
                        No[n] = r;
                        if (n !== xo) {
                            if (e.isBasic(r)) {
                                Eo.prototype[n] = Oo(n, r)
                            } else {
                                Eo.prototype[n] = Mo(n, r)
                            }
                        }
                        return r
                    };
                    e.deregisterPlugin = function(t) {
                        if (t === xo) {
                            throw new Error("Cannot de-register base plugin.")
                        }
                        if (Co(t)) {
                            delete No[t];
                            delete Eo.prototype[t]
                        }
                    };
                    e.getPlugins = function() {
                        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(No);
                        var n = void 0;
                        t.forEach(function(e) {
                            var t = ko(e);
                            if (t) {
                                n = n || {};
                                n[e] = t
                            }
                        });
                        return n
                    };
                    e.getPluginVersion = function(t) {
                        var n = ko(t);
                        return n && n.VERSION || ""
                    };
                    return e
                }();
                _o.getPlugin = ko;
                _o.BASE_PLUGIN_NAME = xo;
                _o.registerPlugin(xo, _o);
                Eo.prototype.usingPlugin = function(e) {
                    return !!this[To] && this[To][e] === true
                };
                Eo.prototype.hasPlugin = function(e) {
                    return !!Co(e)
                };
                var Do = function(t, n) {
                    if (typeof n !== "function" && n !== null) {
                        throw new TypeError("Super expression must either be null or a function, not " + (typeof n === "undefined" ? "undefined" : B(n)))
                    }
                    t.prototype = Object.create(n && n.prototype, {
                        constructor: {
                            value: t,
                            enumerable: false,
                            writable: true,
                            configurable: true
                        }
                    });
                    if (n) {
                        t.super_ = n
                    }
                };
                var Po = function(t) {
                    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    var r = function() {
                        t.apply(this, arguments)
                    };
                    var i = {};
                    if ((typeof n === "undefined" ? "undefined" : B(n)) === "object") {
                        if (n.constructor !== Object.prototype.constructor) {
                            r = n.constructor
                        }
                        i = n
                    } else if (typeof n === "function") {
                        r = n
                    }
                    Do(r, t);
                    for (var s in i) {
                        if (i.hasOwnProperty(s)) {
                            r.prototype[s] = i[s]
                        }
                    }
                    return r
                };
                if (typeof HTMLVideoElement === "undefined" && ot()) {
                    h.createElement("video");
                    h.createElement("audio");
                    h.createElement("track")
                }
                Ho.hooks_ = {};
                Ho.hooks = function(e, t) {
                    Ho.hooks_[e] = Ho.hooks_[e] || [];
                    if (t) {
                        Ho.hooks_[e] = Ho.hooks_[e].concat(t)
                    }
                    return Ho.hooks_[e]
                };
                Ho.hook = function(e, t) {
                    Ho.hooks(e, t)
                };
                Ho.hookOnce = function(e, t) {
                    Ho.hooks(e, [].concat(t).map(function(t) {
                        var n = function r() {
                            Ho.removeHook(e, r);
                            t.apply(undefined, arguments)
                        };
                        return n
                    }))
                };
                Ho.removeHook = function(e, t) {
                    var n = Ho.hooks(e).indexOf(t);
                    if (n <= -1) {
                        return false
                    }
                    Ho.hooks_[e] = Ho.hooks_[e].slice();
                    Ho.hooks_[e].splice(n, 1);
                    return true
                };
                if (o.VIDEOJS_NO_DYNAMIC_STYLE !== true && ot()) {
                    var Bo = _t(".vjs-styles-defaults");
                    if (!Bo) {
                        Bo = nn("vjs-styles-defaults");
                        var jo = _t("head");
                        if (jo) {
                            jo.insertBefore(Bo, jo.firstChild)
                        }
                        rn(Bo, "\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    ")
                    }
                }
                tn(1, Ho);
                Ho.VERSION = t;
                Ho.options = Eo.prototype.options_;
                Ho.getPlayers = function() {
                    return Eo.players
                };
                Ho.players = Eo.players;
                Ho.getComponent = Sn.getComponent;
                Ho.registerComponent = function(e, t) {
                    if (_i.isTech(t)) {
                        Y.warn("The " + e + " tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)")
                    }
                    Sn.registerComponent.call(Sn, e, t)
                };
                Ho.getTech = _i.getTech;
                Ho.registerTech = _i.registerTech;
                Ho.use = Pi;
                Ho.browser = H;
                Ho.TOUCH_ENABLED = D;
                Ho.extend = Po;
                Ho.mergeOptions = En;
                Ho.bind = sn;
                Ho.registerPlugin = _o.registerPlugin;
                Ho.plugin = function(e, t) {
                    Y.warn("videojs.plugin() is deprecated; use videojs.registerPlugin() instead");
                    return _o.registerPlugin(e, t)
                };
                Ho.getPlugins = _o.getPlugins;
                Ho.getPlugin = _o.getPlugin;
                Ho.getPluginVersion = _o.getPluginVersion;
                Ho.addLanguage = function(e, t) {
                    var n;
                    e = ("" + e).toLowerCase();
                    Ho.options.languages = En(Ho.options.languages, (n = {},
                        n[e] = t,
                        n));
                    return Ho.options.languages[e]
                };
                Ho.log = Y;
                Ho.createTimeRange = Ho.createTimeRanges = Cn;
                Ho.formatTime = is;
                Ho.parseUrl = sr;
                Ho.isCrossOrigin = ar;
                Ho.EventTarget = un;
                Ho.on = $t;
                Ho.one = Qt;
                Ho.off = Jt;
                Ho.trigger = Kt;
                Ho.xhr = Cr;
                Ho.TextTrack = Br;
                Ho.AudioTrack = jr;
                Ho.VideoTrack = Fr;
                ["isEl", "isTextNode", "createEl", "hasClass", "addClass", "removeClass", "toggleClass", "setAttributes", "getAttributes", "emptyEl", "appendContent", "insertContent"].forEach(function(e) {
                    Ho[e] = function() {
                        Y.warn("videojs." + e + "() is deprecated; use videojs.dom." + e + "() instead");
                        return Pt[e].apply(null, arguments)
                    }
                });
                Ho.computedStyle = tt;
                Ho.dom = Pt;
                Ho.url = fr;
                return Ho
            })
        }).call(t, function() {
            return this
        }())
    },
    779: function(e, t, n) {
        var r, i, s;
        var o;
        var o;
        (function(n) {
            var u = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(e) {
                    return typeof e
                } :
                function(e) {
                    return e && typeof Symbol === "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                };
            (function(o) {
                if ((false ? "undefined" : u(t)) === "object" && typeof e !== "undefined") {
                    e.exports = o()
                } else if (true) {
                    !(i = [],
                        r = o,
                        s = typeof r === "function" ? r.apply(t, i) : r,
                        s !== undefined && (e.exports = s))
                } else {
                    var a;
                    if (typeof window !== "undefined") {
                        a = window
                    } else if (typeof n !== "undefined") {
                        a = n
                    } else if (typeof self !== "undefined") {
                        a = self
                    } else {
                        a = this
                    }
                    a.videojsContribHls = o()
                }
            })(function() {
                var e, t, r;
                return function i(e, t, n) {
                    function r(u, a) {
                        if (!t[u]) {
                            if (!e[u]) {
                                var f = typeof o == "function" && o;
                                if (!a && f)
                                    return o(u, !0);
                                if (s)
                                    return s(u, !0);
                                var l = new Error("Cannot find module '" + u + "'");
                                throw l.code = "MODULE_NOT_FOUND",
                                    l
                            }
                            var c = t[u] = {
                                exports: {}
                            };
                            e[u][0].call(c.exports, function(t) {
                                var n = e[u][1][t];
                                return r(n ? n : t)
                            }, c, c.exports, i, e, t, n)
                        }
                        return t[u].exports
                    }
                    var s = typeof o == "function" && o;
                    for (var u = 0; u < n.length; u++) {
                        r(n[u])
                    }
                    return r
                }({
                    1: [function(e, t, n) {
                        "use strict";

                        function i(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            function e(e, t) {
                                var n = [];
                                var r = true;
                                var i = false;
                                var s = undefined;
                                try {
                                    for (var o = e[Symbol.iterator](), u; !(r = (u = o.next()).done); r = true) {
                                        n.push(u.value);
                                        if (t && n.length === t)
                                            break
                                    }
                                } catch (a) {
                                    i = true;
                                    s = a
                                } finally {
                                    try {
                                        if (!r && o["return"])
                                            o["return"]()
                                    } finally {
                                        if (i)
                                            throw s
                                    }
                                }
                                return n
                            }
                            return function(t, n) {
                                if (Array.isArray(t)) {
                                    return t
                                } else if (Symbol.iterator in Object(t)) {
                                    return e(t, n)
                                } else {
                                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                                }
                            }
                        }();
                        var s = e("global/window");
                        var o = i(s);
                        var u = function(t, n) {
                            var r = t.cues;
                            for (var i = 0; i < r.length; i++) {
                                var s = r[i];
                                if (n >= s.adStartTime && n <= s.adEndTime) {
                                    return s
                                }
                            }
                            return null
                        };
                        var a = function(t, n) {
                            var i = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
                            if (!t.segments) {
                                return
                            }
                            var s = i;
                            var a = undefined;
                            for (var f = 0; f < t.segments.length; f++) {
                                var l = t.segments[f];
                                if (!a) {
                                    a = u(n, s + l.duration / 2)
                                }
                                if (a) {
                                    if ("cueIn" in l) {
                                        a.endTime = s;
                                        a.adEndTime = s;
                                        s += l.duration;
                                        a = null;
                                        continue
                                    }
                                    if (s < a.endTime) {
                                        s += l.duration;
                                        continue
                                    }
                                    a.endTime += l.duration
                                } else {
                                    if ("cueOut" in l) {
                                        a = new o["default"].VTTCue(s, s + l.duration, l.cueOut);
                                        a.adStartTime = s;
                                        a.adEndTime = s + parseFloat(l.cueOut);
                                        n.addCue(a)
                                    }
                                    if ("cueOutCont" in l) {
                                        var c = undefined;
                                        var h = undefined;
                                        var p = l.cueOutCont.split("/").map(parseFloat);
                                        var d = r(p, 2);
                                        c = d[0];
                                        h = d[1];
                                        a = new o["default"].VTTCue(s, s + l.duration, "");
                                        a.adStartTime = s - c;
                                        a.adEndTime = a.adStartTime + h;
                                        n.addCue(a)
                                    }
                                }
                                s += l.duration
                            }
                        };
                        n["default"] = {
                            updateAdCues: a,
                            findAdCue: u
                        };
                        t.exports = n["default"]
                    }, {
                        "global/window": 32
                    }],
                    2: [function(e, t, n) {
                        "use strict";
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function(t, n) {
                            return t.start(n) + "-" + t.end(n)
                        };
                        var i = function(t, n) {
                            var r = t.toString(16);
                            return "00".substring(0, 2 - r.length) + r + (n % 2 ? " " : "")
                        };
                        var s = function(t) {
                            if (t >= 32 && t < 126) {
                                return String.fromCharCode(t)
                            }
                            return "."
                        };
                        var o = function(t) {
                            var n = {};
                            Object.keys(t).forEach(function(e) {
                                var r = t[e];
                                if (ArrayBuffer.isView(r)) {
                                    n[e] = {
                                        bytes: r.buffer,
                                        byteOffset: r.byteOffset,
                                        byteLength: r.byteLength
                                    }
                                } else {
                                    n[e] = r
                                }
                            });
                            return n
                        };
                        var u = function(t) {
                            var n = t.byterange || {
                                length: Infinity,
                                offset: 0
                            };
                            return [n.length, n.offset, t.resolvedUri].join(",")
                        };
                        var a = {
                            hexDump: function(t) {
                                var n = Array.prototype.slice.call(t);
                                var r = 16;
                                var o = "";
                                var u = undefined;
                                var a = undefined;
                                for (var f = 0; f < n.length / r; f++) {
                                    u = n.slice(f * r, f * r + r).map(i).join("");
                                    a = n.slice(f * r, f * r + r).map(s).join("");
                                    o += u + " " + a + "\n"
                                }
                                return o
                            },
                            tagDump: function(t) {
                                return a.hexDump(t.bytes)
                            },
                            textRanges: function(t) {
                                var n = "";
                                var i = undefined;
                                for (i = 0; i < t.length; i++) {
                                    n += r(t, i) + " "
                                }
                                return n
                            },
                            createTransferableMessage: o,
                            initSegmentId: u
                        };
                        n["default"] = a;
                        t.exports = n["default"]
                    }, {}],
                    3: [function(e, t, n) {
                        "use strict";
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        n["default"] = {
                            GOAL_BUFFER_LENGTH: 30,
                            MAX_GOAL_BUFFER_LENGTH: 60,
                            GOAL_BUFFER_LENGTH_RATE: 1,
                            BANDWIDTH_VARIANCE: 1.2,
                            BUFFER_LOW_WATER_LINE: 0,
                            MAX_BUFFER_LOW_WATER_LINE: 30,
                            BUFFER_LOW_WATER_LINE_RATE: 1
                        };
                        t.exports = n["default"]
                    }, {}],
                    4: [function(e, t, n) {
                        "use strict";

                        function r(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var i = e("global/window");
                        var s = r(i);
                        var o = e("aes-decrypter");
                        var u = e("./bin-utils");
                        var a = function(t) {
                            t.onmessage = function(e) {
                                var t = e.data;
                                var n = new Uint8Array(t.encrypted.bytes, t.encrypted.byteOffset, t.encrypted.byteLength);
                                var r = new Uint32Array(t.key.bytes, t.key.byteOffset, t.key.byteLength / 4);
                                var i = new Uint32Array(t.iv.bytes, t.iv.byteOffset, t.iv.byteLength / 4);
                                new o.Decrypter(n, r, i, function(e, n) {
                                    s["default"].postMessage((0,
                                        u.createTransferableMessage)({
                                        source: t.source,
                                        decrypted: n
                                    }), [n.buffer])
                                })
                            }
                        };
                        n["default"] = function(e) {
                            return new a(e)
                        };
                        t.exports = n["default"]
                    }, {
                        "./bin-utils": 2,
                        "aes-decrypter": 25,
                        "global/window": 32
                    }],
                    5: [function(e, t, r) {
                        (function(t) {
                            "use strict";

                            function s(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function o(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }

                            function a(e, t) {
                                if (typeof t !== "function" && t !== null) {
                                    throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                                }
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: false,
                                        writable: true,
                                        configurable: true
                                    }
                                });
                                if (t)
                                    Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var n = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var i = function(t, n, r) {
                                var i = true;
                                e: while (i) {
                                    var s = t,
                                        o = n,
                                        u = r;
                                    i = false;
                                    if (s === null)
                                        s = Function.prototype;
                                    var a = Object.getOwnPropertyDescriptor(s, o);
                                    if (a === undefined) {
                                        var f = Object.getPrototypeOf(s);
                                        if (f === null) {
                                            return undefined
                                        } else {
                                            t = f;
                                            n = o;
                                            r = u;
                                            i = true;
                                            a = f = undefined;
                                            continue e
                                        }
                                    } else if ("value" in a) {
                                        return a.value
                                    } else {
                                        var l = a.get;
                                        if (l === undefined) {
                                            return undefined
                                        }
                                        return l.call(u)
                                    }
                                }
                            };
                            var f = e("./playlist-loader");
                            var l = s(f);
                            var c = e("./playlist.js");
                            var h = e("./segment-loader");
                            var p = s(h);
                            var d = e("./vtt-segment-loader");
                            var v = s(d);
                            var m = e("./ranges");
                            var g = s(m);
                            var y = typeof window !== "undefined" ? window["videojs"] : typeof t !== "undefined" ? t["videojs"] : null;
                            var b = s(y);
                            var w = e("./ad-cue-tags");
                            var E = s(w);
                            var S = e("./sync-controller");
                            var x = s(S);
                            var T = e("videojs-contrib-media-sources/es5/codec-utils");
                            var N = e("webworkify");
                            var C = s(N);
                            var k = e("./decrypter-worker");
                            var L = s(k);
                            var A = e("./config");
                            var O = s(A);
                            var M = e("./util/codecs.js");
                            var _ = e("./media-groups");
                            var D = 60 * 2;
                            var P = undefined;
                            var H = {
                                videoCodec: "avc1",
                                videoObjectTypeIndicator: ".4d400d",
                                audioProfile: "2"
                            };
                            var B = ["mediaRequests", "mediaRequestsAborted", "mediaRequestsTimedout", "mediaRequestsErrored", "mediaTransferDuration", "mediaBytesTransferred"];
                            var j = function(t) {
                                return this.audioSegmentLoader_[t] + this.mainSegmentLoader_[t]
                            };
                            var F = function(t) {
                                return t.replace(/avc1\.(\d+)\.(\d+)/i, function(e) {
                                    return (0,
                                        T.translateLegacyCodecs)([e])[0]
                                })
                            };
                            r.mapLegacyAvcCodecs_ = F;
                            var I = function(t, n, r) {
                                return t + "/" + n + '; codecs="' + r.filter(function(e) {
                                    return !!e
                                }).join(", ") + '"'
                            };
                            var q = function(t) {
                                if (t.segments && t.segments.length && t.segments[0].map) {
                                    return "mp4"
                                }
                                return "mp2t"
                            };
                            var R = function(t) {
                                var n = t.attributes || {};
                                if (n.CODECS) {
                                    return (0,
                                        M.parseCodecs)(n.CODECS)
                                }
                                return H
                            };
                            var U = function(t, n) {
                                var r = q(n);
                                var i = R(n);
                                var s = n.attributes || {};
                                var o = true;
                                var u = false;
                                if (!n) {
                                    return []
                                }
                                if (t.mediaGroups.AUDIO && s.AUDIO) {
                                    var a = t.mediaGroups.AUDIO[s.AUDIO];
                                    if (a) {
                                        u = true;
                                        o = false;
                                        for (var f in a) {
                                            if (!a[f].uri) {
                                                o = true;
                                                break
                                            }
                                        }
                                    }
                                }
                                if (u && !i.audioProfile) {
                                    b["default"].log.warn("Multiple audio tracks present but no audio codec string is specified. " + "Attempting to use the default audio codec (mp4a.40.2)");
                                    i.audioProfile = H.audioProfile
                                }
                                var l = {};
                                if (i.videoCodec) {
                                    l.video = "" + i.videoCodec + i.videoObjectTypeIndicator
                                }
                                if (i.audioProfile) {
                                    l.audio = "mp4a.40." + i.audioProfile
                                }
                                var c = I("audio", r, [l.audio]);
                                var h = I("video", r, [l.video]);
                                var p = I("video", r, [l.video, l.audio]);
                                if (u) {
                                    if (!o && l.video) {
                                        return [h, c]
                                    }
                                    return [p, c]
                                }
                                if (!l.video) {
                                    return [c]
                                }
                                return [p]
                            };
                            r.mimeTypesForPlaylist_ = U;
                            var z = function(e) {
                                function t(e) {
                                    var n = this;
                                    o(this, t);
                                    i(Object.getPrototypeOf(t.prototype), "constructor", this).call(this);
                                    var r = e.url;
                                    var s = e.withCredentials;
                                    var u = e.mode;
                                    var a = e.tech;
                                    var f = e.bandwidth;
                                    var c = e.externHls;
                                    var h = e.useCueTags;
                                    var d = e.blacklistDuration;
                                    var m = e.enableLowInitialPlaylist;
                                    if (!r) {
                                        throw new Error("A non-empty playlist URL is required")
                                    }
                                    P = c;
                                    this.withCredentials = s;
                                    this.tech_ = a;
                                    this.hls_ = a.hls;
                                    this.mode_ = u;
                                    this.useCueTags_ = h;
                                    this.blacklistDuration = d;
                                    this.enableLowInitialPlaylist = m;
                                    if (this.useCueTags_) {
                                        this.cueTagsTrack_ = this.tech_.addTextTrack("metadata", "ad-cues");
                                        this.cueTagsTrack_.inBandMetadataTrackDispatchType = ""
                                    }
                                    this.requestOptions_ = {
                                        withCredentials: this.withCredentials,
                                        timeout: null
                                    };
                                    this.mediaTypes_ = (0,
                                        _.createMediaTypes)();
                                    this.mediaSource = new b["default"].MediaSource({
                                        mode: u
                                    });
                                    this.mediaSource.addEventListener("sourceopen", this.handleSourceOpen_.bind(this));
                                    this.seekable_ = b["default"].createTimeRanges();
                                    this.hasPlayed_ = function() {
                                        return false
                                    };
                                    this.syncController_ = new x["default"](e);
                                    this.segmentMetadataTrack_ = a.addRemoteTextTrack({
                                        kind: "metadata",
                                        label: "segment-metadata"
                                    }, false).track;
                                    this.decrypter_ = (0,
                                        C["default"])(L["default"]);
                                    var g = {
                                        hls: this.hls_,
                                        mediaSource: this.mediaSource,
                                        currentTime: this.tech_.currentTime.bind(this.tech_),
                                        seekable: function() {
                                            return n.seekable()
                                        },
                                        seeking: function() {
                                            return n.tech_.seeking()
                                        },
                                        duration: function() {
                                            return n.mediaSource.duration
                                        },
                                        hasPlayed: function() {
                                            return n.hasPlayed_()
                                        },
                                        goalBufferLength: function() {
                                            return n.goalBufferLength()
                                        },
                                        bandwidth: f,
                                        syncController: this.syncController_,
                                        decrypter: this.decrypter_
                                    };
                                    this.masterPlaylistLoader_ = new l["default"](r, this.hls_, this.withCredentials);
                                    this.setupMasterPlaylistLoaderListeners_();
                                    this.mainSegmentLoader_ = new p["default"](b["default"].mergeOptions(g, {
                                        segmentMetadataTrack: this.segmentMetadataTrack_,
                                        loaderType: "main"
                                    }), e);
                                    this.audioSegmentLoader_ = new p["default"](b["default"].mergeOptions(g, {
                                        loaderType: "audio"
                                    }), e);
                                    this.subtitleSegmentLoader_ = new v["default"](b["default"].mergeOptions(g, {
                                        loaderType: "vtt"
                                    }), e);
                                    this.setupSegmentLoaderListeners_();
                                    B.forEach(function(e) {
                                        n[e + "_"] = j.bind(n, e)
                                    });
                                    this.masterPlaylistLoader_.load()
                                }
                                a(t, e);
                                n(t, [{
                                    key: "setupMasterPlaylistLoaderListeners_",
                                    value: function() {
                                        var t = this;
                                        this.masterPlaylistLoader_.on("loadedmetadata", function() {
                                            var e = t.masterPlaylistLoader_.media();
                                            var n = t.masterPlaylistLoader_.targetDuration * 1.5 * 1e3;
                                            if ((0,
                                                    c.isLowestEnabledRendition)(t.masterPlaylistLoader_.master, t.masterPlaylistLoader_.media())) {
                                                t.requestOptions_.timeout = 0
                                            } else {
                                                t.requestOptions_.timeout = n
                                            }
                                            if (e.endList && t.tech_.preload() !== "none") {
                                                t.mainSegmentLoader_.playlist(e, t.requestOptions_);
                                                t.mainSegmentLoader_.load()
                                            }
                                            (0,
                                                _.setupMediaGroups)({
                                                segmentLoaders: {
                                                    AUDIO: t.audioSegmentLoader_,
                                                    SUBTITLES: t.subtitleSegmentLoader_,
                                                    main: t.mainSegmentLoader_
                                                },
                                                tech: t.tech_,
                                                requestOptions: t.requestOptions_,
                                                masterPlaylistLoader: t.masterPlaylistLoader_,
                                                mode: t.mode_,
                                                hls: t.hls_,
                                                master: t.master(),
                                                mediaTypes: t.mediaTypes_,
                                                blacklistCurrentPlaylist: t.blacklistCurrentPlaylist.bind(t)
                                            });
                                            t.triggerPresenceUsage_(t.master(), e);
                                            try {
                                                t.setupSourceBuffers_()
                                            } catch (r) {
                                                b["default"].log.warn("Failed to create SourceBuffers", r);
                                                return t.mediaSource.endOfStream("decode")
                                            }
                                            t.setupFirstPlay();
                                            t.trigger("selectedinitialmedia")
                                        });
                                        this.masterPlaylistLoader_.on("loadedplaylist", function() {
                                            var e = t.masterPlaylistLoader_.media();
                                            if (!e) {
                                                var n = undefined;
                                                if (t.enableLowInitialPlaylist) {
                                                    n = t.selectInitialPlaylist()
                                                }
                                                if (!n) {
                                                    n = t.selectPlaylist()
                                                }
                                                t.initialMedia_ = n;
                                                t.masterPlaylistLoader_.media(t.initialMedia_);
                                                return
                                            }
                                            if (t.useCueTags_) {
                                                t.updateAdCues_(e)
                                            }
                                            t.mainSegmentLoader_.playlist(e, t.requestOptions_);
                                            t.updateDuration();
                                            if (!t.tech_.paused()) {
                                                t.mainSegmentLoader_.load()
                                            }
                                            if (!e.endList) {
                                                (function() {
                                                    var e = function() {
                                                        var n = t.seekable();
                                                        if (n.length !== 0) {
                                                            t.mediaSource.addSeekableRange_(n.start(0), n.end(0))
                                                        }
                                                    };
                                                    if (t.duration() !== Infinity) {
                                                        (function() {
                                                            var n = function r() {
                                                                if (t.duration() === Infinity) {
                                                                    e()
                                                                } else {
                                                                    t.tech_.one("durationchange", r)
                                                                }
                                                            };
                                                            t.tech_.one("durationchange", n)
                                                        })()
                                                    } else {
                                                        e()
                                                    }
                                                })()
                                            }
                                        });
                                        this.masterPlaylistLoader_.on("error", function() {
                                            t.blacklistCurrentPlaylist(t.masterPlaylistLoader_.error)
                                        });
                                        this.masterPlaylistLoader_.on("mediachanging", function() {
                                            t.mainSegmentLoader_.abort();
                                            t.mainSegmentLoader_.pause()
                                        });
                                        this.masterPlaylistLoader_.on("mediachange", function() {
                                            var e = t.masterPlaylistLoader_.media();
                                            var n = t.masterPlaylistLoader_.targetDuration * 1.5 * 1e3;
                                            if ((0,
                                                    c.isLowestEnabledRendition)(t.masterPlaylistLoader_.master, t.masterPlaylistLoader_.media())) {
                                                t.requestOptions_.timeout = 0
                                            } else {
                                                t.requestOptions_.timeout = n
                                            }
                                            t.mainSegmentLoader_.playlist(e, t.requestOptions_);
                                            t.mainSegmentLoader_.load();
                                            t.tech_.trigger({
                                                type: "mediachange",
                                                bubbles: true
                                            })
                                        });
                                        this.masterPlaylistLoader_.on("playlistunchanged", function() {
                                            var e = t.masterPlaylistLoader_.media();
                                            var n = t.stuckAtPlaylistEnd_(e);
                                            if (n) {
                                                t.blacklistCurrentPlaylist({
                                                    message: "Playlist no longer updating."
                                                });
                                                t.tech_.trigger("playliststuck")
                                            }
                                        });
                                        this.masterPlaylistLoader_.on("renditiondisabled", function() {
                                            t.tech_.trigger({
                                                type: "usage",
                                                name: "hls-rendition-disabled"
                                            })
                                        });
                                        this.masterPlaylistLoader_.on("renditionenabled", function() {
                                            t.tech_.trigger({
                                                type: "usage",
                                                name: "hls-rendition-enabled"
                                            })
                                        })
                                    }
                                }, {
                                    key: "triggerPresenceUsage_",
                                    value: function(t, n) {
                                        var r = t.mediaGroups || {};
                                        var i = true;
                                        var s = Object.keys(r.AUDIO);
                                        for (var o in r.AUDIO) {
                                            for (var u in r.AUDIO[o]) {
                                                var a = r.AUDIO[o][u];
                                                if (!a.uri) {
                                                    i = false
                                                }
                                            }
                                        }
                                        if (i) {
                                            this.tech_.trigger({
                                                type: "usage",
                                                name: "hls-demuxed"
                                            })
                                        }
                                        if (Object.keys(r.SUBTITLES).length) {
                                            this.tech_.trigger({
                                                type: "usage",
                                                name: "hls-webvtt"
                                            })
                                        }
                                        if (P.Playlist.isAes(n)) {
                                            this.tech_.trigger({
                                                type: "usage",
                                                name: "hls-aes"
                                            })
                                        }
                                        if (P.Playlist.isFmp4(n)) {
                                            this.tech_.trigger({
                                                type: "usage",
                                                name: "hls-fmp4"
                                            })
                                        }
                                        if (s.length && Object.keys(r.AUDIO[s[0]]).length > 1) {
                                            this.tech_.trigger({
                                                type: "usage",
                                                name: "hls-alternate-audio"
                                            })
                                        }
                                        if (this.useCueTags_) {
                                            this.tech_.trigger({
                                                type: "usage",
                                                name: "hls-playlist-cue-tags"
                                            })
                                        }
                                    }
                                }, {
                                    key: "setupSegmentLoaderListeners_",
                                    value: function() {
                                        var t = this;
                                        this.mainSegmentLoader_.on("bandwidthupdate", function() {
                                            var e = t.selectPlaylist();
                                            var n = t.masterPlaylistLoader_.media();
                                            var r = t.tech_.buffered();
                                            var i = r.length ? r.end(r.length - 1) - t.tech_.currentTime() : 0;
                                            var s = t.bufferLowWaterLine();
                                            if (!n.endList || t.duration() < O["default"].MAX_BUFFER_LOW_WATER_LINE || e.attributes.BANDWIDTH < n.attributes.BANDWIDTH || i >= s) {
                                                t.masterPlaylistLoader_.media(e)
                                            }
                                            t.tech_.trigger("bandwidthupdate")
                                        });
                                        this.mainSegmentLoader_.on("progress", function() {
                                            t.trigger("progress")
                                        });
                                        this.mainSegmentLoader_.on("error", function() {
                                            t.blacklistCurrentPlaylist(t.mainSegmentLoader_.error())
                                        });
                                        this.mainSegmentLoader_.on("syncinfoupdate", function() {
                                            t.onSyncInfoUpdate_()
                                        });
                                        this.mainSegmentLoader_.on("timestampoffset", function() {
                                            t.tech_.trigger({
                                                type: "usage",
                                                name: "hls-timestamp-offset"
                                            })
                                        });
                                        this.audioSegmentLoader_.on("syncinfoupdate", function() {
                                            t.onSyncInfoUpdate_()
                                        });
                                        this.mainSegmentLoader_.on("ended", function() {
                                            t.onEndOfStream()
                                        });
                                        this.mainSegmentLoader_.on("earlyabort", function() {
                                            t.blacklistCurrentPlaylist({
                                                message: "Aborted early because there isn't enough bandwidth to complete the " + "request without rebuffering."
                                            }, D)
                                        });
                                        this.mainSegmentLoader_.on("reseteverything", function() {
                                            t.tech_.trigger("hls-reset")
                                        });
                                        this.mainSegmentLoader_.on("segmenttimemapping", function(e) {
                                            t.tech_.trigger({
                                                type: "hls-segment-time-mapping",
                                                mapping: e.mapping
                                            })
                                        });
                                        this.audioSegmentLoader_.on("ended", function() {
                                            t.onEndOfStream()
                                        })
                                    }
                                }, {
                                    key: "mediaSecondsLoaded_",
                                    value: function() {
                                        return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded)
                                    }
                                }, {
                                    key: "load",
                                    value: function() {
                                        this.mainSegmentLoader_.load();
                                        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                            this.audioSegmentLoader_.load()
                                        }
                                        if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                                            this.subtitleSegmentLoader_.load()
                                        }
                                    }
                                }, {
                                    key: "fastQualityChange_",
                                    value: function() {
                                        var t = this.selectPlaylist();
                                        if (t !== this.masterPlaylistLoader_.media()) {
                                            this.masterPlaylistLoader_.media(t);
                                            this.mainSegmentLoader_.resetLoader()
                                        }
                                    }
                                }, {
                                    key: "play",
                                    value: function() {
                                        if (this.setupFirstPlay()) {
                                            return
                                        }
                                        if (this.tech_.ended()) {
                                            this.tech_.setCurrentTime(0)
                                        }
                                        if (this.hasPlayed_()) {
                                            this.load()
                                        }
                                        var t = this.tech_.seekable();
                                        if (this.tech_.duration() === Infinity) {
                                            if (this.tech_.currentTime() < t.start(0)) {
                                                return this.tech_.setCurrentTime(t.end(t.length - 1))
                                            }
                                        }
                                    }
                                }, {
                                    key: "setupFirstPlay",
                                    value: function() {
                                        var t = this;
                                        var n = this.masterPlaylistLoader_.media();
                                        if (!n || this.tech_.paused() || this.hasPlayed_()) {
                                            return false
                                        }
                                        if (!n.endList) {
                                            var r = function() {
                                                var e = t.seekable();
                                                if (!e.length) {
                                                    return {
                                                        v: false
                                                    }
                                                }
                                                if (b["default"].browser.IE_VERSION && t.mode_ === "html5" && t.tech_.readyState() === 0) {
                                                    t.tech_.one("loadedmetadata", function() {
                                                        t.trigger("firstplay");
                                                        t.tech_.setCurrentTime(e.end(0));
                                                        t.hasPlayed_ = function() {
                                                            return true
                                                        }
                                                    });
                                                    return {
                                                        v: false
                                                    }
                                                }
                                                t.trigger("firstplay");
                                                t.tech_.setCurrentTime(e.end(0))
                                            }();
                                            if ((typeof r === "undefined" ? "undefined" : u(r)) === "object")
                                                return r.v
                                        }
                                        this.hasPlayed_ = function() {
                                            return true
                                        };
                                        this.load();
                                        return true
                                    }
                                }, {
                                    key: "handleSourceOpen_",
                                    value: function() {
                                        try {
                                            this.setupSourceBuffers_()
                                        } catch (t) {
                                            b["default"].log.warn("Failed to create Source Buffers", t);
                                            return this.mediaSource.endOfStream("decode")
                                        }
                                        if (this.tech_.autoplay()) {
                                            this.tech_.play()
                                        }
                                        this.trigger("sourceopen")
                                    }
                                }, {
                                    key: "onEndOfStream",
                                    value: function() {
                                        var t = this.mainSegmentLoader_.ended_;
                                        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                            t = t && this.audioSegmentLoader_.ended_
                                        }
                                        if (t) {
                                            this.mediaSource.endOfStream()
                                        }
                                    }
                                }, {
                                    key: "stuckAtPlaylistEnd_",
                                    value: function(t) {
                                        var n = this.seekable();
                                        if (!n.length) {
                                            return false
                                        }
                                        var r = this.syncController_.getExpiredTime(t, this.mediaSource.duration);
                                        if (r === null) {
                                            return false
                                        }
                                        var i = P.Playlist.playlistEnd(t, r);
                                        var s = this.tech_.currentTime();
                                        var o = this.tech_.buffered();
                                        if (!o.length) {
                                            return i - s <= g["default"].SAFE_TIME_DELTA
                                        }
                                        var u = o.end(o.length - 1);
                                        return u - s <= g["default"].SAFE_TIME_DELTA && i - u <= g["default"].SAFE_TIME_DELTA
                                    }
                                }, {
                                    key: "blacklistCurrentPlaylist",
                                    value: function(t, n) {
                                        if (t === undefined)
                                            t = {};
                                        var r = undefined;
                                        var i = undefined;
                                        r = t.playlist || this.masterPlaylistLoader_.media();
                                        n = n || t.blacklistDuration || this.blacklistDuration;
                                        if (!r) {
                                            this.error = t;
                                            try {
                                                return this.mediaSource.endOfStream("network")
                                            } catch (s) {
                                                return this.trigger("error")
                                            }
                                        }
                                        var o = this.masterPlaylistLoader_.master.playlists.filter(c.isEnabled).length === 1;
                                        if (o) {
                                            b["default"].log.warn("Problem encountered with the current " + "HLS playlist. Trying again since it is the final playlist.");
                                            this.tech_.trigger("retryplaylist");
                                            return this.masterPlaylistLoader_.load(o)
                                        }
                                        r.excludeUntil = Date.now() + n * 1e3;
                                        this.tech_.trigger("blacklistplaylist");
                                        this.tech_.trigger({
                                            type: "usage",
                                            name: "hls-rendition-blacklisted"
                                        });
                                        i = this.selectPlaylist();
                                        b["default"].log.warn("Problem encountered with the current HLS playlist." + (t.message ? " " + t.message : "") + " Switching to another playlist.");
                                        return this.masterPlaylistLoader_.media(i)
                                    }
                                }, {
                                    key: "pauseLoading",
                                    value: function() {
                                        this.mainSegmentLoader_.pause();
                                        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                            this.audioSegmentLoader_.pause()
                                        }
                                        if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                                            this.subtitleSegmentLoader_.pause()
                                        }
                                    }
                                }, {
                                    key: "setCurrentTime",
                                    value: function(t) {
                                        var n = g["default"].findRange(this.tech_.buffered(), t);
                                        if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {
                                            return 0
                                        }
                                        if (!this.masterPlaylistLoader_.media().segments) {
                                            return 0
                                        }
                                        if (n && n.length && this.mode_ !== "flash") {
                                            return t
                                        }
                                        this.mainSegmentLoader_.resetEverything();
                                        this.mainSegmentLoader_.abort();
                                        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                            this.audioSegmentLoader_.resetEverything();
                                            this.audioSegmentLoader_.abort()
                                        }
                                        if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                                            this.subtitleSegmentLoader_.resetEverything();
                                            this.subtitleSegmentLoader_.abort()
                                        }
                                        this.load()
                                    }
                                }, {
                                    key: "duration",
                                    value: function() {
                                        if (!this.masterPlaylistLoader_) {
                                            return 0
                                        }
                                        if (this.mediaSource) {
                                            return this.mediaSource.duration
                                        }
                                        return P.Playlist.duration(this.masterPlaylistLoader_.media())
                                    }
                                }, {
                                    key: "seekable",
                                    value: function() {
                                        return this.seekable_
                                    }
                                }, {
                                    key: "onSyncInfoUpdate_",
                                    value: function() {
                                        var t = undefined;
                                        var n = undefined;
                                        if (!this.masterPlaylistLoader_) {
                                            return
                                        }
                                        var r = this.masterPlaylistLoader_.media();
                                        if (!r) {
                                            return
                                        }
                                        var i = this.syncController_.getExpiredTime(r, this.mediaSource.duration);
                                        if (i === null) {
                                            return
                                        }
                                        t = P.Playlist.seekable(r, i);
                                        if (t.length === 0) {
                                            return
                                        }
                                        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                            r = this.mediaTypes_.AUDIO.activePlaylistLoader.media();
                                            i = this.syncController_.getExpiredTime(r, this.mediaSource.duration);
                                            if (i === null) {
                                                return
                                            }
                                            n = P.Playlist.seekable(r, i);
                                            if (n.length === 0) {
                                                return
                                            }
                                        }
                                        if (!n) {
                                            this.seekable_ = t
                                        } else if (n.start(0) > t.end(0) || t.start(0) > n.end(0)) {
                                            this.seekable_ = t
                                        } else {
                                            this.seekable_ = b["default"].createTimeRanges([
                                                [n.start(0) > t.start(0) ? n.start(0) : t.start(0), n.end(0) < t.end(0) ? n.end(0) : t.end(0)]
                                            ])
                                        }
                                        this.tech_.trigger("seekablechanged")
                                    }
                                }, {
                                    key: "updateDuration",
                                    value: function() {
                                        var t = this;
                                        var n = this.mediaSource.duration;
                                        var r = P.Playlist.duration(this.masterPlaylistLoader_.media());
                                        var i = this.tech_.buffered();
                                        var s = function o() {
                                            t.mediaSource.duration = r;
                                            t.tech_.trigger("durationchange");
                                            t.mediaSource.removeEventListener("sourceopen", o)
                                        };
                                        if (i.length > 0) {
                                            r = Math.max(r, i.end(i.length - 1))
                                        }
                                        if (n !== r) {
                                            if (this.mediaSource.readyState !== "open") {
                                                this.mediaSource.addEventListener("sourceopen", s)
                                            } else {
                                                s()
                                            }
                                        }
                                    }
                                }, {
                                    key: "dispose",
                                    value: function() {
                                        var t = this;
                                        this.decrypter_.terminate();
                                        this.masterPlaylistLoader_.dispose();
                                        this.mainSegmentLoader_.dispose();
                                        ["AUDIO", "SUBTITLES"].forEach(function(e) {
                                            var n = t.mediaTypes_[e].groups;
                                            for (var r in n) {
                                                n[r].forEach(function(e) {
                                                    if (e.playlistLoader) {
                                                        e.playlistLoader.dispose()
                                                    }
                                                })
                                            }
                                        });
                                        this.audioSegmentLoader_.dispose();
                                        this.subtitleSegmentLoader_.dispose()
                                    }
                                }, {
                                    key: "master",
                                    value: function() {
                                        return this.masterPlaylistLoader_.master
                                    }
                                }, {
                                    key: "media",
                                    value: function() {
                                        return this.masterPlaylistLoader_.media() || this.initialMedia_
                                    }
                                }, {
                                    key: "setupSourceBuffers_",
                                    value: function() {
                                        var t = this.masterPlaylistLoader_.media();
                                        var n = undefined;
                                        if (!t || this.mediaSource.readyState !== "open") {
                                            return
                                        }
                                        n = U(this.masterPlaylistLoader_.master, t);
                                        if (n.length < 1) {
                                            this.error = "No compatible SourceBuffer configuration for the variant stream:" + t.resolvedUri;
                                            return this.mediaSource.endOfStream("decode")
                                        }
                                        this.mainSegmentLoader_.mimeType(n[0]);
                                        if (n[1]) {
                                            this.audioSegmentLoader_.mimeType(n[1])
                                        }
                                        this.excludeIncompatibleVariants_(t)
                                    }
                                }, {
                                    key: "excludeIncompatibleVariants_",
                                    value: function(t) {
                                        var n = this.masterPlaylistLoader_.master;
                                        var r = 2;
                                        var i = null;
                                        var s = undefined;
                                        if (t.attributes.CODECS) {
                                            s = (0,
                                                M.parseCodecs)(t.attributes.CODECS);
                                            i = s.videoCodec;
                                            r = s.codecCount
                                        }
                                        n.playlists.forEach(function(e) {
                                            var t = {
                                                codecCount: 2,
                                                videoCodec: null
                                            };
                                            if (e.attributes.CODECS) {
                                                var n = e.attributes.CODECS;
                                                t = (0,
                                                    M.parseCodecs)(n);
                                                if (window.MediaSource && window.MediaSource.isTypeSupported && !window.MediaSource.isTypeSupported('video/mp4; codecs="' + F(n) + '"')) {
                                                    e.excludeUntil = Infinity
                                                }
                                            }
                                            if (t.codecCount !== r) {
                                                e.excludeUntil = Infinity
                                            }
                                            if (t.videoCodec !== i) {
                                                e.excludeUntil = Infinity
                                            }
                                        })
                                    }
                                }, {
                                    key: "updateAdCues_",
                                    value: function(t) {
                                        var n = 0;
                                        var r = this.seekable();
                                        if (r.length) {
                                            n = r.start(0)
                                        }
                                        E["default"].updateAdCues(t, this.cueTagsTrack_, n)
                                    }
                                }, {
                                    key: "goalBufferLength",
                                    value: function() {
                                        var t = this.tech_.currentTime();
                                        var n = O["default"].GOAL_BUFFER_LENGTH;
                                        var r = O["default"].GOAL_BUFFER_LENGTH_RATE;
                                        var i = Math.max(n, O["default"].MAX_GOAL_BUFFER_LENGTH);
                                        return Math.min(n + t * r, i)
                                    }
                                }, {
                                    key: "bufferLowWaterLine",
                                    value: function() {
                                        var t = this.tech_.currentTime();
                                        var n = O["default"].BUFFER_LOW_WATER_LINE;
                                        var r = O["default"].BUFFER_LOW_WATER_LINE_RATE;
                                        var i = Math.max(n, O["default"].MAX_BUFFER_LOW_WATER_LINE);
                                        return Math.min(n + t * r, i)
                                    }
                                }]);
                                return t
                            }(b["default"].EventTarget);
                            r.MasterPlaylistController = z
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./ad-cue-tags": 1,
                        "./config": 3,
                        "./decrypter-worker": 4,
                        "./media-groups": 6,
                        "./playlist-loader": 9,
                        "./playlist.js": 11,
                        "./ranges": 12,
                        "./segment-loader": 16,
                        "./sync-controller": 18,
                        "./util/codecs.js": 19,
                        "./vtt-segment-loader": 20,
                        "videojs-contrib-media-sources/es5/codec-utils": 65,
                        webworkify: 76
                    }],
                    6: [function(e, t, r) {
                        (function(t) {
                            "use strict";

                            function n(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = typeof window !== "undefined" ? window["videojs"] : typeof t !== "undefined" ? t["videojs"] : null;
                            var s = n(i);
                            var o = e("./playlist-loader");
                            var u = n(o);
                            var a = function() {};
                            var f = function(t) {
                                var n = t["default"] ? "main" : "alternative";
                                if (t.characteristics && t.characteristics.indexOf("public.accessibility.describes-video") >= 0) {
                                    n = "main-desc"
                                }
                                return n
                            };
                            var l = function(t, n) {
                                t.abort();
                                t.pause();
                                if (n && n.activePlaylistLoader) {
                                    n.activePlaylistLoader.pause();
                                    n.activePlaylistLoader = null
                                }
                            };
                            r.stopLoaders = l;
                            var c = function(t, n) {
                                n.activePlaylistLoader = t;
                                t.load()
                            };
                            r.startLoaders = c;
                            var h = function(t, n) {
                                return function() {
                                    var e = n.segmentLoaders;
                                    var r = e[t];
                                    var i = e.main;
                                    var s = n.mediaTypes[t];
                                    var o = s.activeTrack();
                                    var u = s.activeGroup(o);
                                    var a = s.activePlaylistLoader;
                                    l(r, s);
                                    if (!u) {
                                        return
                                    }
                                    if (!u.playlistLoader) {
                                        if (a) {
                                            i.resetEverything()
                                        }
                                        return
                                    }
                                    r.resyncLoader();
                                    c(u.playlistLoader, s)
                                }
                            };
                            r.onGroupChanged = h;
                            var p = function(t, n) {
                                return function() {
                                    var e = n.segmentLoaders;
                                    var r = e[t];
                                    var i = e.main;
                                    var s = n.mediaTypes[t];
                                    var o = s.activeTrack();
                                    var u = s.activeGroup(o);
                                    var a = s.activePlaylistLoader;
                                    l(r, s);
                                    if (!u) {
                                        return
                                    }
                                    if (!u.playlistLoader) {
                                        i.resetEverything();
                                        return
                                    }
                                    if (a === u.playlistLoader) {
                                        c(u.playlistLoader, s);
                                        return
                                    }
                                    if (r.track) {
                                        r.track(o)
                                    }
                                    r.resetEverything();
                                    c(u.playlistLoader, s)
                                }
                            };
                            r.onTrackChanged = p;
                            var d = {
                                AUDIO: function(t, n) {
                                    return function() {
                                        var e = n.segmentLoaders[t];
                                        var r = n.mediaTypes[t];
                                        var i = n.blacklistCurrentPlaylist;
                                        l(e, r);
                                        var o = r.activeTrack();
                                        var u = r.activeGroup();
                                        var a = (u.filter(function(e) {
                                            return e["default"]
                                        })[0] || u[0]).id;
                                        var f = r.tracks[a];
                                        if (o === f) {
                                            i({
                                                message: "Problem encountered loading the default audio track."
                                            });
                                            return
                                        }
                                        s["default"].log.warn("Problem encountered loading the alternate audio track." + "Switching back to default.");
                                        for (var c in r.tracks) {
                                            r.tracks[c].enabled = r.tracks[c] === f
                                        }
                                        r.onTrackChanged()
                                    }
                                },
                                SUBTITLES: function(t, n) {
                                    return function() {
                                        var e = n.segmentLoaders[t];
                                        var r = n.mediaTypes[t];
                                        s["default"].log.warn("Problem encountered loading the subtitle track." + "Disabling subtitle track.");
                                        l(e, r);
                                        var i = r.activeTrack();
                                        if (i) {
                                            i.mode = "disabled"
                                        }
                                        r.onTrackChanged()
                                    }
                                }
                            };
                            r.onError = d;
                            var v = {
                                AUDIO: function(t, n, r) {
                                    if (!n) {
                                        return
                                    }
                                    var i = r.tech;
                                    var s = r.requestOptions;
                                    var o = r.segmentLoaders[t];
                                    n.on("loadedmetadata", function() {
                                        var e = n.media();
                                        o.playlist(e, s);
                                        if (!i.paused() || e.endList && i.preload() !== "none") {
                                            o.load()
                                        }
                                    });
                                    n.on("loadedplaylist", function() {
                                        o.playlist(n.media(), s);
                                        if (!i.paused()) {
                                            o.load()
                                        }
                                    });
                                    n.on("error", d[t](t, r))
                                },
                                SUBTITLES: function(t, n, r) {
                                    var i = r.tech;
                                    var s = r.requestOptions;
                                    var o = r.segmentLoaders[t];
                                    var u = r.mediaTypes[t];
                                    n.on("loadedmetadata", function() {
                                        var e = n.media();
                                        o.playlist(e, s);
                                        o.track(u.activeTrack());
                                        if (!i.paused() || e.endList && i.preload() !== "none") {
                                            o.load()
                                        }
                                    });
                                    n.on("loadedplaylist", function() {
                                        o.playlist(n.media(), s);
                                        if (!i.paused()) {
                                            o.load()
                                        }
                                    });
                                    n.on("error", d[t](t, r))
                                }
                            };
                            r.setupListeners = v;
                            var m = {
                                AUDIO: function(t, n) {
                                    var r = n.mode;
                                    var i = n.hls;
                                    var o = n.segmentLoaders[t];
                                    var a = n.requestOptions.withCredentials;
                                    var l = n.master.mediaGroups;
                                    var c = n.mediaTypes[t];
                                    var h = c.groups;
                                    var p = c.tracks;
                                    if (!l[t] || Object.keys(l[t]).length === 0 || r !== "html5") {
                                        l[t] = {
                                            main: {
                                                "default": {
                                                    "default": true
                                                }
                                            }
                                        }
                                    }
                                    for (var m in l[t]) {
                                        if (!h[m]) {
                                            h[m] = []
                                        }
                                        for (var g in l[t][m]) {
                                            var y = l[t][m][g];
                                            var b = undefined;
                                            if (y.resolvedUri) {
                                                b = new u["default"](y.resolvedUri, i, a)
                                            } else {
                                                b = null
                                            }
                                            y = s["default"].mergeOptions({
                                                id: g,
                                                playlistLoader: b
                                            }, y);
                                            v[t](t, y.playlistLoader, n);
                                            h[m].push(y);
                                            if (typeof p[g] === "undefined") {
                                                var w = new s["default"].AudioTrack({
                                                    id: g,
                                                    kind: f(y),
                                                    enabled: false,
                                                    language: y.language,
                                                    "default": y["default"],
                                                    label: g
                                                });
                                                p[g] = w
                                            }
                                        }
                                    }
                                    o.on("error", d[t](t, n))
                                },
                                SUBTITLES: function(t, n) {
                                    var r = n.tech;
                                    var i = n.hls;
                                    var o = n.segmentLoaders[t];
                                    var a = n.requestOptions.withCredentials;
                                    var f = n.master.mediaGroups;
                                    var l = n.mediaTypes[t];
                                    var c = l.groups;
                                    var h = l.tracks;
                                    for (var p in f[t]) {
                                        if (!c[p]) {
                                            c[p] = []
                                        }
                                        for (var m in f[t][p]) {
                                            if (f[t][p][m].forced) {
                                                continue
                                            }
                                            var g = f[t][p][m];
                                            g = s["default"].mergeOptions({
                                                id: m,
                                                playlistLoader: new u["default"](g.resolvedUri, i, a)
                                            }, g);
                                            v[t](t, g.playlistLoader, n);
                                            c[p].push(g);
                                            if (typeof h[m] === "undefined") {
                                                var y = r.addRemoteTextTrack({
                                                    id: m,
                                                    kind: "subtitles",
                                                    enabled: false,
                                                    language: g.language,
                                                    label: m
                                                }, false).track;
                                                h[m] = y
                                            }
                                        }
                                    }
                                    o.on("error", d[t](t, n))
                                },
                                "CLOSED-CAPTIONS": function(t, n) {
                                    var r = n.tech;
                                    var i = n.master.mediaGroups;
                                    var o = n.mediaTypes[t];
                                    var u = o.groups;
                                    var a = o.tracks;
                                    for (var f in i[t]) {
                                        if (!u[f]) {
                                            u[f] = []
                                        }
                                        for (var l in i[t][f]) {
                                            var c = i[t][f][l];
                                            if (!c.instreamId.match(/CC\d/)) {
                                                continue
                                            }
                                            u[f].push(s["default"].mergeOptions({
                                                id: l
                                            }, c));
                                            if (typeof a[l] === "undefined") {
                                                var h = r.addRemoteTextTrack({
                                                    id: c.instreamId,
                                                    kind: "captions",
                                                    enabled: false,
                                                    language: c.language,
                                                    label: l
                                                }, false).track;
                                                a[l] = h
                                            }
                                        }
                                    }
                                }
                            };
                            r.initialize = m;
                            var g = function(t, n) {
                                return function(e) {
                                    var r = n.masterPlaylistLoader;
                                    var i = n.mediaTypes[t].groups;
                                    var s = r.media();
                                    if (!s) {
                                        return null
                                    }
                                    var o = null;
                                    if (s.attributes[t]) {
                                        o = i[s.attributes[t]]
                                    }
                                    o = o || i.main;
                                    if (typeof e === "undefined") {
                                        return o
                                    }
                                    if (e === null) {
                                        return null
                                    }
                                    return o.filter(function(t) {
                                        return t.id === e.id
                                    })[0] || null
                                }
                            };
                            r.activeGroup = g;
                            var y = {
                                AUDIO: function(t, n) {
                                    return function() {
                                        var e = n.mediaTypes[t].tracks;
                                        for (var r in e) {
                                            if (e[r].enabled) {
                                                return e[r]
                                            }
                                        }
                                        return null
                                    }
                                },
                                SUBTITLES: function(t, n) {
                                    return function() {
                                        var e = n.mediaTypes[t].tracks;
                                        for (var r in e) {
                                            if (e[r].mode === "showing") {
                                                return e[r]
                                            }
                                        }
                                        return null
                                    }
                                }
                            };
                            r.activeTrack = y;
                            var b = function(t) {
                                ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function(e) {
                                    m[e](e, t)
                                });
                                var n = t.mediaTypes;
                                var r = t.masterPlaylistLoader;
                                var i = t.tech;
                                var s = t.hls;
                                ["AUDIO", "SUBTITLES"].forEach(function(e) {
                                    n[e].activeGroup = g(e, t);
                                    n[e].activeTrack = y[e](e, t);
                                    n[e].onGroupChanged = h(e, t);
                                    n[e].onTrackChanged = p(e, t)
                                });
                                var o = n.AUDIO.activeGroup();
                                var u = (o.filter(function(e) {
                                    return e["default"]
                                })[0] || o[0]).id;
                                n.AUDIO.tracks[u].enabled = true;
                                n.AUDIO.onTrackChanged();
                                r.on("mediachange", function() {
                                    ["AUDIO", "SUBTITLES"].forEach(function(e) {
                                        return n[e].onGroupChanged()
                                    })
                                });
                                var a = function() {
                                    n.AUDIO.onTrackChanged();
                                    i.trigger({
                                        type: "usage",
                                        name: "hls-audio-change"
                                    })
                                };
                                i.audioTracks().addEventListener("change", a);
                                i.remoteTextTracks().addEventListener("change", n.SUBTITLES.onTrackChanged);
                                s.on("dispose", function() {
                                    i.audioTracks().removeEventListener("change", a);
                                    i.remoteTextTracks().removeEventListener("change", n.SUBTITLES.onTrackChanged)
                                });
                                i.clearTracks("audio");
                                for (var f in n.AUDIO.tracks) {
                                    i.audioTracks().addTrack(n.AUDIO.tracks[f])
                                }
                            };
                            r.setupMediaGroups = b;
                            var w = function() {
                                var t = {};
                                ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function(e) {
                                    t[e] = {
                                        groups: {},
                                        tracks: {},
                                        activePlaylistLoader: null,
                                        activeGroup: a,
                                        activeTrack: a,
                                        onGroupChanged: a,
                                        onTrackChanged: a
                                    }
                                });
                                return t
                            };
                            r.createMediaTypes = w
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./playlist-loader": 9
                    }],
                    7: [function(e, t, r) {
                        (function(t) {
                            "use strict";

                            function n(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = typeof window !== "undefined" ? window["videojs"] : typeof t !== "undefined" ? t["videojs"] : null;
                            var s = n(i);
                            var o = e("./bin-utils");
                            var u = {
                                FAILURE: 2,
                                TIMEOUT: -101,
                                ABORTED: -102
                            };
                            r.REQUEST_ERRORS = u;
                            var a = function(t) {
                                var n = undefined;
                                var r = undefined;
                                r = t.offset + t.length - 1;
                                n = t.offset;
                                return "bytes=" + n + "-" + r
                            };
                            var f = function(t) {
                                var n = {};
                                if (t.byterange) {
                                    n.Range = a(t.byterange)
                                }
                                return n
                            };
                            var l = function(t) {
                                t.forEach(function(e) {
                                    e.abort()
                                })
                            };
                            var c = function(t) {
                                return {
                                    bandwidth: t.bandwidth,
                                    bytesReceived: t.bytesReceived || 0,
                                    roundTripTime: t.roundTripTime || 0
                                }
                            };
                            var h = function(t) {
                                var n = t.target;
                                var r = Date.now() - n.requestTime;
                                var i = {
                                    bandwidth: Infinity,
                                    bytesReceived: 0,
                                    roundTripTime: r || 0
                                };
                                i.bytesReceived = t.loaded;
                                i.bandwidth = Math.floor(i.bytesReceived / i.roundTripTime * 8 * 1e3);
                                return i
                            };
                            var p = function(t, n) {
                                if (n.timedout) {
                                    return {
                                        status: n.status,
                                        message: "HLS request timed-out at URL: " + n.uri,
                                        code: u.TIMEOUT,
                                        xhr: n
                                    }
                                }
                                if (n.aborted) {
                                    return {
                                        status: n.status,
                                        message: "HLS request aborted at URL: " + n.uri,
                                        code: u.ABORTED,
                                        xhr: n
                                    }
                                }
                                if (t) {
                                    return {
                                        status: n.status,
                                        message: "HLS request errored at URL: " + n.uri,
                                        code: u.FAILURE,
                                        xhr: n
                                    }
                                }
                                return null
                            };
                            var d = function(t, n) {
                                return function(e, r) {
                                    var i = r.response;
                                    var s = p(e, r);
                                    if (s) {
                                        return n(s, t)
                                    }
                                    if (i.byteLength !== 16) {
                                        return n({
                                            status: r.status,
                                            message: "Invalid HLS key at URL: " + r.uri,
                                            code: u.FAILURE,
                                            xhr: r
                                        }, t)
                                    }
                                    var o = new DataView(i);
                                    t.key.bytes = new Uint32Array([o.getUint32(0), o.getUint32(4), o.getUint32(8), o.getUint32(12)]);
                                    return n(null, t)
                                }
                            };
                            var v = function(t, n) {
                                return function(e, r) {
                                    var i = r.response;
                                    var s = p(e, r);
                                    if (s) {
                                        return n(s, t)
                                    }
                                    if (i.byteLength === 0) {
                                        return n({
                                            status: r.status,
                                            message: "Empty HLS segment content at URL: " + r.uri,
                                            code: u.FAILURE,
                                            xhr: r
                                        }, t)
                                    }
                                    t.map.bytes = new Uint8Array(r.response);
                                    return n(null, t)
                                }
                            };
                            var m = function(t, n) {
                                return function(e, r) {
                                    var i = r.response;
                                    var s = p(e, r);
                                    if (s) {
                                        return n(s, t)
                                    }
                                    if (i.byteLength === 0) {
                                        return n({
                                            status: r.status,
                                            message: "Empty HLS segment content at URL: " + r.uri,
                                            code: u.FAILURE,
                                            xhr: r
                                        }, t)
                                    }
                                    t.stats = c(r);
                                    if (t.key) {
                                        t.encryptedBytes = new Uint8Array(r.response)
                                    } else {
                                        t.bytes = new Uint8Array(r.response)
                                    }
                                    return n(null, t)
                                }
                            };
                            var g = function(t, n, r) {
                                var i = function s(e) {
                                    if (e.data.source === n.requestId) {
                                        t.removeEventListener("message", s);
                                        var i = e.data.decrypted;
                                        n.bytes = new Uint8Array(i.bytes, i.byteOffset, i.byteLength);
                                        return r(null, n)
                                    }
                                };
                                t.addEventListener("message", i);
                                t.postMessage((0,
                                    o.createTransferableMessage)({
                                    source: n.requestId,
                                    encrypted: n.encryptedBytes,
                                    key: n.key.bytes,
                                    iv: n.key.iv
                                }), [n.encryptedBytes.buffer, n.key.bytes.buffer])
                            };
                            var y = function(t) {
                                return t.reduce(function(e, t) {
                                    return t.code > e.code ? t : e
                                })
                            };
                            var b = function(t, n, r) {
                                var i = [];
                                var s = 0;
                                return function(e, o) {
                                    if (e) {
                                        l(t);
                                        i.push(e)
                                    }
                                    s += 1;
                                    if (s === t.length) {
                                        o.endOfAllRequests = Date.now();
                                        if (i.length > 0) {
                                            var u = y(i);
                                            return r(u, o)
                                        }
                                        if (o.encryptedBytes) {
                                            return g(n, o, r)
                                        }
                                        return r(null, o)
                                    }
                                }
                            };
                            var w = function(t, n) {
                                return function(e) {
                                    t.stats = s["default"].mergeOptions(t.stats, h(e));
                                    if (!t.stats.firstBytesReceivedAt && t.stats.bytesReceived) {
                                        t.stats.firstBytesReceivedAt = Date.now()
                                    }
                                    return n(e, t)
                                }
                            };
                            var E = function(t, n, r, i, o, u) {
                                var a = [];
                                var c = b(a, r, u);
                                if (i.key) {
                                    var h = s["default"].mergeOptions(n, {
                                        uri: i.key.resolvedUri,
                                        responseType: "arraybuffer"
                                    });
                                    var p = d(i, c);
                                    var g = t(h, p);
                                    a.push(g)
                                }
                                if (i.map && !i.map.bytes) {
                                    var y = s["default"].mergeOptions(n, {
                                        uri: i.map.resolvedUri,
                                        responseType: "arraybuffer",
                                        headers: f(i.map)
                                    });
                                    var E = v(i, c);
                                    var S = t(y, E);
                                    a.push(S)
                                }
                                var x = s["default"].mergeOptions(n, {
                                    uri: i.resolvedUri,
                                    responseType: "arraybuffer",
                                    headers: f(i)
                                });
                                var T = m(i, c);
                                var N = t(x, T);
                                N.addEventListener("progress", w(i, o));
                                a.push(N);
                                return function() {
                                    return l(a)
                                }
                            };
                            r.mediaSegmentRequest = E
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./bin-utils": 2
                    }],
                    8: [function(e, t, r) {
                        (function(n) {
                            "use strict";

                            function s(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function o(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var u = e("global/window");
                            var a = s(u);
                            var f = e("./ranges");
                            var l = s(f);
                            var c = typeof window !== "undefined" ? window["videojs"] : typeof n !== "undefined" ? n["videojs"] : null;
                            var h = s(c);
                            var p = ["seeking", "seeked", "pause", "playing", "error"];
                            var d = function() {
                                function e(t) {
                                    var n = this;
                                    o(this, e);
                                    this.tech_ = t.tech;
                                    this.seekable = t.seekable;
                                    this.consecutiveUpdates = 0;
                                    this.lastRecordedTime = null;
                                    this.timer_ = null;
                                    this.checkCurrentTimeTimeout_ = null;
                                    if (t.debug) {
                                        this.logger_ = h["default"].log.bind(h["default"], "playback-watcher ->")
                                    }
                                    this.logger_("initialize");
                                    var r = function() {
                                        return n.monitorCurrentTime_()
                                    };
                                    var i = function() {
                                        return n.techWaiting_()
                                    };
                                    var s = function() {
                                        return n.cancelTimer_()
                                    };
                                    var u = function() {
                                        return n.fixesBadSeeks_()
                                    };
                                    this.tech_.on("seekablechanged", u);
                                    this.tech_.on("waiting", i);
                                    this.tech_.on(p, s);
                                    this.tech_.on("canplay", r);
                                    this.dispose = function() {
                                        n.logger_("dispose");
                                        n.tech_.off("seekablechanged", u);
                                        n.tech_.off("waiting", i);
                                        n.tech_.off(p, s);
                                        n.tech_.off("canplay", r);
                                        if (n.checkCurrentTimeTimeout_) {
                                            a["default"].clearTimeout(n.checkCurrentTimeTimeout_)
                                        }
                                        n.cancelTimer_()
                                    }
                                }
                                i(e, [{
                                    key: "monitorCurrentTime_",
                                    value: function() {
                                        this.checkCurrentTime_();
                                        if (this.checkCurrentTimeTimeout_) {
                                            a["default"].clearTimeout(this.checkCurrentTimeTimeout_)
                                        }
                                        this.checkCurrentTimeTimeout_ = a["default"].setTimeout(this.monitorCurrentTime_.bind(this), 250)
                                    }
                                }, {
                                    key: "checkCurrentTime_",
                                    value: function() {
                                        if (this.tech_.seeking() && this.fixesBadSeeks_()) {
                                            this.consecutiveUpdates = 0;
                                            this.lastRecordedTime = this.tech_.currentTime();
                                            return
                                        }
                                        if (this.tech_.paused() || this.tech_.seeking()) {
                                            return
                                        }
                                        var t = this.tech_.currentTime();
                                        var n = this.tech_.buffered();
                                        if (this.lastRecordedTime === t && (!n.length || t + l["default"].SAFE_TIME_DELTA >= n.end(n.length - 1))) {
                                            return this.techWaiting_()
                                        }
                                        if (this.consecutiveUpdates >= 5 && t === this.lastRecordedTime) {
                                            this.consecutiveUpdates++;
                                            this.waiting_()
                                        } else if (t === this.lastRecordedTime) {
                                            this.consecutiveUpdates++
                                        } else {
                                            this.consecutiveUpdates = 0;
                                            this.lastRecordedTime = t
                                        }
                                    }
                                }, {
                                    key: "cancelTimer_",
                                    value: function() {
                                        this.consecutiveUpdates = 0;
                                        if (this.timer_) {
                                            this.logger_("cancelTimer_");
                                            clearTimeout(this.timer_)
                                        }
                                        this.timer_ = null
                                    }
                                }, {
                                    key: "fixesBadSeeks_",
                                    value: function() {
                                        var t = this.tech_.seeking();
                                        var n = this.seekable();
                                        var r = this.tech_.currentTime();
                                        var i = undefined;
                                        if (t && this.afterSeekableWindow_(n, r)) {
                                            var s = n.end(n.length - 1);
                                            i = s
                                        }
                                        if (t && this.beforeSeekableWindow_(n, r)) {
                                            var o = n.start(0);
                                            i = o + l["default"].SAFE_TIME_DELTA
                                        }
                                        if (typeof i !== "undefined") {
                                            this.logger_("Trying to seek outside of seekable at time " + r + " with " + ("seekable range " + l["default"].printableRange(n) + ". Seeking to ") + (i + "."));
                                            this.tech_.setCurrentTime(i);
                                            return true
                                        }
                                        return false
                                    }
                                }, {
                                    key: "waiting_",
                                    value: function() {
                                        if (this.techWaiting_()) {
                                            return
                                        }
                                        var t = this.tech_.currentTime();
                                        var n = this.tech_.buffered();
                                        var r = l["default"].findRange(n, t);
                                        if (r.length && t + 3 <= r.end(0)) {
                                            this.cancelTimer_();
                                            this.tech_.setCurrentTime(t);
                                            this.logger_("Stopped at " + t + " while inside a buffered region " + ("[" + r.start(0) + " -> " + r.end(0) + "]. Attempting to resume ") + "playback by seeking to the current time.");
                                            this.tech_.trigger({
                                                type: "usage",
                                                name: "hls-unknown-waiting"
                                            });
                                            return
                                        }
                                    }
                                }, {
                                    key: "techWaiting_",
                                    value: function() {
                                        var t = this.seekable();
                                        var n = this.tech_.currentTime();
                                        if (this.tech_.seeking() && this.fixesBadSeeks_()) {
                                            return true
                                        }
                                        if (this.tech_.seeking() || this.timer_ !== null) {
                                            return true
                                        }
                                        if (this.beforeSeekableWindow_(t, n)) {
                                            var r = t.end(t.length - 1);
                                            this.logger_("Fell out of live window at time " + n + ". Seeking to " + ("live point (seekable end) " + r));
                                            this.cancelTimer_();
                                            this.tech_.setCurrentTime(r);
                                            this.tech_.trigger({
                                                type: "usage",
                                                name: "hls-live-resync"
                                            });
                                            return true
                                        }
                                        var i = this.tech_.buffered();
                                        var s = l["default"].findNextRange(i, n);
                                        if (this.videoUnderflow_(s, i, n)) {
                                            this.cancelTimer_();
                                            this.tech_.setCurrentTime(n);
                                            this.tech_.trigger({
                                                type: "usage",
                                                name: "hls-video-underflow"
                                            });
                                            return true
                                        }
                                        if (s.length > 0) {
                                            var o = s.start(0) - n;
                                            this.logger_("Stopped at " + n + ", setting timer for " + o + ", seeking " + ("to " + s.start(0)));
                                            this.timer_ = setTimeout(this.skipTheGap_.bind(this), o * 1e3, n);
                                            return true
                                        }
                                        return false
                                    }
                                }, {
                                    key: "afterSeekableWindow_",
                                    value: function(t, n) {
                                        if (!t.length) {
                                            return false
                                        }
                                        if (n > t.end(t.length - 1) + l["default"].SAFE_TIME_DELTA) {
                                            return true
                                        }
                                        return false
                                    }
                                }, {
                                    key: "beforeSeekableWindow_",
                                    value: function(t, n) {
                                        if (t.length && t.start(0) > 0 && n < t.start(0) - l["default"].SAFE_TIME_DELTA) {
                                            return true
                                        }
                                        return false
                                    }
                                }, {
                                    key: "videoUnderflow_",
                                    value: function(t, n, r) {
                                        if (t.length === 0) {
                                            var i = this.gapFromVideoUnderflow_(n, r);
                                            if (i) {
                                                this.logger_("Encountered a gap in video from " + i.start + " to " + i.end + ". " + ("Seeking to current time " + r));
                                                return true
                                            }
                                        }
                                        return false
                                    }
                                }, {
                                    key: "skipTheGap_",
                                    value: function(t) {
                                        var n = this.tech_.buffered();
                                        var r = this.tech_.currentTime();
                                        var i = l["default"].findNextRange(n, r);
                                        this.cancelTimer_();
                                        if (i.length === 0 || r !== t) {
                                            return
                                        }
                                        this.logger_("skipTheGap_:", "currentTime:", r, "scheduled currentTime:", t, "nextRange start:", i.start(0));
                                        this.tech_.setCurrentTime(i.start(0) + l["default"].TIME_FUDGE_FACTOR);
                                        this.tech_.trigger({
                                            type: "usage",
                                            name: "hls-gap-skip"
                                        })
                                    }
                                }, {
                                    key: "gapFromVideoUnderflow_",
                                    value: function(t, n) {
                                        var r = l["default"].findGaps(t);
                                        for (var i = 0; i < r.length; i++) {
                                            var s = r.start(i);
                                            var o = r.end(i);
                                            if (n - s < 4 && n - s > 2) {
                                                return {
                                                    start: s,
                                                    end: o
                                                }
                                            }
                                        }
                                        return null
                                    }
                                }, {
                                    key: "logger_",
                                    value: function() {}
                                }]);
                                return e
                            }();
                            r["default"] = d;
                            t.exports = r["default"]
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./ranges": 12,
                        "global/window": 32
                    }],
                    9: [function(e, t, r) {
                        (function(t) {
                            "use strict";

                            function s(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function o(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }

                            function a(e, t) {
                                if (typeof t !== "function" && t !== null) {
                                    throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                                }
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: false,
                                        writable: true,
                                        configurable: true
                                    }
                                });
                                if (t)
                                    Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var n = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var i = function(t, n, r) {
                                var i = true;
                                e: while (i) {
                                    var s = t,
                                        o = n,
                                        u = r;
                                    i = false;
                                    if (s === null)
                                        s = Function.prototype;
                                    var a = Object.getOwnPropertyDescriptor(s, o);
                                    if (a === undefined) {
                                        var f = Object.getPrototypeOf(s);
                                        if (f === null) {
                                            return undefined
                                        } else {
                                            t = f;
                                            n = o;
                                            r = u;
                                            i = true;
                                            a = f = undefined;
                                            continue e
                                        }
                                    } else if ("value" in a) {
                                        return a.value
                                    } else {
                                        var l = a.get;
                                        if (l === undefined) {
                                            return undefined
                                        }
                                        return l.call(u)
                                    }
                                }
                            };
                            var f = e("./resolve-url");
                            var l = s(f);
                            var c = typeof window !== "undefined" ? window["videojs"] : typeof t !== "undefined" ? t["videojs"] : null;
                            var h = e("m3u8-parser");
                            var p = s(h);
                            var d = e("global/window");
                            var v = s(d);
                            var m = function(t, n, r) {
                                var i = n.slice();
                                r = r || 0;
                                var s = Math.min(t.length, n.length + r);
                                for (var o = r; o < s; o++) {
                                    i[o - r] = (0,
                                        c.mergeOptions)(t[o], i[o - r])
                                }
                                return i
                            };
                            r.updateSegments = m;
                            var g = function(t, n) {
                                if (!t.resolvedUri) {
                                    t.resolvedUri = (0,
                                        l["default"])(n, t.uri)
                                }
                                if (t.key && !t.key.resolvedUri) {
                                    t.key.resolvedUri = (0,
                                        l["default"])(n, t.key.uri)
                                }
                                if (t.map && !t.map.resolvedUri) {
                                    t.map.resolvedUri = (0,
                                        l["default"])(n, t.map.uri)
                                }
                            };
                            r.resolveSegmentUris = g;
                            var y = function(t, n) {
                                var r = (0,
                                    c.mergeOptions)(t, {});
                                var i = r.playlists.filter(function(e) {
                                    return e.uri === n.uri
                                })[0];
                                if (!i) {
                                    return null
                                }
                                if (i.segments && n.segments && i.segments.length === n.segments.length && i.mediaSequence === n.mediaSequence) {
                                    return null
                                }
                                var s = (0,
                                    c.mergeOptions)(i, n);
                                if (i.segments) {
                                    s.segments = m(i.segments, n.segments, n.mediaSequence - i.mediaSequence)
                                }
                                s.segments.forEach(function(e) {
                                    g(e, s.resolvedUri)
                                });
                                for (var o = 0; o < r.playlists.length; o++) {
                                    if (r.playlists[o].uri === n.uri) {
                                        r.playlists[o] = s
                                    }
                                }
                                r.playlists[n.uri] = s;
                                return r
                            };
                            r.updateMaster = y;
                            var b = function(t) {
                                var n = t.playlists.length;
                                while (n--) {
                                    var r = t.playlists[n];
                                    t.playlists[r.uri] = r;
                                    r.resolvedUri = (0,
                                        l["default"])(t.uri, r.uri);
                                    if (!r.attributes) {
                                        r.attributes = {};
                                        c.log.warn("Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.")
                                    }
                                }
                            };
                            r.setupMediaPlaylists = b;
                            var w = function(t) {
                                ["AUDIO", "SUBTITLES"].forEach(function(e) {
                                    for (var n in t.mediaGroups[e]) {
                                        for (var r in t.mediaGroups[e][n]) {
                                            var i = t.mediaGroups[e][n][r];
                                            if (i.uri) {
                                                i.resolvedUri = (0,
                                                    l["default"])(t.uri, i.uri)
                                            }
                                        }
                                    }
                                })
                            };
                            r.resolveMediaGroupUris = w;
                            var E = function(t, n) {
                                var r = t.segments[t.segments.length - 1];
                                var i = undefined;
                                if (n && r && r.duration) {
                                    i = r.duration * 1e3
                                } else {
                                    i = (t.targetDuration || 10) * 500
                                }
                                return i
                            };
                            r.refreshDelay = E;
                            var S = function(e) {
                                function t(e, n, r) {
                                    var s = this;
                                    o(this, t);
                                    i(Object.getPrototypeOf(t.prototype), "constructor", this).call(this);
                                    this.srcUrl = e;
                                    this.hls_ = n;
                                    this.withCredentials = r;
                                    if (!this.srcUrl) {
                                        throw new Error("A non-empty playlist URL is required")
                                    }
                                    this.state = "HAVE_NOTHING";
                                    this.on("mediaupdatetimeout", function() {
                                        if (s.state !== "HAVE_METADATA") {
                                            return
                                        }
                                        s.state = "HAVE_CURRENT_METADATA";
                                        s.request = s.hls_.xhr({
                                            uri: (0,
                                                l["default"])(s.master.uri, s.media().uri),
                                            withCredentials: s.withCredentials
                                        }, function(e, t) {
                                            if (!s.request) {
                                                return
                                            }
                                            if (e) {
                                                return s.playlistRequestError(s.request, s.media().uri, "HAVE_METADATA")
                                            }
                                            s.haveMetadata(s.request, s.media().uri)
                                        })
                                    })
                                }
                                a(t, e);
                                n(t, [{
                                    key: "playlistRequestError",
                                    value: function(t, n, r) {
                                        this.request = null;
                                        if (r) {
                                            this.state = r
                                        }
                                        this.error = {
                                            playlist: this.master.playlists[n],
                                            status: t.status,
                                            message: "HLS playlist request error at URL: " + n,
                                            responseText: t.responseText,
                                            code: t.status >= 500 ? 4 : 2
                                        };
                                        this.trigger("error")
                                    }
                                }, {
                                    key: "haveMetadata",
                                    value: function(t, n) {
                                        var r = this;
                                        this.request = null;
                                        this.state = "HAVE_METADATA";
                                        var i = new p["default"].Parser;
                                        i.push(t.responseText);
                                        i.end();
                                        i.manifest.uri = n;
                                        i.manifest.attributes = i.manifest.attributes || {};
                                        var s = y(this.master, i.manifest);
                                        this.targetDuration = i.manifest.targetDuration;
                                        if (s) {
                                            this.master = s;
                                            this.media_ = this.master.playlists[i.manifest.uri]
                                        } else {
                                            this.trigger("playlistunchanged")
                                        }
                                        if (!this.media().endList) {
                                            v["default"].clearTimeout(this.mediaUpdateTimeout);
                                            this.mediaUpdateTimeout = v["default"].setTimeout(function() {
                                                r.trigger("mediaupdatetimeout")
                                            }, E(this.media(), !!s))
                                        }
                                        this.trigger("loadedplaylist")
                                    }
                                }, {
                                    key: "dispose",
                                    value: function() {
                                        this.stopRequest();
                                        v["default"].clearTimeout(this.mediaUpdateTimeout)
                                    }
                                }, {
                                    key: "stopRequest",
                                    value: function() {
                                        if (this.request) {
                                            var t = this.request;
                                            this.request = null;
                                            t.onreadystatechange = null;
                                            t.abort()
                                        }
                                    }
                                }, {
                                    key: "media",
                                    value: function(t) {
                                        var n = this;
                                        if (!t) {
                                            return this.media_
                                        }
                                        if (this.state === "HAVE_NOTHING") {
                                            throw new Error("Cannot switch media playlist from " + this.state)
                                        }
                                        var r = this.state;
                                        if (typeof t === "string") {
                                            if (!this.master.playlists[t]) {
                                                throw new Error("Unknown playlist URI: " + t)
                                            }
                                            t = this.master.playlists[t]
                                        }
                                        var i = !this.media_ || t.uri !== this.media_.uri;
                                        if (this.master.playlists[t.uri].endList) {
                                            if (this.request) {
                                                this.request.onreadystatechange = null;
                                                this.request.abort();
                                                this.request = null
                                            }
                                            this.state = "HAVE_METADATA";
                                            this.media_ = t;
                                            if (i) {
                                                this.trigger("mediachanging");
                                                this.trigger("mediachange")
                                            }
                                            return
                                        }
                                        if (!i) {
                                            return
                                        }
                                        this.state = "SWITCHING_MEDIA";
                                        if (this.request) {
                                            if ((0,
                                                    l["default"])(this.master.uri, t.uri) === this.request.url) {
                                                return
                                            }
                                            this.request.onreadystatechange = null;
                                            this.request.abort();
                                            this.request = null
                                        }
                                        if (this.media_) {
                                            this.trigger("mediachanging")
                                        }
                                        this.request = this.hls_.xhr({
                                            uri: (0,
                                                l["default"])(this.master.uri, t.uri),
                                            withCredentials: this.withCredentials
                                        }, function(e, i) {
                                            if (!n.request) {
                                                return
                                            }
                                            if (e) {
                                                return n.playlistRequestError(n.request, t.uri, r)
                                            }
                                            n.haveMetadata(i, t.uri);
                                            if (r === "HAVE_MASTER") {
                                                n.trigger("loadedmetadata")
                                            } else {
                                                n.trigger("mediachange")
                                            }
                                        })
                                    }
                                }, {
                                    key: "pause",
                                    value: function() {
                                        this.stopRequest();
                                        v["default"].clearTimeout(this.mediaUpdateTimeout);
                                        if (this.state === "HAVE_NOTHING") {
                                            this.started = false
                                        }
                                        if (this.state === "SWITCHING_MEDIA") {
                                            if (this.media_) {
                                                this.state = "HAVE_METADATA"
                                            } else {
                                                this.state = "HAVE_MASTER"
                                            }
                                        } else if (this.state === "HAVE_CURRENT_METADATA") {
                                            this.state = "HAVE_METADATA"
                                        }
                                    }
                                }, {
                                    key: "load",
                                    value: function(t) {
                                        var n = this;
                                        v["default"].clearTimeout(this.mediaUpdateTimeout);
                                        var r = this.media();
                                        if (t) {
                                            var i = r ? r.targetDuration / 2 * 1e3 : 5 * 1e3;
                                            this.mediaUpdateTimeout = v["default"].setTimeout(function() {
                                                return n.load()
                                            }, i);
                                            return
                                        }
                                        if (!this.started) {
                                            this.start();
                                            return
                                        }
                                        if (r && !r.endList) {
                                            this.trigger("mediaupdatetimeout")
                                        } else {
                                            this.trigger("loadedplaylist")
                                        }
                                    }
                                }, {
                                    key: "start",
                                    value: function() {
                                        var t = this;
                                        this.started = true;
                                        this.request = this.hls_.xhr({
                                            uri: this.srcUrl,
                                            withCredentials: this.withCredentials
                                        }, function(e, n) {
                                            if (!t.request) {
                                                return
                                            }
                                            t.request = null;
                                            if (e) {
                                                t.error = {
                                                    status: n.status,
                                                    message: "HLS playlist request error at URL: " + t.srcUrl,
                                                    responseText: n.responseText,
                                                    code: 2
                                                };
                                                if (t.state === "HAVE_NOTHING") {
                                                    t.started = false
                                                }
                                                return t.trigger("error")
                                            }
                                            var r = new p["default"].Parser;
                                            r.push(n.responseText);
                                            r.end();
                                            t.state = "HAVE_MASTER";
                                            r.manifest.uri = t.srcUrl;
                                            if (r.manifest.playlists) {
                                                t.master = r.manifest;
                                                b(t.master);
                                                w(t.master);
                                                t.trigger("loadedplaylist");
                                                if (!t.request) {
                                                    t.media(r.manifest.playlists[0])
                                                }
                                                return
                                            }
                                            t.master = {
                                                mediaGroups: {
                                                    AUDIO: {},
                                                    VIDEO: {},
                                                    "CLOSED-CAPTIONS": {},
                                                    SUBTITLES: {}
                                                },
                                                uri: v["default"].location.href,
                                                playlists: [{
                                                    uri: t.srcUrl
                                                }]
                                            };
                                            t.master.playlists[t.srcUrl] = t.master.playlists[0];
                                            t.master.playlists[0].resolvedUri = t.srcUrl;
                                            t.master.playlists[0].attributes = t.master.playlists[0].attributes || {};
                                            t.haveMetadata(n, t.srcUrl);
                                            return t.trigger("loadedmetadata")
                                        })
                                    }
                                }]);
                                return t
                            }(c.EventTarget);
                            r["default"] = S
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./resolve-url": 15,
                        "global/window": 32,
                        "m3u8-parser": 33
                    }],
                    10: [function(e, t, n) {
                        "use strict";

                        function r(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var i = e("./config");
                        var s = r(i);
                        var o = e("./playlist");
                        var u = r(o);
                        var a = e("./util/codecs.js");
                        var f = function(t, n) {
                            var r = undefined;
                            if (!t) {
                                return ""
                            }
                            r = window.getComputedStyle(t);
                            if (!r) {
                                return ""
                            }
                            return r[n]
                        };
                        var l = function(t, n) {
                            var r = t.slice();
                            t.sort(function(e, t) {
                                var i = n(e, t);
                                if (i === 0) {
                                    return r.indexOf(e) - r.indexOf(t)
                                }
                                return i
                            })
                        };
                        var c = function(t, n) {
                            var r = undefined;
                            var i = undefined;
                            if (t.attributes.BANDWIDTH) {
                                r = t.attributes.BANDWIDTH
                            }
                            r = r || window.Number.MAX_VALUE;
                            if (n.attributes.BANDWIDTH) {
                                i = n.attributes.BANDWIDTH
                            }
                            i = i || window.Number.MAX_VALUE;
                            return r - i
                        };
                        n.comparePlaylistBandwidth = c;
                        var h = function(t, n) {
                            var r = undefined;
                            var i = undefined;
                            if (t.attributes.RESOLUTION && t.attributes.RESOLUTION.width) {
                                r = t.attributes.RESOLUTION.width
                            }
                            r = r || window.Number.MAX_VALUE;
                            if (n.attributes.RESOLUTION && n.attributes.RESOLUTION.width) {
                                i = n.attributes.RESOLUTION.width
                            }
                            i = i || window.Number.MAX_VALUE;
                            if (r === i && t.attributes.BANDWIDTH && n.attributes.BANDWIDTH) {
                                return t.attributes.BANDWIDTH - n.attributes.BANDWIDTH
                            }
                            return r - i
                        };
                        n.comparePlaylistResolution = h;
                        var p = function(t, n, r, i) {
                            var o = t.playlists.map(function(e) {
                                var t = undefined;
                                var n = undefined;
                                var r = undefined;
                                t = e.attributes.RESOLUTION && e.attributes.RESOLUTION.width;
                                n = e.attributes.RESOLUTION && e.attributes.RESOLUTION.height;
                                r = e.attributes.BANDWIDTH;
                                r = r || window.Number.MAX_VALUE;
                                return {
                                    bandwidth: r,
                                    width: t,
                                    height: n,
                                    playlist: e
                                }
                            });
                            l(o, function(e, t) {
                                return e.bandwidth - t.bandwidth
                            });
                            o = o.filter(function(e) {
                                return !u["default"].isIncompatible(e.playlist)
                            });
                            var a = o.filter(function(e) {
                                return u["default"].isEnabled(e.playlist)
                            });
                            if (!a.length) {
                                a = o.filter(function(e) {
                                    return !u["default"].isDisabled(e.playlist)
                                })
                            }
                            var f = a.filter(function(e) {
                                return e.bandwidth * s["default"].BANDWIDTH_VARIANCE < n
                            });
                            var c = f[f.length - 1];
                            var h = f.filter(function(e) {
                                return e.bandwidth === c.bandwidth
                            })[0];
                            var p = f.filter(function(e) {
                                return e.width && e.height
                            });
                            l(p, function(e, t) {
                                return e.width - t.width
                            });
                            var d = p.filter(function(e) {
                                return e.width === r && e.height === i
                            });
                            c = d[d.length - 1];
                            var v = d.filter(function(e) {
                                return e.bandwidth === c.bandwidth
                            })[0];
                            var m = undefined;
                            var g = undefined;
                            var y = undefined;
                            if (!v) {
                                m = p.filter(function(e) {
                                    return e.width > r || e.height > i
                                });
                                g = m.filter(function(e) {
                                    return e.width === m[0].width && e.height === m[0].height
                                });
                                c = g[g.length - 1];
                                y = g.filter(function(e) {
                                    return e.bandwidth === c.bandwidth
                                })[0]
                            }
                            var b = y || v || h || a[0] || o[0];
                            return b ? b.playlist : null
                        };
                        n.simpleSelector = p;
                        var d = function() {
                            return p(this.playlists.master, this.systemBandwidth, parseInt(f(this.tech_.el(), "width"), 10), parseInt(f(this.tech_.el(), "height"), 10))
                        };
                        n.lastBandwidthSelector = d;
                        var v = function(t) {
                            var n = -1;
                            if (t < 0 || t > 1) {
                                throw new Error("Moving average bandwidth decay must be between 0 and 1.")
                            }
                            return function() {
                                if (n < 0) {
                                    n = this.systemBandwidth
                                }
                                n = t * this.systemBandwidth + (1 - t) * n;
                                return p(this.playlists.master, n, parseInt(f(this.tech_.el(), "width"), 10), parseInt(f(this.tech_.el(), "height"), 10))
                            }
                        };
                        n.movingAverageBandwidthSelector = v;
                        var m = function(t) {
                            var n = t.master;
                            var r = t.currentTime;
                            var i = t.bandwidth;
                            var s = t.duration;
                            var o = t.segmentDuration;
                            var a = t.timeUntilRebuffer;
                            var f = t.currentTimeline;
                            var h = t.syncController;
                            var p = n.playlists.filter(function(e) {
                                return !u["default"].isIncompatible(e)
                            });
                            var d = p.filter(u["default"].isEnabled);
                            if (!d.length) {
                                d = p.filter(function(e) {
                                    return !u["default"].isDisabled(e)
                                })
                            }
                            var v = d.filter(u["default"].hasAttribute.bind(null, "BANDWIDTH"));
                            var m = v.map(function(e) {
                                var t = h.getSyncPoint(e, s, f, r);
                                var n = t ? 1 : 2;
                                var l = u["default"].estimateSegmentRequestTime(o, i, e);
                                var c = l * n - a;
                                return {
                                    playlist: e,
                                    rebufferingImpact: c
                                }
                            });
                            var g = m.filter(function(e) {
                                return e.rebufferingImpact <= 0
                            });
                            l(g, function(e, t) {
                                return c(t.playlist, e.playlist)
                            });
                            if (g.length) {
                                return g[0]
                            }
                            l(m, function(e, t) {
                                return e.rebufferingImpact - t.rebufferingImpact
                            });
                            return m[0] || null
                        };
                        n.minRebufferMaxBandwidthSelector = m;
                        var g = function() {
                            var t = this.playlists.master.playlists.filter(u["default"].isEnabled);
                            l(t, function(e, t) {
                                return c(e, t)
                            });
                            var n = t.filter(function(e) {
                                return (0,
                                    a.parseCodecs)(e.attributes.CODECS).videoCodec
                            });
                            return n[0] || null
                        };
                        n.lowestBitrateCompatibleVariantSelector = g
                    }, {
                        "./config": 3,
                        "./playlist": 11,
                        "./util/codecs.js": 19
                    }],
                    11: [function(e, t, r) {
                        (function(t) {
                            "use strict";

                            function n(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = typeof window !== "undefined" ? window["videojs"] : typeof t !== "undefined" ? t["videojs"] : null;
                            var s = e("global/window");
                            var o = n(s);
                            var u = function(t, n) {
                                var r = 0;
                                var i = n - t.mediaSequence;
                                var s = t.segments[i];
                                if (s) {
                                    if (typeof s.start !== "undefined") {
                                        return {
                                            result: s.start,
                                            precise: true
                                        }
                                    }
                                    if (typeof s.end !== "undefined") {
                                        return {
                                            result: s.end - s.duration,
                                            precise: true
                                        }
                                    }
                                }
                                while (i--) {
                                    s = t.segments[i];
                                    if (typeof s.end !== "undefined") {
                                        return {
                                            result: r + s.end,
                                            precise: true
                                        }
                                    }
                                    r += s.duration;
                                    if (typeof s.start !== "undefined") {
                                        return {
                                            result: r + s.start,
                                            precise: true
                                        }
                                    }
                                }
                                return {
                                    result: r,
                                    precise: false
                                }
                            };
                            var a = function(t, n) {
                                var r = 0;
                                var i = undefined;
                                var s = n - t.mediaSequence;
                                for (; s < t.segments.length; s++) {
                                    i = t.segments[s];
                                    if (typeof i.start !== "undefined") {
                                        return {
                                            result: i.start - r,
                                            precise: true
                                        }
                                    }
                                    r += i.duration;
                                    if (typeof i.end !== "undefined") {
                                        return {
                                            result: i.end - r,
                                            precise: true
                                        }
                                    }
                                }
                                return {
                                    result: -1,
                                    precise: false
                                }
                            };
                            var f = function(t, n, r) {
                                var i = undefined;
                                var s = undefined;
                                if (typeof n === "undefined") {
                                    n = t.mediaSequence + t.segments.length
                                }
                                if (n < t.mediaSequence) {
                                    return 0
                                }
                                i = u(t, n);
                                if (i.precise) {
                                    return i.result
                                }
                                s = a(t, n);
                                if (s.precise) {
                                    return s.result
                                }
                                return i.result + r
                            };
                            var l = function(t, n, r) {
                                if (!t) {
                                    return 0
                                }
                                if (typeof r !== "number") {
                                    r = 0
                                }
                                if (typeof n === "undefined") {
                                    if (t.totalDuration) {
                                        return t.totalDuration
                                    }
                                    if (!t.endList) {
                                        return o["default"].Infinity
                                    }
                                }
                                return f(t, n, r)
                            };
                            r.duration = l;
                            var c = function(t, n, r) {
                                var i = 0;
                                if (n > r) {
                                    var s = [r, n];
                                    n = s[0];
                                    r = s[1]
                                }
                                if (n < 0) {
                                    for (var o = n; o < Math.min(0, r); o++) {
                                        i += t.targetDuration
                                    }
                                    n = 0
                                }
                                for (var o = n; o < r; o++) {
                                    i += t.segments[o].duration
                                }
                                return i
                            };
                            r.sumDurations = c;
                            var h = function(t) {
                                if (!t.segments.length) {
                                    return 0
                                }
                                var n = t.segments.length - 1;
                                var r = t.segments[n].duration || t.targetDuration;
                                var i = r + t.targetDuration * 2;
                                while (n--) {
                                    r += t.segments[n].duration;
                                    if (r >= i) {
                                        break
                                    }
                                }
                                return Math.max(0, n)
                            };
                            r.safeLiveIndex = h;
                            var p = function(t, n, r) {
                                if (!t || !t.segments) {
                                    return null
                                }
                                if (t.endList) {
                                    return l(t)
                                }
                                if (n === null) {
                                    return null
                                }
                                n = n || 0;
                                var i = r ? h(t) : t.segments.length;
                                return f(t, t.mediaSequence + i, n)
                            };
                            r.playlistEnd = p;
                            var d = function(t, n) {
                                var r = true;
                                var s = n || 0;
                                var o = p(t, n, r);
                                if (o === null) {
                                    return (0,
                                        i.createTimeRange)()
                                }
                                return (0,
                                    i.createTimeRange)(s, o)
                            };
                            r.seekable = d;
                            var v = function(t) {
                                return t - Math.floor(t) === 0
                            };
                            var m = function(t, n) {
                                if (v(n)) {
                                    return n + t * .1
                                }
                                var r = n.toString().split(".")[1].length;
                                for (var i = 1; i <= r; i++) {
                                    var s = Math.pow(10, i);
                                    var o = n * s;
                                    if (v(o) || i === r) {
                                        return (o + t) / s
                                    }
                                }
                            };
                            var g = m.bind(null, 1);
                            var y = m.bind(null, -1);
                            var b = function(t, n, r, i) {
                                var s = undefined;
                                var o = undefined;
                                var u = t.segments.length;
                                var a = n - i;
                                if (a < 0) {
                                    if (r > 0) {
                                        for (s = r - 1; s >= 0; s--) {
                                            o = t.segments[s];
                                            a += y(o.duration);
                                            if (a > 0) {
                                                return {
                                                    mediaIndex: s,
                                                    startTime: i - c(t, r, s)
                                                }
                                            }
                                        }
                                    }
                                    return {
                                        mediaIndex: 0,
                                        startTime: n
                                    }
                                }
                                if (r < 0) {
                                    for (s = r; s < 0; s++) {
                                        a -= t.targetDuration;
                                        if (a < 0) {
                                            return {
                                                mediaIndex: 0,
                                                startTime: n
                                            }
                                        }
                                    }
                                    r = 0
                                }
                                for (s = r; s < u; s++) {
                                    o = t.segments[s];
                                    a -= g(o.duration);
                                    if (a < 0) {
                                        return {
                                            mediaIndex: s,
                                            startTime: i + c(t, r, s)
                                        }
                                    }
                                }
                                return {
                                    mediaIndex: u - 1,
                                    startTime: n
                                }
                            };
                            r.getMediaInfoForTime = b;
                            var w = function(t) {
                                return t.excludeUntil && t.excludeUntil > Date.now()
                            };
                            r.isBlacklisted = w;
                            var E = function(t) {
                                return t.excludeUntil && t.excludeUntil === Infinity
                            };
                            r.isIncompatible = E;
                            var S = function(t) {
                                var n = w(t);
                                return !t.disabled && !n
                            };
                            r.isEnabled = S;
                            var x = function(t) {
                                return t.disabled
                            };
                            r.isDisabled = x;
                            var T = function(t) {
                                for (var n = 0; n < t.segments.length; n++) {
                                    if (t.segments[n].key) {
                                        return true
                                    }
                                }
                                return false
                            };
                            r.isAes = T;
                            var N = function(t) {
                                for (var n = 0; n < t.segments.length; n++) {
                                    if (t.segments[n].map) {
                                        return true
                                    }
                                }
                                return false
                            };
                            r.isFmp4 = N;
                            var C = function(t, n) {
                                return n.attributes && n.attributes[t]
                            };
                            r.hasAttribute = C;
                            var k = function(t, n, r) {
                                var i = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];
                                if (!C("BANDWIDTH", r)) {
                                    return NaN
                                }
                                var s = t * r.attributes.BANDWIDTH;
                                return (s - i * 8) / n
                            };
                            r.estimateSegmentRequestTime = k;
                            var L = function(t, n) {
                                if (t.playlists.length === 1) {
                                    return true
                                }
                                var r = n.attributes.BANDWIDTH || Number.MAX_VALUE;
                                return t.playlists.filter(function(e) {
                                    if (!S(e)) {
                                        return false
                                    }
                                    return (e.attributes.BANDWIDTH || 0) < r
                                }).length === 0
                            };
                            r.isLowestEnabledRendition = L;
                            r["default"] = {
                                duration: l,
                                seekable: d,
                                safeLiveIndex: h,
                                getMediaInfoForTime: b,
                                isEnabled: S,
                                isDisabled: x,
                                isBlacklisted: w,
                                isIncompatible: E,
                                playlistEnd: p,
                                isAes: T,
                                isFmp4: N,
                                hasAttribute: C,
                                estimateSegmentRequestTime: k,
                                isLowestEnabledRendition: L
                            }
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "global/window": 32
                    }],
                    12: [function(e, t, r) {
                        (function(e) {
                            "use strict";

                            function i(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var n = function() {
                                function e(e, t) {
                                    var n = [];
                                    var r = true;
                                    var i = false;
                                    var s = undefined;
                                    try {
                                        for (var o = e[Symbol.iterator](), u; !(r = (u = o.next()).done); r = true) {
                                            n.push(u.value);
                                            if (t && n.length === t)
                                                break
                                        }
                                    } catch (a) {
                                        i = true;
                                        s = a
                                    } finally {
                                        try {
                                            if (!r && o["return"])
                                                o["return"]()
                                        } finally {
                                            if (i)
                                                throw s
                                        }
                                    }
                                    return n
                                }
                                return function(t, n) {
                                    if (Array.isArray(t)) {
                                        return t
                                    } else if (Symbol.iterator in Object(t)) {
                                        return e(t, n)
                                    } else {
                                        throw new TypeError("Invalid attempt to destructure non-iterable instance")
                                    }
                                }
                            }();
                            var s = typeof window !== "undefined" ? window["videojs"] : typeof e !== "undefined" ? e["videojs"] : null;
                            var o = i(s);
                            var u = 1 / 30;
                            var a = u * 3;
                            var f = function(t, r) {
                                var i = n(r, 2);
                                var s = i[0];
                                var o = i[1];
                                return Math.min(Math.max(s, t), o)
                            };
                            var l = function(t, n) {
                                var r = [];
                                var i = undefined;
                                if (t && t.length) {
                                    for (i = 0; i < t.length; i++) {
                                        if (n(t.start(i), t.end(i))) {
                                            r.push([t.start(i), t.end(i)])
                                        }
                                    }
                                }
                                return o["default"].createTimeRanges(r)
                            };
                            var c = function(t, n) {
                                return l(t, function(e, t) {
                                    return e - u <= n && t + u >= n
                                })
                            };
                            var h = function(t, n) {
                                return l(t, function(e) {
                                    return e - u >= n
                                })
                            };
                            var p = function(t) {
                                if (t.length < 2) {
                                    return o["default"].createTimeRanges()
                                }
                                var n = [];
                                for (var r = 1; r < t.length; r++) {
                                    var i = t.end(r - 1);
                                    var s = t.start(r);
                                    n.push([i, s])
                                }
                                return o["default"].createTimeRanges(n)
                            };
                            var d = function(t, n) {
                                var r = undefined;
                                var i = undefined;
                                var s = undefined;
                                var o = [];
                                var u = [];
                                var a = function(t) {
                                    return t[0] <= s && t[1] >= s
                                };
                                if (t) {
                                    for (r = 0; r < t.length; r++) {
                                        i = t.start(r);
                                        s = t.end(r);
                                        u.push([i, s])
                                    }
                                }
                                if (n) {
                                    for (r = 0; r < n.length; r++) {
                                        i = n.start(r);
                                        s = n.end(r);
                                        if (u.some(a)) {
                                            continue
                                        }
                                        o.push(s)
                                    }
                                }
                                if (o.length !== 1) {
                                    return null
                                }
                                return o[0]
                            };
                            var v = function(t, n) {
                                var r = null;
                                var i = null;
                                var s = 0;
                                var u = [];
                                var a = [];
                                if (!t || !t.length || !n || !n.length) {
                                    return o["default"].createTimeRange()
                                }
                                var f = t.length;
                                while (f--) {
                                    u.push({
                                        time: t.start(f),
                                        type: "start"
                                    });
                                    u.push({
                                        time: t.end(f),
                                        type: "end"
                                    })
                                }
                                f = n.length;
                                while (f--) {
                                    u.push({
                                        time: n.start(f),
                                        type: "start"
                                    });
                                    u.push({
                                        time: n.end(f),
                                        type: "end"
                                    })
                                }
                                u.sort(function(e, t) {
                                    return e.time - t.time
                                });
                                for (f = 0; f < u.length; f++) {
                                    if (u[f].type === "start") {
                                        s++;
                                        if (s === 2) {
                                            r = u[f].time
                                        }
                                    } else if (u[f].type === "end") {
                                        s--;
                                        if (s === 1) {
                                            i = u[f].time
                                        }
                                    }
                                    if (r !== null && i !== null) {
                                        a.push([r, i]);
                                        r = null;
                                        i = null
                                    }
                                }
                                return o["default"].createTimeRanges(a)
                            };
                            var m = function(t, n, r, i) {
                                var s = n.end(0) - n.start(0);
                                var o = t.end(0) - t.start(0);
                                var u = s - o;
                                var a = v(t, i);
                                var f = v(n, i);
                                var l = 0;
                                var c = 0;
                                var h = a.length;
                                while (h--) {
                                    l += a.end(h) - a.start(h);
                                    if (a.start(h) === r) {
                                        l += u
                                    }
                                }
                                h = f.length;
                                while (h--) {
                                    c += f.end(h) - f.start(h)
                                }
                                return Math.max(l, c) / s * 100
                            };
                            var g = function(t, n, r, i) {
                                var s = t + n;
                                var u = o["default"].createTimeRanges([
                                    [t, s]
                                ]);
                                var a = o["default"].createTimeRanges([
                                    [f(t, [r, s]), s]
                                ]);
                                if (a.start(0) === a.end(0)) {
                                    return 0
                                }
                                var l = m(a, u, r, i);
                                if (isNaN(l) || l === Infinity || l === -Infinity) {
                                    return 0
                                }
                                return l
                            };
                            var y = function(t) {
                                var n = [];
                                if (!t || !t.length) {
                                    return ""
                                }
                                for (var r = 0; r < t.length; r++) {
                                    n.push(t.start(r) + " => " + t.end(r))
                                }
                                return n.join(", ")
                            };
                            var b = function(t, n) {
                                var r = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];
                                var i = t.length ? t.end(t.length - 1) : 0;
                                return (i - n) / r
                            };
                            r["default"] = {
                                findRange: c,
                                findNextRange: h,
                                findGaps: p,
                                findSoleUncommonTimeRangesEnd: d,
                                getSegmentBufferedPercent: g,
                                TIME_FUDGE_FACTOR: u,
                                SAFE_TIME_DELTA: a,
                                printableRange: y,
                                timeUntilRebuffer: b
                            };
                            t.exports = r["default"]
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {}],
                    13: [function(e, t, r) {
                        (function(e) {
                            "use strict";

                            function n(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = typeof window !== "undefined" ? window["videojs"] : typeof e !== "undefined" ? e["videojs"] : null;
                            var s = n(i);
                            var o = {
                                errorInterval: 30,
                                getSource: function(t) {
                                    var n = this.tech({
                                        IWillNotUseThisInPlugins: true
                                    });
                                    var r = n.currentSource_;
                                    return t(r)
                                }
                            };
                            var u = function f(e, t) {
                                var n = 0;
                                var r = 0;
                                var i = s["default"].mergeOptions(o, t);
                                e.ready(function() {
                                    e.trigger({
                                        type: "usage",
                                        name: "hls-error-reload-initialized"
                                    })
                                });
                                var u = function() {
                                    if (r) {
                                        e.currentTime(r)
                                    }
                                };
                                var a = function(n) {
                                    if (n === null || n === undefined) {
                                        return
                                    }
                                    r = e.duration() !== Infinity && e.currentTime() || 0;
                                    e.one("loadedmetadata", u);
                                    e.src(n);
                                    e.trigger({
                                        type: "usage",
                                        name: "hls-error-reload"
                                    });
                                    e.play()
                                };
                                var l = function() {
                                    if (Date.now() - n < i.errorInterval * 1e3) {
                                        e.trigger({
                                            type: "usage",
                                            name: "hls-error-reload-canceled"
                                        });
                                        return
                                    }
                                    if (!i.getSource || typeof i.getSource !== "function") {
                                        s["default"].log.error("ERROR: reloadSourceOnError - The option getSource must be a function!");
                                        return
                                    }
                                    n = Date.now();
                                    return i.getSource.call(e, a)
                                };
                                var c = function p() {
                                    e.off("loadedmetadata", u);
                                    e.off("error", l);
                                    e.off("dispose", p)
                                };
                                var h = function(n) {
                                    c();
                                    f(e, n)
                                };
                                e.on("error", l);
                                e.on("dispose", c);
                                e.reloadSourceOnError = h
                            };
                            var a = function(t) {
                                u(this, t)
                            };
                            r["default"] = a;
                            t.exports = r["default"]
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {}],
                    14: [function(e, t, n) {
                        "use strict";

                        function r(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var i = e("./playlist.js");
                        var s = function(t, n, r) {
                            return function(e) {
                                var s = t.master.playlists[n];
                                var o = (0,
                                    i.isIncompatible)(s);
                                var u = (0,
                                    i.isEnabled)(s);
                                if (typeof e === "undefined") {
                                    return u
                                }
                                if (e) {
                                    delete s.disabled
                                } else {
                                    s.disabled = true
                                }
                                if (e !== u && !o) {
                                    r();
                                    if (e) {
                                        t.trigger("renditionenabled")
                                    } else {
                                        t.trigger("renditiondisabled")
                                    }
                                }
                                return e
                            }
                        };
                        var o = function a(e, t, n) {
                            r(this, a);
                            var i = e.masterPlaylistController_.fastQualityChange_.bind(e.masterPlaylistController_);
                            if (t.attributes.RESOLUTION) {
                                var o = t.attributes.RESOLUTION;
                                this.width = o.width;
                                this.height = o.height
                            }
                            this.bandwidth = t.attributes.BANDWIDTH;
                            this.id = n;
                            this.enabled = s(e.playlists, t.uri, i)
                        };
                        var u = function(t) {
                            var n = t.playlists;
                            t.representations = function() {
                                return n.master.playlists.filter(function(e) {
                                    return !(0,
                                        i.isIncompatible)(e)
                                }).map(function(e, n) {
                                    return new o(t, e, e.uri)
                                })
                            }
                        };
                        n["default"] = u;
                        t.exports = n["default"]
                    }, {
                        "./playlist.js": 11
                    }],
                    15: [function(e, t, n) {
                        "use strict";

                        function r(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var i = e("url-toolkit");
                        var s = r(i);
                        var o = e("global/window");
                        var u = r(o);
                        var a = function(t, n) {
                            if (/^[a-z]+:/i.test(n)) {
                                return n
                            }
                            if (!/\/\//i.test(t)) {
                                t = s["default"].buildAbsoluteURL(u["default"].location.href, t)
                            }
                            return s["default"].buildAbsoluteURL(t, n)
                        };
                        n["default"] = a;
                        t.exports = n["default"]
                    }, {
                        "global/window": 32,
                        "url-toolkit": 63
                    }],
                    16: [function(e, t, r) {
                        (function(t) {
                            "use strict";

                            function s(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function o(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }

                            function a(e, t) {
                                if (typeof t !== "function" && t !== null) {
                                    throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                                }
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: false,
                                        writable: true,
                                        configurable: true
                                    }
                                });
                                if (t)
                                    Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var n = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var i = function(t, n, r) {
                                var i = true;
                                e: while (i) {
                                    var s = t,
                                        o = n,
                                        u = r;
                                    i = false;
                                    if (s === null)
                                        s = Function.prototype;
                                    var a = Object.getOwnPropertyDescriptor(s, o);
                                    if (a === undefined) {
                                        var f = Object.getPrototypeOf(s);
                                        if (f === null) {
                                            return undefined
                                        } else {
                                            t = f;
                                            n = o;
                                            r = u;
                                            i = true;
                                            a = f = undefined;
                                            continue e
                                        }
                                    } else if ("value" in a) {
                                        return a.value
                                    } else {
                                        var l = a.get;
                                        if (l === undefined) {
                                            return undefined
                                        }
                                        return l.call(u)
                                    }
                                }
                            };
                            var f = e("./playlist");
                            var l = s(f);
                            var c = typeof window !== "undefined" ? window["videojs"] : typeof t !== "undefined" ? t["videojs"] : null;
                            var h = s(c);
                            var p = e("./source-updater");
                            var d = s(p);
                            var v = e("./config");
                            var m = s(v);
                            var g = e("global/window");
                            var y = s(g);
                            var b = e("videojs-contrib-media-sources/es5/remove-cues-from-track.js");
                            var w = s(b);
                            var E = e("./bin-utils");
                            var S = e("./media-segment-request");
                            var x = e("./ranges");
                            var T = e("./playlist-selectors");
                            var N = 500;
                            var C = function(t, n, r) {
                                if (!t || !n) {
                                    return false
                                }
                                var i = t.segments;
                                var s = r === i.length;
                                return t.endList && n.readyState === "open" && s
                            };
                            var k = function(t) {
                                return typeof t === "number" && isFinite(t)
                            };
                            var L = function(t, n, r) {
                                if (t !== "main" || !n || !r) {
                                    return null
                                }
                                if (!r.containsAudio && !r.containsVideo) {
                                    return "Neither audio nor video found in segment."
                                }
                                if (n.containsVideo && !r.containsVideo) {
                                    return "Only audio found in segment when we expected video." + " We can't switch to audio only from a stream that had video." + " To get rid of this message, please add codec information to the manifest."
                                }
                                if (!n.containsVideo && r.containsVideo) {
                                    return "Video found in segment when we expected only audio." + " We can't switch to a stream with video from an audio only stream." + " To get rid of this message, please add codec information to the manifest."
                                }
                                return null
                            };
                            r.illegalMediaSwitch = L;
                            var A = function(t, n, r) {
                                var i = undefined;
                                if (t.length && t.start(0) > 0 && t.start(0) < n) {
                                    i = t.start(0)
                                } else {
                                    i = n - 30
                                }
                                return Math.min(i, n - r)
                            };
                            r.safeBackBufferTrimTime = A;
                            var O = function(e) {
                                function t(e) {
                                    var n = this;
                                    var r = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                                    o(this, t);
                                    i(Object.getPrototypeOf(t.prototype), "constructor", this).call(this);
                                    if (!e) {
                                        throw new TypeError("Initialization settings are required")
                                    }
                                    if (typeof e.currentTime !== "function") {
                                        throw new TypeError("No currentTime getter specified")
                                    }
                                    if (!e.mediaSource) {
                                        throw new TypeError("No MediaSource specified")
                                    }
                                    this.state = "INIT";
                                    this.bandwidth = e.bandwidth;
                                    this.throughput = {
                                        rate: 0,
                                        count: 0
                                    };
                                    this.roundTrip = NaN;
                                    this.resetStats_();
                                    this.mediaIndex = null;
                                    this.hasPlayed_ = e.hasPlayed;
                                    this.currentTime_ = e.currentTime;
                                    this.seekable_ = e.seekable;
                                    this.seeking_ = e.seeking;
                                    this.duration_ = e.duration;
                                    this.mediaSource_ = e.mediaSource;
                                    this.hls_ = e.hls;
                                    this.loaderType_ = e.loaderType;
                                    this.startingMedia_ = void 0;
                                    this.segmentMetadataTrack_ = e.segmentMetadataTrack;
                                    this.goalBufferLength_ = e.goalBufferLength;
                                    this.checkBufferTimeout_ = null;
                                    this.error_ = void 0;
                                    this.currentTimeline_ = -1;
                                    this.pendingSegment_ = null;
                                    this.mimeType_ = null;
                                    this.sourceUpdater_ = null;
                                    this.xhrOptions_ = null;
                                    this.activeInitSegmentId_ = null;
                                    this.initSegments_ = {};
                                    this.decrypter_ = e.decrypter;
                                    this.syncController_ = e.syncController;
                                    this.syncPoint_ = {
                                        segmentIndex: 0,
                                        time: 0
                                    };
                                    this.syncController_.on("syncinfoupdate", function() {
                                        return n.trigger("syncinfoupdate")
                                    });
                                    this.mediaSource_.addEventListener("sourceopen", function() {
                                        return n.ended_ = false
                                    });
                                    this.fetchAtBuffer_ = false;
                                    if (r.debug) {
                                        this.logger_ = h["default"].log.bind(h["default"], "segment-loader", this.loaderType_, "->")
                                    }
                                }
                                a(t, e);
                                n(t, [{
                                    key: "resetStats_",
                                    value: function() {
                                        this.mediaBytesTransferred = 0;
                                        this.mediaRequests = 0;
                                        this.mediaRequestsAborted = 0;
                                        this.mediaRequestsTimedout = 0;
                                        this.mediaRequestsErrored = 0;
                                        this.mediaTransferDuration = 0;
                                        this.mediaSecondsLoaded = 0
                                    }
                                }, {
                                    key: "dispose",
                                    value: function() {
                                        this.state = "DISPOSED";
                                        this.pause();
                                        this.abort_();
                                        if (this.sourceUpdater_) {
                                            this.sourceUpdater_.dispose()
                                        }
                                        this.resetStats_()
                                    }
                                }, {
                                    key: "abort",
                                    value: function() {
                                        if (this.state !== "WAITING") {
                                            if (this.pendingSegment_) {
                                                this.pendingSegment_ = null
                                            }
                                            return
                                        }
                                        this.abort_();
                                        this.state = "READY";
                                        if (!this.paused()) {
                                            this.monitorBuffer_()
                                        }
                                    }
                                }, {
                                    key: "abort_",
                                    value: function() {
                                        if (this.pendingSegment_) {
                                            this.pendingSegment_.abortRequests()
                                        }
                                        this.pendingSegment_ = null
                                    }
                                }, {
                                    key: "error",
                                    value: function(t) {
                                        if (typeof t !== "undefined") {
                                            this.error_ = t
                                        }
                                        this.pendingSegment_ = null;
                                        return this.error_
                                    }
                                }, {
                                    key: "endOfStream",
                                    value: function() {
                                        this.ended_ = true;
                                        this.pause();
                                        this.trigger("ended")
                                    }
                                }, {
                                    key: "buffered_",
                                    value: function() {
                                        if (!this.sourceUpdater_) {
                                            return h["default"].createTimeRanges()
                                        }
                                        return this.sourceUpdater_.buffered()
                                    }
                                }, {
                                    key: "initSegment",
                                    value: function(t) {
                                        var n = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
                                        if (!t) {
                                            return null
                                        }
                                        var r = (0,
                                            E.initSegmentId)(t);
                                        var i = this.initSegments_[r];
                                        if (n && !i && t.bytes) {
                                            this.initSegments_[r] = i = {
                                                resolvedUri: t.resolvedUri,
                                                byterange: t.byterange,
                                                bytes: t.bytes
                                            }
                                        }
                                        return i || t
                                    }
                                }, {
                                    key: "couldBeginLoading_",
                                    value: function() {
                                        return this.playlist_ && (this.sourceUpdater_ || this.mimeType_ && this.state === "INIT") && !this.paused()
                                    }
                                }, {
                                    key: "load",
                                    value: function() {
                                        this.monitorBuffer_();
                                        if (!this.playlist_) {
                                            return
                                        }
                                        this.syncController_.setDateTimeMapping(this.playlist_);
                                        if (this.state === "INIT" && this.couldBeginLoading_()) {
                                            return this.init_()
                                        }
                                        if (!this.couldBeginLoading_() || this.state !== "READY" && this.state !== "INIT") {
                                            return
                                        }
                                        this.state = "READY"
                                    }
                                }, {
                                    key: "init_",
                                    value: function() {
                                        this.state = "READY";
                                        this.sourceUpdater_ = new d["default"](this.mediaSource_, this.mimeType_);
                                        this.resetEverything();
                                        return this.monitorBuffer_()
                                    }
                                }, {
                                    key: "playlist",
                                    value: function(t) {
                                        var n = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                                        if (!t) {
                                            return
                                        }
                                        var r = this.playlist_;
                                        var i = this.pendingSegment_;
                                        this.playlist_ = t;
                                        this.xhrOptions_ = n;
                                        if (!this.hasPlayed_()) {
                                            t.syncInfo = {
                                                mediaSequence: t.mediaSequence,
                                                time: 0
                                            }
                                        }
                                        this.trigger("syncinfoupdate");
                                        if (this.state === "INIT" && this.couldBeginLoading_()) {
                                            return this.init_()
                                        }
                                        if (!r || r.uri !== t.uri) {
                                            if (this.mediaIndex !== null) {
                                                this.resyncLoader()
                                            }
                                            return
                                        }
                                        var s = t.mediaSequence - r.mediaSequence;
                                        this.logger_("mediaSequenceDiff", s);
                                        if (this.mediaIndex !== null) {
                                            this.mediaIndex -= s
                                        }
                                        if (i) {
                                            i.mediaIndex -= s;
                                            if (i.mediaIndex >= 0) {
                                                i.segment = t.segments[i.mediaIndex]
                                            }
                                        }
                                        this.syncController_.saveExpiredSegmentInfo(r, t)
                                    }
                                }, {
                                    key: "pause",
                                    value: function() {
                                        if (this.checkBufferTimeout_) {
                                            y["default"].clearTimeout(this.checkBufferTimeout_);
                                            this.checkBufferTimeout_ = null
                                        }
                                    }
                                }, {
                                    key: "paused",
                                    value: function() {
                                        return this.checkBufferTimeout_ === null
                                    }
                                }, {
                                    key: "mimeType",
                                    value: function(t) {
                                        if (this.mimeType_) {
                                            return
                                        }
                                        this.mimeType_ = t;
                                        if (this.state === "INIT" && this.couldBeginLoading_()) {
                                            this.init_()
                                        }
                                    }
                                }, {
                                    key: "resetEverything",
                                    value: function() {
                                        this.ended_ = false;
                                        this.resetLoader();
                                        this.remove(0, this.duration_());
                                        this.trigger("reseteverything")
                                    }
                                }, {
                                    key: "resetLoader",
                                    value: function() {
                                        this.fetchAtBuffer_ = false;
                                        this.resyncLoader()
                                    }
                                }, {
                                    key: "resyncLoader",
                                    value: function() {
                                        this.mediaIndex = null;
                                        this.syncPoint_ = null;
                                        this.abort()
                                    }
                                }, {
                                    key: "remove",
                                    value: function(t, n) {
                                        if (this.sourceUpdater_) {
                                            this.sourceUpdater_.remove(t, n)
                                        }
                                        (0,
                                            w["default"])(t, n, this.segmentMetadataTrack_)
                                    }
                                }, {
                                    key: "monitorBuffer_",
                                    value: function() {
                                        if (this.checkBufferTimeout_) {
                                            y["default"].clearTimeout(this.checkBufferTimeout_)
                                        }
                                        this.checkBufferTimeout_ = y["default"].setTimeout(this.monitorBufferTick_.bind(this), 1)
                                    }
                                }, {
                                    key: "monitorBufferTick_",
                                    value: function() {
                                        if (this.state === "READY") {
                                            this.fillBuffer_()
                                        }
                                        if (this.checkBufferTimeout_) {
                                            y["default"].clearTimeout(this.checkBufferTimeout_)
                                        }
                                        this.checkBufferTimeout_ = y["default"].setTimeout(this.monitorBufferTick_.bind(this), N)
                                    }
                                }, {
                                    key: "fillBuffer_",
                                    value: function() {
                                        if (this.sourceUpdater_.updating()) {
                                            return
                                        }
                                        if (!this.syncPoint_) {
                                            this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_())
                                        }
                                        var t = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
                                        if (!t) {
                                            return
                                        }
                                        var n = C(this.playlist_, this.mediaSource_, t.mediaIndex);
                                        if (n) {
                                            this.endOfStream();
                                            return
                                        }
                                        if (t.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === "ended" && !this.seeking_()) {
                                            return
                                        }
                                        if (t.timeline !== this.currentTimeline_ || t.startOfSegment !== null && t.startOfSegment < this.sourceUpdater_.timestampOffset()) {
                                            this.syncController_.reset();
                                            t.timestampOffset = t.startOfSegment
                                        }
                                        this.loadSegment_(t)
                                    }
                                }, {
                                    key: "checkBuffer_",
                                    value: function(t, n, r, i, s, o) {
                                        var u = 0;
                                        var a = undefined;
                                        if (t.length) {
                                            u = t.end(t.length - 1)
                                        }
                                        var f = Math.max(0, u - s);
                                        if (!n.segments.length) {
                                            return null
                                        }
                                        if (f >= this.goalBufferLength_()) {
                                            return null
                                        }
                                        if (!i && f >= 1) {
                                            return null
                                        }
                                        this.logger_("checkBuffer_", "mediaIndex:", r, "hasPlayed:", i, "currentTime:", s, "syncPoint:", o, "fetchAtBuffer:", this.fetchAtBuffer_, "bufferedTime:", f);
                                        if (o === null) {
                                            r = this.getSyncSegmentCandidate_(n);
                                            this.logger_("getSync", "mediaIndex:", r);
                                            return this.generateSegmentInfo_(n, r, null, true)
                                        }
                                        if (r !== null) {
                                            this.logger_("walkForward", "mediaIndex:", r + 1);
                                            var c = n.segments[r];
                                            if (c && c.end) {
                                                a = c.end
                                            } else {
                                                a = u
                                            }
                                            return this.generateSegmentInfo_(n, r + 1, a, false)
                                        }
                                        if (this.fetchAtBuffer_) {
                                            var h = l["default"].getMediaInfoForTime(n, u, o.segmentIndex, o.time);
                                            r = h.mediaIndex;
                                            a = h.startTime
                                        } else {
                                            var h = l["default"].getMediaInfoForTime(n, s, o.segmentIndex, o.time);
                                            r = h.mediaIndex;
                                            a = h.startTime
                                        }
                                        this.logger_("getMediaIndexForTime", "mediaIndex:", r, "startOfSegment:", a);
                                        return this.generateSegmentInfo_(n, r, a, false)
                                    }
                                }, {
                                    key: "getSyncSegmentCandidate_",
                                    value: function(t) {
                                        var n = this;
                                        if (this.currentTimeline_ === -1) {
                                            return 0
                                        }
                                        var r = t.segments.map(function(e, t) {
                                            return {
                                                timeline: e.timeline,
                                                segmentIndex: t
                                            }
                                        }).filter(function(e) {
                                            return e.timeline === n.currentTimeline_
                                        });
                                        if (r.length) {
                                            return r[Math.min(r.length - 1, 1)].segmentIndex
                                        }
                                        return Math.max(t.segments.length - 1, 0)
                                    }
                                }, {
                                    key: "generateSegmentInfo_",
                                    value: function(t, n, r, i) {
                                        if (n < 0 || n >= t.segments.length) {
                                            return null
                                        }
                                        var s = t.segments[n];
                                        return {
                                            requestId: "segment-loader-" + Math.random(),
                                            uri: s.resolvedUri,
                                            mediaIndex: n,
                                            isSyncRequest: i,
                                            startOfSegment: r,
                                            playlist: t,
                                            bytes: null,
                                            encryptedBytes: null,
                                            timestampOffset: null,
                                            timeline: s.timeline,
                                            duration: s.duration,
                                            segment: s
                                        }
                                    }
                                }, {
                                    key: "abortRequestEarly_",
                                    value: function(t) {
                                        if (this.hls_.tech_.paused() || !this.xhrOptions_.timeout || !this.playlist_.attributes.BANDWIDTH) {
                                            return false
                                        }
                                        if (Date.now() - (t.firstBytesReceivedAt || Date.now()) < 1e3) {
                                            return false
                                        }
                                        var n = this.currentTime_();
                                        var r = t.bandwidth;
                                        var i = this.pendingSegment_.duration;
                                        var s = l["default"].estimateSegmentRequestTime(i, r, this.playlist_, t.bytesReceived);
                                        var o = (0,
                                            x.timeUntilRebuffer)(this.buffered_(), n, this.hls_.tech_.playbackRate()) - 1;
                                        if (s <= o) {
                                            return false
                                        }
                                        var u = (0,
                                            T.minRebufferMaxBandwidthSelector)({
                                            master: this.hls_.playlists.master,
                                            currentTime: n,
                                            bandwidth: r,
                                            duration: this.duration_(),
                                            segmentDuration: i,
                                            timeUntilRebuffer: o,
                                            currentTimeline: this.currentTimeline_,
                                            syncController: this.syncController_
                                        });
                                        if (!u) {
                                            return
                                        }
                                        var a = s - o;
                                        var f = a - u.rebufferingImpact;
                                        var c = .5;
                                        if (o <= x.TIME_FUDGE_FACTOR) {
                                            c = 1
                                        }
                                        if (!u.playlist || u.playlist.uri === this.playlist_.uri || f < c) {
                                            return false
                                        }
                                        this.bandwidth = u.playlist.attributes.BANDWIDTH * m["default"].BANDWIDTH_VARIANCE + 1;
                                        this.abort();
                                        this.trigger("earlyabort");
                                        return true
                                    }
                                }, {
                                    key: "handleProgress_",
                                    value: function(t, n) {
                                        if (!this.pendingSegment_ || n.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(n.stats)) {
                                            return
                                        }
                                        this.trigger("progress")
                                    }
                                }, {
                                    key: "loadSegment_",
                                    value: function(t) {
                                        this.state = "WAITING";
                                        this.pendingSegment_ = t;
                                        this.trimBackBuffer_(t);
                                        t.abortRequests = (0,
                                            S.mediaSegmentRequest)(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.createSimplifiedSegmentObj_(t), this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this))
                                    }
                                }, {
                                    key: "trimBackBuffer_",
                                    value: function(t) {
                                        var n = A(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);
                                        if (n > 0) {
                                            this.remove(0, n)
                                        }
                                    }
                                }, {
                                    key: "createSimplifiedSegmentObj_",
                                    value: function(t) {
                                        var n = t.segment;
                                        var r = {
                                            resolvedUri: n.resolvedUri,
                                            byterange: n.byterange,
                                            requestId: t.requestId
                                        };
                                        if (n.key) {
                                            var i = n.key.iv || new Uint32Array([0, 0, 0, t.mediaIndex + t.playlist.mediaSequence]);
                                            r.key = {
                                                resolvedUri: n.key.resolvedUri,
                                                iv: i
                                            }
                                        }
                                        if (n.map) {
                                            r.map = this.initSegment(n.map)
                                        }
                                        return r
                                    }
                                }, {
                                    key: "segmentRequestFinished_",
                                    value: function(t, n) {
                                        this.mediaRequests += 1;
                                        if (n.stats) {
                                            this.mediaBytesTransferred += n.stats.bytesReceived;
                                            this.mediaTransferDuration += n.stats.roundTripTime
                                        }
                                        if (!this.pendingSegment_) {
                                            this.mediaRequestsAborted += 1;
                                            return
                                        }
                                        if (n.requestId !== this.pendingSegment_.requestId) {
                                            return
                                        }
                                        if (t) {
                                            this.pendingSegment_ = null;
                                            this.state = "READY";
                                            if (t.code === S.REQUEST_ERRORS.ABORTED) {
                                                this.mediaRequestsAborted += 1;
                                                return
                                            }
                                            this.pause();
                                            if (t.code === S.REQUEST_ERRORS.TIMEOUT) {
                                                this.mediaRequestsTimedout += 1;
                                                this.bandwidth = 1;
                                                this.roundTrip = NaN;
                                                this.trigger("bandwidthupdate");
                                                return
                                            }
                                            this.mediaRequestsErrored += 1;
                                            this.error(t);
                                            this.trigger("error");
                                            return
                                        }
                                        this.bandwidth = n.stats.bandwidth;
                                        this.roundTrip = n.stats.roundTripTime;
                                        if (n.map) {
                                            n.map = this.initSegment(n.map, true)
                                        }
                                        this.processSegmentResponse_(n)
                                    }
                                }, {
                                    key: "processSegmentResponse_",
                                    value: function(t) {
                                        var n = this.pendingSegment_;
                                        n.bytes = t.bytes;
                                        if (t.map) {
                                            n.segment.map.bytes = t.map.bytes
                                        }
                                        n.endOfAllRequests = t.endOfAllRequests;
                                        this.handleSegment_()
                                    }
                                }, {
                                    key: "handleSegment_",
                                    value: function() {
                                        var t = this;
                                        if (!this.pendingSegment_) {
                                            this.state = "READY";
                                            return
                                        }
                                        var n = this.pendingSegment_;
                                        var r = n.segment;
                                        var i = this.syncController_.probeSegmentInfo(n);
                                        if (typeof this.startingMedia_ === "undefined" && i && (i.containsAudio || i.containsVideo)) {
                                            this.startingMedia_ = {
                                                containsAudio: i.containsAudio,
                                                containsVideo: i.containsVideo
                                            }
                                        }
                                        var s = L(this.loaderType_, this.startingMedia_, i);
                                        if (s) {
                                            this.error({
                                                message: s,
                                                blacklistDuration: Infinity
                                            });
                                            this.trigger("error");
                                            return
                                        }
                                        if (n.isSyncRequest) {
                                            this.trigger("syncinfoupdate");
                                            this.pendingSegment_ = null;
                                            this.state = "READY";
                                            return
                                        }
                                        if (n.timestampOffset !== null && n.timestampOffset !== this.sourceUpdater_.timestampOffset()) {
                                            this.sourceUpdater_.timestampOffset(n.timestampOffset);
                                            this.trigger("timestampoffset")
                                        }
                                        var o = this.syncController_.mappingForTimeline(n.timeline);
                                        if (o !== null) {
                                            this.trigger({
                                                type: "segmenttimemapping",
                                                mapping: o
                                            })
                                        }
                                        this.state = "APPENDING";
                                        if (r.map) {
                                            (function() {
                                                var e = (0,
                                                    E.initSegmentId)(r.map);
                                                if (!t.activeInitSegmentId_ || t.activeInitSegmentId_ !== e) {
                                                    var n = t.initSegment(r.map);
                                                    t.sourceUpdater_.appendBuffer(n.bytes, function() {
                                                        t.activeInitSegmentId_ = e
                                                    })
                                                }
                                            })()
                                        }
                                        n.byteLength = n.bytes.byteLength;
                                        if (typeof r.start === "number" && typeof r.end === "number") {
                                            this.mediaSecondsLoaded += r.end - r.start
                                        } else {
                                            this.mediaSecondsLoaded += r.duration
                                        }
                                        this.sourceUpdater_.appendBuffer(n.bytes, this.handleUpdateEnd_.bind(this))
                                    }
                                }, {
                                    key: "handleUpdateEnd_",
                                    value: function() {
                                        this.logger_("handleUpdateEnd_", "segmentInfo:", this.pendingSegment_);
                                        if (!this.pendingSegment_) {
                                            this.state = "READY";
                                            if (!this.paused()) {
                                                this.monitorBuffer_()
                                            }
                                            return
                                        }
                                        var t = this.pendingSegment_;
                                        var n = t.segment;
                                        var r = this.mediaIndex !== null;
                                        this.pendingSegment_ = null;
                                        this.recordThroughput_(t);
                                        this.addSegmentMetadataCue_(t);
                                        this.state = "READY";
                                        this.mediaIndex = t.mediaIndex;
                                        this.fetchAtBuffer_ = true;
                                        this.currentTimeline_ = t.timeline;
                                        this.trigger("syncinfoupdate");
                                        if (n.end && this.currentTime_() - n.end > t.playlist.targetDuration * 3) {
                                            this.resetEverything();
                                            return
                                        }
                                        if (r) {
                                            this.trigger("bandwidthupdate")
                                        }
                                        this.trigger("progress");
                                        var i = C(t.playlist, this.mediaSource_, t.mediaIndex + 1);
                                        if (i) {
                                            this.endOfStream()
                                        }
                                        if (!this.paused()) {
                                            this.monitorBuffer_()
                                        }
                                    }
                                }, {
                                    key: "recordThroughput_",
                                    value: function(t) {
                                        var n = this.throughput.rate;
                                        var r = Date.now() - t.endOfAllRequests + 1;
                                        var i = Math.floor(t.byteLength / r * 8 * 1e3);
                                        this.throughput.rate += (i - n) / ++this.throughput.count
                                    }
                                }, {
                                    key: "logger_",
                                    value: function() {}
                                }, {
                                    key: "addSegmentMetadataCue_",
                                    value: function(t) {
                                        if (!this.segmentMetadataTrack_) {
                                            return
                                        }
                                        var n = t.segment;
                                        var r = n.start;
                                        var i = n.end;
                                        if (!k(r) || !k(i)) {
                                            return
                                        }
                                        (0,
                                            w["default"])(r, i, this.segmentMetadataTrack_);
                                        var s = y["default"].WebKitDataCue || y["default"].VTTCue;
                                        var o = {
                                            uri: t.uri,
                                            timeline: t.timeline,
                                            playlist: t.playlist.uri,
                                            start: r,
                                            end: i
                                        };
                                        var u = JSON.stringify(o);
                                        var a = new s(r, i, u);
                                        a.value = o;
                                        this.segmentMetadataTrack_.addCue(a)
                                    }
                                }]);
                                return t
                            }(h["default"].EventTarget);
                            r["default"] = O
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./bin-utils": 2,
                        "./config": 3,
                        "./media-segment-request": 7,
                        "./playlist": 11,
                        "./playlist-selectors": 10,
                        "./ranges": 12,
                        "./source-updater": 17,
                        "global/window": 32,
                        "videojs-contrib-media-sources/es5/remove-cues-from-track.js": 72
                    }],
                    17: [function(e, t, r) {
                        (function(e) {
                            "use strict";

                            function i(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function s(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var n = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var o = typeof window !== "undefined" ? window["videojs"] : typeof e !== "undefined" ? e["videojs"] : null;
                            var u = i(o);
                            var a = function() {};
                            var f = function() {
                                function e(t, n) {
                                    var r = this;
                                    s(this, e);
                                    var i = function() {
                                        r.sourceBuffer_ = t.addSourceBuffer(n);
                                        r.onUpdateendCallback_ = function() {
                                            var e = r.pendingCallback_;
                                            r.pendingCallback_ = null;
                                            if (e) {
                                                e()
                                            }
                                            r.runCallback_()
                                        };
                                        r.sourceBuffer_.addEventListener("updateend", r.onUpdateendCallback_);
                                        r.runCallback_()
                                    };
                                    this.callbacks_ = [];
                                    this.pendingCallback_ = null;
                                    this.timestampOffset_ = 0;
                                    this.mediaSource = t;
                                    this.processedAppend_ = false;
                                    if (t.readyState === "closed") {
                                        t.addEventListener("sourceopen", i)
                                    } else {
                                        i()
                                    }
                                }
                                n(e, [{
                                    key: "abort",
                                    value: function(t) {
                                        var n = this;
                                        if (this.processedAppend_) {
                                            this.queueCallback_(function() {
                                                n.sourceBuffer_.abort()
                                            }, t)
                                        }
                                    }
                                }, {
                                    key: "appendBuffer",
                                    value: function(t, n) {
                                        var r = this;
                                        this.processedAppend_ = true;
                                        this.queueCallback_(function() {
                                            r.sourceBuffer_.appendBuffer(t)
                                        }, n)
                                    }
                                }, {
                                    key: "buffered",
                                    value: function() {
                                        if (!this.sourceBuffer_) {
                                            return u["default"].createTimeRanges()
                                        }
                                        return this.sourceBuffer_.buffered
                                    }
                                }, {
                                    key: "remove",
                                    value: function(t, n) {
                                        var r = this;
                                        if (this.processedAppend_) {
                                            this.queueCallback_(function() {
                                                r.sourceBuffer_.remove(t, n)
                                            }, a)
                                        }
                                    }
                                }, {
                                    key: "updating",
                                    value: function() {
                                        return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_
                                    }
                                }, {
                                    key: "timestampOffset",
                                    value: function(t) {
                                        var n = this;
                                        if (typeof t !== "undefined") {
                                            this.queueCallback_(function() {
                                                n.sourceBuffer_.timestampOffset = t
                                            });
                                            this.timestampOffset_ = t
                                        }
                                        return this.timestampOffset_
                                    }
                                }, {
                                    key: "queueCallback_",
                                    value: function(t, n) {
                                        this.callbacks_.push([t.bind(this), n]);
                                        this.runCallback_()
                                    }
                                }, {
                                    key: "runCallback_",
                                    value: function() {
                                        var t = undefined;
                                        if (!this.updating() && this.callbacks_.length) {
                                            t = this.callbacks_.shift();
                                            this.pendingCallback_ = t[1];
                                            t[0]()
                                        }
                                    }
                                }, {
                                    key: "dispose",
                                    value: function() {
                                        this.sourceBuffer_.removeEventListener("updateend", this.onUpdateendCallback_);
                                        if (this.sourceBuffer_ && this.mediaSource.readyState === "open") {
                                            this.sourceBuffer_.abort()
                                        }
                                    }
                                }]);
                                return e
                            }();
                            r["default"] = f;
                            t.exports = r["default"]
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {}],
                    18: [function(e, t, r) {
                        (function(t) {
                            "use strict";

                            function s(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function o(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }

                            function a(e, t) {
                                if (typeof t !== "function" && t !== null) {
                                    throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                                }
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: false,
                                        writable: true,
                                        configurable: true
                                    }
                                });
                                if (t)
                                    Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var n = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var i = function(t, n, r) {
                                var i = true;
                                e: while (i) {
                                    var s = t,
                                        o = n,
                                        u = r;
                                    i = false;
                                    if (s === null)
                                        s = Function.prototype;
                                    var a = Object.getOwnPropertyDescriptor(s, o);
                                    if (a === undefined) {
                                        var f = Object.getPrototypeOf(s);
                                        if (f === null) {
                                            return undefined
                                        } else {
                                            t = f;
                                            n = o;
                                            r = u;
                                            i = true;
                                            a = f = undefined;
                                            continue e
                                        }
                                    } else if ("value" in a) {
                                        return a.value
                                    } else {
                                        var l = a.get;
                                        if (l === undefined) {
                                            return undefined
                                        }
                                        return l.call(u)
                                    }
                                }
                            };
                            var f = e("mux.js/lib/mp4/probe");
                            var l = s(f);
                            var c = e("mux.js/lib/tools/ts-inspector.js");
                            var h = e("./playlist");
                            var p = typeof window !== "undefined" ? window["videojs"] : typeof t !== "undefined" ? t["videojs"] : null;
                            var d = s(p);
                            var v = [{
                                name: "VOD",
                                run: function(t, n, r, i, s) {
                                    if (r !== Infinity) {
                                        var o = {
                                            time: 0,
                                            segmentIndex: 0
                                        };
                                        return o
                                    }
                                    return null
                                }
                            }, {
                                name: "ProgramDateTime",
                                run: function(t, n, r, i, s) {
                                    if (t.datetimeToDisplayTime && n.dateTimeObject) {
                                        var o = n.dateTimeObject.getTime() / 1e3;
                                        var u = o + t.datetimeToDisplayTime;
                                        var a = {
                                            time: u,
                                            segmentIndex: 0
                                        };
                                        return a
                                    }
                                    return null
                                }
                            }, {
                                name: "Segment",
                                run: function(t, n, r, i, s) {
                                    var o = n.segments || [];
                                    var u = null;
                                    var a = null;
                                    s = s || 0;
                                    for (var f = 0; f < o.length; f++) {
                                        var l = o[f];
                                        if (l.timeline === i && typeof l.start !== "undefined") {
                                            var c = Math.abs(s - l.start);
                                            if (a !== null && a < c) {
                                                break
                                            }
                                            if (!u || a === null || a >= c) {
                                                a = c;
                                                u = {
                                                    time: l.start,
                                                    segmentIndex: f
                                                }
                                            }
                                        }
                                    }
                                    return u
                                }
                            }, {
                                name: "Discontinuity",
                                run: function(t, n, r, i, s) {
                                    var o = null;
                                    s = s || 0;
                                    if (n.discontinuityStarts && n.discontinuityStarts.length) {
                                        var u = null;
                                        for (var a = 0; a < n.discontinuityStarts.length; a++) {
                                            var f = n.discontinuityStarts[a];
                                            var l = n.discontinuitySequence + a + 1;
                                            var c = t.discontinuities[l];
                                            if (c) {
                                                var h = Math.abs(s - c.time);
                                                if (u !== null && u < h) {
                                                    break
                                                }
                                                if (!o || u === null || u >= h) {
                                                    u = h;
                                                    o = {
                                                        time: c.time,
                                                        segmentIndex: f
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    return o
                                }
                            }, {
                                name: "Playlist",
                                run: function(t, n, r, i, s) {
                                    if (n.syncInfo) {
                                        var o = {
                                            time: n.syncInfo.time,
                                            segmentIndex: n.syncInfo.mediaSequence - n.mediaSequence
                                        };
                                        return o
                                    }
                                    return null
                                }
                            }];
                            r.syncPointStrategies = v;
                            var m = function(e) {
                                function t() {
                                    var e = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
                                    o(this, t);
                                    i(Object.getPrototypeOf(t.prototype), "constructor", this).call(this);
                                    this.inspectCache_ = undefined;
                                    this.timelines = [];
                                    this.discontinuities = [];
                                    this.datetimeToDisplayTime = null;
                                    if (e.debug) {
                                        this.logger_ = d["default"].log.bind(d["default"], "sync-controller ->")
                                    }
                                }
                                a(t, e);
                                n(t, [{
                                    key: "getSyncPoint",
                                    value: function(t, n, r, i) {
                                        var s = this.runStrategies_(t, n, r, i);
                                        if (!s.length) {
                                            return null
                                        }
                                        return this.selectSyncPoint_(s, {
                                            key: "time",
                                            value: i
                                        })
                                    }
                                }, {
                                    key: "getExpiredTime",
                                    value: function(t, n) {
                                        if (!t || !t.segments) {
                                            return null
                                        }
                                        var r = this.runStrategies_(t, n, t.discontinuitySequence, 0);
                                        if (!r.length) {
                                            return null
                                        }
                                        var i = this.selectSyncPoint_(r, {
                                            key: "segmentIndex",
                                            value: 0
                                        });
                                        if (i.segmentIndex > 0) {
                                            i.time *= -1
                                        }
                                        return Math.abs(i.time + (0,
                                            h.sumDurations)(t, i.segmentIndex, 0))
                                    }
                                }, {
                                    key: "runStrategies_",
                                    value: function(t, n, r, i) {
                                        var s = [];
                                        for (var o = 0; o < v.length; o++) {
                                            var u = v[o];
                                            var a = u.run(this, t, n, r, i);
                                            if (a) {
                                                a.strategy = u.name;
                                                s.push({
                                                    strategy: u.name,
                                                    syncPoint: a
                                                });
                                                this.logger_("syncPoint found via <" + u.name + ">:", a)
                                            }
                                        }
                                        return s
                                    }
                                }, {
                                    key: "selectSyncPoint_",
                                    value: function(t, n) {
                                        var r = t[0].syncPoint;
                                        var i = Math.abs(t[0].syncPoint[n.key] - n.value);
                                        var s = t[0].strategy;
                                        for (var o = 1; o < t.length; o++) {
                                            var u = Math.abs(t[o].syncPoint[n.key] - n.value);
                                            if (u < i) {
                                                i = u;
                                                r = t[o].syncPoint;
                                                s = t[o].strategy
                                            }
                                        }
                                        this.logger_("syncPoint with strategy <" + s + "> chosen: ", r);
                                        return r
                                    }
                                }, {
                                    key: "saveExpiredSegmentInfo",
                                    value: function(t, n) {
                                        var r = n.mediaSequence - t.mediaSequence;
                                        for (var i = r - 1; i >= 0; i--) {
                                            var s = t.segments[i];
                                            if (s && typeof s.start !== "undefined") {
                                                n.syncInfo = {
                                                    mediaSequence: t.mediaSequence + i,
                                                    time: s.start
                                                };
                                                this.logger_("playlist sync:", n.syncInfo);
                                                this.trigger("syncinfoupdate");
                                                break
                                            }
                                        }
                                    }
                                }, {
                                    key: "setDateTimeMapping",
                                    value: function(t) {
                                        if (!this.datetimeToDisplayTime && t.dateTimeObject) {
                                            var n = t.dateTimeObject.getTime() / 1e3;
                                            this.datetimeToDisplayTime = -n
                                        }
                                    }
                                }, {
                                    key: "reset",
                                    value: function() {
                                        this.inspectCache_ = undefined
                                    }
                                }, {
                                    key: "probeSegmentInfo",
                                    value: function(t) {
                                        var n = t.segment;
                                        var r = t.playlist;
                                        var i = undefined;
                                        if (n.map) {
                                            i = this.probeMp4Segment_(t)
                                        } else {
                                            i = this.probeTsSegment_(t)
                                        }
                                        if (i) {
                                            if (this.calculateSegmentTimeMapping_(t, i)) {
                                                this.saveDiscontinuitySyncInfo_(t);
                                                if (!r.syncInfo) {
                                                    r.syncInfo = {
                                                        mediaSequence: r.mediaSequence + t.mediaIndex,
                                                        time: n.start
                                                    }
                                                }
                                            }
                                        }
                                        return i
                                    }
                                }, {
                                    key: "probeMp4Segment_",
                                    value: function(t) {
                                        var n = t.segment;
                                        var r = l["default"].timescale(n.map.bytes);
                                        var i = l["default"].startTime(r, t.bytes);
                                        if (t.timestampOffset !== null) {
                                            t.timestampOffset -= i
                                        }
                                        return {
                                            start: i,
                                            end: i + n.duration
                                        }
                                    }
                                }, {
                                    key: "probeTsSegment_",
                                    value: function(t) {
                                        var n = (0,
                                            c.inspect)(t.bytes, this.inspectCache_);
                                        var r = undefined;
                                        var i = undefined;
                                        if (!n) {
                                            return null
                                        }
                                        if (n.video && n.video.length === 2) {
                                            this.inspectCache_ = n.video[1].dts;
                                            r = n.video[0].dtsTime;
                                            i = n.video[1].dtsTime
                                        } else if (n.audio && n.audio.length === 2) {
                                            this.inspectCache_ = n.audio[1].dts;
                                            r = n.audio[0].dtsTime;
                                            i = n.audio[1].dtsTime
                                        }
                                        return {
                                            start: r,
                                            end: i,
                                            containsVideo: n.video && n.video.length === 2,
                                            containsAudio: n.audio && n.audio.length === 2
                                        }
                                    }
                                }, {
                                    key: "timestampOffsetForTimeline",
                                    value: function(t) {
                                        if (typeof this.timelines[t] === "undefined") {
                                            return null
                                        }
                                        return this.timelines[t].time
                                    }
                                }, {
                                    key: "mappingForTimeline",
                                    value: function(t) {
                                        if (typeof this.timelines[t] === "undefined") {
                                            return null
                                        }
                                        return this.timelines[t].mapping
                                    }
                                }, {
                                    key: "calculateSegmentTimeMapping_",
                                    value: function(t, n) {
                                        var r = t.segment;
                                        var i = this.timelines[t.timeline];
                                        if (t.timestampOffset !== null) {
                                            this.logger_("tsO:", t.timestampOffset);
                                            i = {
                                                time: t.startOfSegment,
                                                mapping: t.startOfSegment - n.start
                                            };
                                            this.timelines[t.timeline] = i;
                                            this.trigger("timestampoffset");
                                            r.start = t.startOfSegment;
                                            r.end = n.end + i.mapping
                                        } else if (i) {
                                            r.start = n.start + i.mapping;
                                            r.end = n.end + i.mapping
                                        } else {
                                            return false
                                        }
                                        return true
                                    }
                                }, {
                                    key: "saveDiscontinuitySyncInfo_",
                                    value: function(t) {
                                        var n = t.playlist;
                                        var r = t.segment;
                                        if (r.discontinuity) {
                                            this.discontinuities[r.timeline] = {
                                                time: r.start,
                                                accuracy: 0
                                            }
                                        } else if (n.discontinuityStarts.length) {
                                            for (var i = 0; i < n.discontinuityStarts.length; i++) {
                                                var s = n.discontinuityStarts[i];
                                                var o = n.discontinuitySequence + i + 1;
                                                var u = s - t.mediaIndex;
                                                var a = Math.abs(u);
                                                if (!this.discontinuities[o] || this.discontinuities[o].accuracy > a) {
                                                    var f = undefined;
                                                    if (u < 0) {
                                                        f = r.start - (0,
                                                            h.sumDurations)(n, t.mediaIndex, s)
                                                    } else {
                                                        f = r.end + (0,
                                                            h.sumDurations)(n, t.mediaIndex + 1, s)
                                                    }
                                                    this.discontinuities[o] = {
                                                        time: f,
                                                        accuracy: a
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }, {
                                    key: "logger_",
                                    value: function() {}
                                }]);
                                return t
                            }(d["default"].EventTarget);
                            r["default"] = m
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./playlist": 11,
                        "mux.js/lib/mp4/probe": 57,
                        "mux.js/lib/tools/ts-inspector.js": 59
                    }],
                    19: [function(e, t, n) {
                        "use strict";
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            var t = arguments.length <= 0 || arguments[0] === undefined ? "" : arguments[0];
                            var n = {
                                codecCount: 0
                            };
                            var r = undefined;
                            n.codecCount = t.split(",").length;
                            n.codecCount = n.codecCount || 2;
                            r = /(^|\s|,)+(avc1)([^ ,]*)/i.exec(t);
                            if (r) {
                                n.videoCodec = r[2];
                                n.videoObjectTypeIndicator = r[3]
                            }
                            n.audioProfile = /(^|\s|,)+mp4a.[0-9A-Fa-f]+\.([0-9A-Fa-f]+)/i.exec(t);
                            n.audioProfile = n.audioProfile && n.audioProfile[2];
                            return n
                        };
                        n.parseCodecs = r
                    }, {}],
                    20: [function(e, t, r) {
                        (function(n) {
                            "use strict";

                            function o(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function a(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }

                            function f(e, t) {
                                if (typeof t !== "function" && t !== null) {
                                    throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                                }
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: false,
                                        writable: true,
                                        configurable: true
                                    }
                                });
                                if (t)
                                    Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var s = function(t, n, r) {
                                var i = true;
                                e: while (i) {
                                    var s = t,
                                        o = n,
                                        u = r;
                                    i = false;
                                    if (s === null)
                                        s = Function.prototype;
                                    var a = Object.getOwnPropertyDescriptor(s, o);
                                    if (a === undefined) {
                                        var f = Object.getPrototypeOf(s);
                                        if (f === null) {
                                            return undefined
                                        } else {
                                            t = f;
                                            n = o;
                                            r = u;
                                            i = true;
                                            a = f = undefined;
                                            continue e
                                        }
                                    } else if ("value" in a) {
                                        return a.value
                                    } else {
                                        var l = a.get;
                                        if (l === undefined) {
                                            return undefined
                                        }
                                        return l.call(u)
                                    }
                                }
                            };
                            var l = e("./segment-loader");
                            var c = o(l);
                            var h = typeof window !== "undefined" ? window["videojs"] : typeof n !== "undefined" ? n["videojs"] : null;
                            var p = o(h);
                            var d = e("global/window");
                            var v = o(d);
                            var m = e("videojs-contrib-media-sources/es5/remove-cues-from-track.js");
                            var g = o(m);
                            var y = e("./bin-utils");
                            var b = new Uint8Array("\n\n".split("").map(function(e) {
                                return e.charCodeAt(0)
                            }));
                            var w = function(t) {
                                return String.fromCharCode.apply(null, t)
                            };
                            var E = function(e) {
                                function t(e) {
                                    var n = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                                    a(this, t);
                                    s(Object.getPrototypeOf(t.prototype), "constructor", this).call(this, e, n);
                                    this.mediaSource_ = null;
                                    this.subtitlesTrack_ = null
                                }
                                f(t, e);
                                i(t, [{
                                    key: "buffered_",
                                    value: function() {
                                        if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {
                                            return p["default"].createTimeRanges()
                                        }
                                        var t = this.subtitlesTrack_.cues;
                                        var n = t[0].startTime;
                                        var r = t[t.length - 1].startTime;
                                        return p["default"].createTimeRanges([
                                            [n, r]
                                        ])
                                    }
                                }, {
                                    key: "initSegment",
                                    value: function(t) {
                                        var n = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
                                        if (!t) {
                                            return null
                                        }
                                        var r = (0,
                                            y.initSegmentId)(t);
                                        var i = this.initSegments_[r];
                                        if (n && !i && t.bytes) {
                                            var s = b.byteLength + t.bytes.byteLength;
                                            var o = new Uint8Array(s);
                                            o.set(t.bytes);
                                            o.set(b, t.bytes.byteLength);
                                            this.initSegments_[r] = i = {
                                                resolvedUri: t.resolvedUri,
                                                byterange: t.byterange,
                                                bytes: o
                                            }
                                        }
                                        return i || t
                                    }
                                }, {
                                    key: "couldBeginLoading_",
                                    value: function() {
                                        return this.playlist_ && this.subtitlesTrack_ && !this.paused()
                                    }
                                }, {
                                    key: "init_",
                                    value: function() {
                                        this.state = "READY";
                                        this.resetEverything();
                                        return this.monitorBuffer_()
                                    }
                                }, {
                                    key: "track",
                                    value: function(t) {
                                        if (typeof t === "undefined") {
                                            return this.subtitlesTrack_
                                        }
                                        this.subtitlesTrack_ = t;
                                        if (this.state === "INIT" && this.couldBeginLoading_()) {
                                            this.init_()
                                        }
                                        return this.subtitlesTrack_
                                    }
                                }, {
                                    key: "remove",
                                    value: function(t, n) {
                                        (0,
                                            g["default"])(t, n, this.subtitlesTrack_)
                                    }
                                }, {
                                    key: "fillBuffer_",
                                    value: function() {
                                        var t = this;
                                        if (!this.syncPoint_) {
                                            this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_())
                                        }
                                        var n = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
                                        n = this.skipEmptySegments_(n);
                                        if (!n) {
                                            return
                                        }
                                        if (this.syncController_.timestampOffsetForTimeline(n.timeline) === null) {
                                            var r = function() {
                                                t.state = "READY";
                                                if (!t.paused()) {
                                                    t.monitorBuffer_()
                                                }
                                            };
                                            this.syncController_.one("timestampoffset", r);
                                            this.state = "WAITING_ON_TIMELINE";
                                            return
                                        }
                                        this.loadSegment_(n)
                                    }
                                }, {
                                    key: "skipEmptySegments_",
                                    value: function(t) {
                                        while (t && t.segment.empty) {
                                            t = this.generateSegmentInfo_(t.playlist, t.mediaIndex + 1, t.startOfSegment + t.duration, t.isSyncRequest)
                                        }
                                        return t
                                    }
                                }, {
                                    key: "handleSegment_",
                                    value: function() {
                                        var t = this;
                                        if (!this.pendingSegment_ || !this.subtitlesTrack_) {
                                            this.state = "READY";
                                            return
                                        }
                                        this.state = "APPENDING";
                                        var n = this.pendingSegment_;
                                        var r = n.segment;
                                        if (typeof v["default"].WebVTT !== "function" && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {
                                            var i = function() {
                                                var e = function() {
                                                    t.handleSegment_()
                                                };
                                                t.state = "WAITING_ON_VTTJS";
                                                t.subtitlesTrack_.tech_.one("vttjsloaded", e);
                                                t.subtitlesTrack_.tech_.one("vttjserror", function() {
                                                    t.subtitlesTrack_.tech_.off("vttjsloaded", e);
                                                    t.error({
                                                        message: "Error loading vtt.js"
                                                    });
                                                    t.state = "READY";
                                                    t.pause();
                                                    t.trigger("error")
                                                });
                                                return {
                                                    v: undefined
                                                }
                                            }();
                                            if ((typeof i === "undefined" ? "undefined" : u(i)) === "object")
                                                return i.v
                                        }
                                        r.requested = true;
                                        try {
                                            this.parseVTTCues_(n)
                                        } catch (s) {
                                            this.error({
                                                message: s.message
                                            });
                                            this.state = "READY";
                                            this.pause();
                                            return this.trigger("error")
                                        }
                                        this.updateTimeMapping_(n, this.syncController_.timelines[n.timeline], this.playlist_);
                                        if (n.isSyncRequest) {
                                            this.trigger("syncinfoupdate");
                                            this.pendingSegment_ = null;
                                            this.state = "READY";
                                            return
                                        }
                                        n.byteLength = n.bytes.byteLength;
                                        this.mediaSecondsLoaded += r.duration;
                                        if (n.cues.length) {
                                            this.remove(n.cues[0].endTime, n.cues[n.cues.length - 1].endTime)
                                        }
                                        n.cues.forEach(function(e) {
                                            t.subtitlesTrack_.addCue(e)
                                        });
                                        this.handleUpdateEnd_()
                                    }
                                }, {
                                    key: "parseVTTCues_",
                                    value: function(t) {
                                        var n = undefined;
                                        var r = false;
                                        if (typeof v["default"].TextDecoder === "function") {
                                            n = new v["default"].TextDecoder("utf8")
                                        } else {
                                            n = v["default"].WebVTT.StringDecoder();
                                            r = true
                                        }
                                        var i = new v["default"].WebVTT.Parser(v["default"], v["default"].vttjs, n);
                                        t.cues = [];
                                        t.timestampmap = {
                                            MPEGTS: 0,
                                            LOCAL: 0
                                        };
                                        i.oncue = t.cues.push.bind(t.cues);
                                        i.ontimestampmap = function(e) {
                                            return t.timestampmap = e
                                        };
                                        i.onparsingerror = function(e) {
                                            p["default"].log.warn("Error encountered when parsing cues: " + e.message)
                                        };
                                        if (t.segment.map) {
                                            var s = t.segment.map.bytes;
                                            if (r) {
                                                s = w(s)
                                            }
                                            i.parse(s)
                                        }
                                        var o = t.bytes;
                                        if (r) {
                                            o = w(o)
                                        }
                                        i.parse(o);
                                        i.flush()
                                    }
                                }, {
                                    key: "updateTimeMapping_",
                                    value: function(t, n, r) {
                                        var i = t.segment;
                                        if (!n) {
                                            return
                                        }
                                        if (!t.cues.length) {
                                            i.empty = true;
                                            return
                                        }
                                        var s = t.timestampmap;
                                        var o = s.MPEGTS / 9e4 - s.LOCAL + n.mapping;
                                        t.cues.forEach(function(e) {
                                            e.startTime += o;
                                            e.endTime += o
                                        });
                                        if (!r.syncInfo) {
                                            var u = t.cues[0].startTime;
                                            var a = t.cues[t.cues.length - 1].startTime;
                                            r.syncInfo = {
                                                mediaSequence: r.mediaSequence + t.mediaIndex,
                                                time: Math.min(u, a - i.duration)
                                            }
                                        }
                                    }
                                }]);
                                return t
                            }(c["default"]);
                            r["default"] = E;
                            t.exports = r["default"]
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./bin-utils": 2,
                        "./segment-loader": 16,
                        "global/window": 32,
                        "videojs-contrib-media-sources/es5/remove-cues-from-track.js": 72
                    }],
                    21: [function(e, t, r) {
                        (function(e) {
                            "use strict";

                            function n(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = typeof window !== "undefined" ? window["videojs"] : typeof e !== "undefined" ? e["videojs"] : null;
                            var s = n(i);
                            var o = function() {
                                var t = function n(e, t) {
                                    e = (0,
                                        i.mergeOptions)({
                                        timeout: 45e3
                                    }, e);
                                    var r = n.beforeRequest || s["default"].Hls.xhr.beforeRequest;
                                    if (r && typeof r === "function") {
                                        var o = r(e);
                                        if (o) {
                                            e = o
                                        }
                                    }
                                    var u = (0,
                                        i.xhr)(e, function(e, n) {
                                        var r = u.response;
                                        if (!e && r) {
                                            u.responseTime = Date.now();
                                            u.roundTripTime = u.responseTime - u.requestTime;
                                            u.bytesReceived = r.byteLength || r.length;
                                            if (!u.bandwidth) {
                                                u.bandwidth = Math.floor(u.bytesReceived / u.roundTripTime * 8 * 1e3)
                                            }
                                        }
                                        if (e && e.code === "ETIMEDOUT") {
                                            u.timedout = true
                                        }
                                        if (!e && !u.aborted && n.statusCode !== 200 && n.statusCode !== 206 && n.statusCode !== 0) {
                                            e = new Error("XHR Failed with a response of: " + (u && (r || u.responseText)))
                                        }
                                        t(e, u)
                                    });
                                    var a = u.abort;
                                    u.abort = function() {
                                        u.aborted = true;
                                        return a.apply(u, arguments)
                                    };
                                    u.uri = e.uri;
                                    u.requestTime = Date.now();
                                    return u
                                };
                                return t
                            };
                            r["default"] = o;
                            t.exports = r["default"]
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {}],
                    22: [function(e, t, n) {
                        "use strict";

                        function i(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            function e(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || false;
                                    r.configurable = true;
                                    if ("value" in r)
                                        r.writable = true;
                                    Object.defineProperty(e, r.key, r)
                                }
                            }
                            return function(t, n, r) {
                                if (n)
                                    e(t.prototype, n);
                                if (r)
                                    e(t, r);
                                return t
                            }
                        }();
                        var s = function() {
                            var t = [
                                [
                                    [],
                                    [],
                                    [],
                                    [],
                                    []
                                ],
                                [
                                    [],
                                    [],
                                    [],
                                    [],
                                    []
                                ]
                            ];
                            var n = t[0];
                            var r = t[1];
                            var i = n[4];
                            var s = r[4];
                            var o = undefined;
                            var u = undefined;
                            var a = undefined;
                            var f = [];
                            var l = [];
                            var c = undefined;
                            var h = undefined;
                            var p = undefined;
                            var d = undefined;
                            var v = undefined;
                            var m = undefined;
                            for (o = 0; o < 256; o++) {
                                l[(f[o] = o << 1 ^ (o >> 7) * 283) ^ o] = o
                            }
                            for (u = a = 0; !i[u]; u ^= c || 1,
                                a = l[a] || 1) {
                                d = a ^ a << 1 ^ a << 2 ^ a << 3 ^ a << 4;
                                d = d >> 8 ^ d & 255 ^ 99;
                                i[u] = d;
                                s[d] = u;
                                p = f[h = f[c = f[u]]];
                                m = p * 16843009 ^ h * 65537 ^ c * 257 ^ u * 16843008;
                                v = f[d] * 257 ^ d * 16843008;
                                for (o = 0; o < 4; o++) {
                                    n[o][u] = v = v << 24 ^ v >>> 8;
                                    r[o][d] = m = m << 24 ^ m >>> 8
                                }
                            }
                            for (o = 0; o < 5; o++) {
                                n[o] = n[o].slice(0);
                                r[o] = r[o].slice(0)
                            }
                            return t
                        };
                        var o = null;
                        var u = function() {
                            function e(t) {
                                i(this, e);
                                if (!o) {
                                    o = s()
                                }
                                this._tables = [
                                    [o[0][0].slice(), o[0][1].slice(), o[0][2].slice(), o[0][3].slice(), o[0][4].slice()],
                                    [o[1][0].slice(), o[1][1].slice(), o[1][2].slice(), o[1][3].slice(), o[1][4].slice()]
                                ];
                                var n = undefined;
                                var r = undefined;
                                var u = undefined;
                                var a = undefined;
                                var f = undefined;
                                var l = this._tables[0][4];
                                var c = this._tables[1];
                                var h = t.length;
                                var p = 1;
                                if (h !== 4 && h !== 6 && h !== 8) {
                                    throw new Error("Invalid aes key size")
                                }
                                a = t.slice(0);
                                f = [];
                                this._key = [a, f];
                                for (n = h; n < 4 * h + 28; n++) {
                                    u = a[n - 1];
                                    if (n % h === 0 || h === 8 && n % h === 4) {
                                        u = l[u >>> 24] << 24 ^ l[u >> 16 & 255] << 16 ^ l[u >> 8 & 255] << 8 ^ l[u & 255];
                                        if (n % h === 0) {
                                            u = u << 8 ^ u >>> 24 ^ p << 24;
                                            p = p << 1 ^ (p >> 7) * 283
                                        }
                                    }
                                    a[n] = a[n - h] ^ u
                                }
                                for (r = 0; n; r++,
                                    n--) {
                                    u = a[r & 3 ? n : n - 4];
                                    if (n <= 4 || r < 4) {
                                        f[r] = u
                                    } else {
                                        f[r] = c[0][l[u >>> 24]] ^ c[1][l[u >> 16 & 255]] ^ c[2][l[u >> 8 & 255]] ^ c[3][l[u & 255]]
                                    }
                                }
                            }
                            r(e, [{
                                key: "decrypt",
                                value: function(t, n, r, i, s, o) {
                                    var u = this._key[1];
                                    var a = t ^ u[0];
                                    var f = i ^ u[1];
                                    var l = r ^ u[2];
                                    var c = n ^ u[3];
                                    var h = undefined;
                                    var p = undefined;
                                    var d = undefined;
                                    var v = u.length / 4 - 2;
                                    var m = undefined;
                                    var g = 4;
                                    var y = this._tables[1];
                                    var b = y[0];
                                    var w = y[1];
                                    var E = y[2];
                                    var S = y[3];
                                    var x = y[4];
                                    for (m = 0; m < v; m++) {
                                        h = b[a >>> 24] ^ w[f >> 16 & 255] ^ E[l >> 8 & 255] ^ S[c & 255] ^ u[g];
                                        p = b[f >>> 24] ^ w[l >> 16 & 255] ^ E[c >> 8 & 255] ^ S[a & 255] ^ u[g + 1];
                                        d = b[l >>> 24] ^ w[c >> 16 & 255] ^ E[a >> 8 & 255] ^ S[f & 255] ^ u[g + 2];
                                        c = b[c >>> 24] ^ w[a >> 16 & 255] ^ E[f >> 8 & 255] ^ S[l & 255] ^ u[g + 3];
                                        g += 4;
                                        a = h;
                                        f = p;
                                        l = d
                                    }
                                    for (m = 0; m < 4; m++) {
                                        s[(3 & -m) + o] = x[a >>> 24] << 24 ^ x[f >> 16 & 255] << 16 ^ x[l >> 8 & 255] << 8 ^ x[c & 255] ^ u[g++];
                                        h = a;
                                        a = f;
                                        f = l;
                                        l = c;
                                        c = h
                                    }
                                }
                            }]);
                            return e
                        }();
                        n["default"] = u;
                        t.exports = n["default"]
                    }, {}],
                    23: [function(e, t, n) {
                        "use strict";

                        function s(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }

                        function o(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }

                        function a(e, t) {
                            if (typeof t !== "function" && t !== null) {
                                throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                            }
                            e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                    value: e,
                                    enumerable: false,
                                    writable: true,
                                    configurable: true
                                }
                            });
                            if (t)
                                Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            function e(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || false;
                                    r.configurable = true;
                                    if ("value" in r)
                                        r.writable = true;
                                    Object.defineProperty(e, r.key, r)
                                }
                            }
                            return function(t, n, r) {
                                if (n)
                                    e(t.prototype, n);
                                if (r)
                                    e(t, r);
                                return t
                            }
                        }();
                        var i = function(t, n, r) {
                            var i = true;
                            e: while (i) {
                                var s = t,
                                    o = n,
                                    u = r;
                                i = false;
                                if (s === null)
                                    s = Function.prototype;
                                var a = Object.getOwnPropertyDescriptor(s, o);
                                if (a === undefined) {
                                    var f = Object.getPrototypeOf(s);
                                    if (f === null) {
                                        return undefined
                                    } else {
                                        t = f;
                                        n = o;
                                        r = u;
                                        i = true;
                                        a = f = undefined;
                                        continue e
                                    }
                                } else if ("value" in a) {
                                    return a.value
                                } else {
                                    var l = a.get;
                                    if (l === undefined) {
                                        return undefined
                                    }
                                    return l.call(u)
                                }
                            }
                        };
                        var f = e("./stream");
                        var l = s(f);
                        var c = function(e) {
                            function t() {
                                o(this, t);
                                i(Object.getPrototypeOf(t.prototype), "constructor", this).call(this, l["default"]);
                                this.jobs = [];
                                this.delay = 1;
                                this.timeout_ = null
                            }
                            a(t, e);
                            r(t, [{
                                key: "processJob_",
                                value: function() {
                                    this.jobs.shift()();
                                    if (this.jobs.length) {
                                        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
                                    } else {
                                        this.timeout_ = null
                                    }
                                }
                            }, {
                                key: "push",
                                value: function(t) {
                                    this.jobs.push(t);
                                    if (!this.timeout_) {
                                        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
                                    }
                                }
                            }]);
                            return t
                        }(l["default"]);
                        n["default"] = c;
                        t.exports = n["default"]
                    }, {
                        "./stream": 26
                    }],
                    24: [function(e, t, n) {
                        "use strict";

                        function i(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }

                        function s(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            function e(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || false;
                                    r.configurable = true;
                                    if ("value" in r)
                                        r.writable = true;
                                    Object.defineProperty(e, r.key, r)
                                }
                            }
                            return function(t, n, r) {
                                if (n)
                                    e(t.prototype, n);
                                if (r)
                                    e(t, r);
                                return t
                            }
                        }();
                        var o = e("./aes");
                        var u = i(o);
                        var a = e("./async-stream");
                        var f = i(a);
                        var l = e("pkcs7");
                        var c = function(t) {
                            return t << 24 | (t & 65280) << 8 | (t & 16711680) >> 8 | t >>> 24
                        };
                        var h = function(t, n, r) {
                            var i = new Int32Array(t.buffer, t.byteOffset, t.byteLength >> 2);
                            var s = new u["default"](Array.prototype.slice.call(n));
                            var o = new Uint8Array(t.byteLength);
                            var a = new Int32Array(o.buffer);
                            var f = undefined;
                            var l = undefined;
                            var h = undefined;
                            var p = undefined;
                            var d = undefined;
                            var v = undefined;
                            var m = undefined;
                            var g = undefined;
                            var y = undefined;
                            f = r[0];
                            l = r[1];
                            h = r[2];
                            p = r[3];
                            for (y = 0; y < i.length; y += 4) {
                                d = c(i[y]);
                                v = c(i[y + 1]);
                                m = c(i[y + 2]);
                                g = c(i[y + 3]);
                                s.decrypt(d, v, m, g, a, y);
                                a[y] = c(a[y] ^ f);
                                a[y + 1] = c(a[y + 1] ^ l);
                                a[y + 2] = c(a[y + 2] ^ h);
                                a[y + 3] = c(a[y + 3] ^ p);
                                f = d;
                                l = v;
                                h = m;
                                p = g
                            }
                            return o
                        };
                        n.decrypt = h;
                        var p = function() {
                            function e(t, n, r, i) {
                                s(this, e);
                                var o = e.STEP;
                                var u = new Int32Array(t.buffer);
                                var a = new Uint8Array(t.byteLength);
                                var h = 0;
                                this.asyncStream_ = new f["default"];
                                this.asyncStream_.push(this.decryptChunk_(u.subarray(h, h + o), n, r, a));
                                for (h = o; h < u.length; h += o) {
                                    r = new Uint32Array([c(u[h - 4]), c(u[h - 3]), c(u[h - 2]), c(u[h - 1])]);
                                    this.asyncStream_.push(this.decryptChunk_(u.subarray(h, h + o), n, r, a))
                                }
                                this.asyncStream_.push(function() {
                                    i(null, (0,
                                        l.unpad)(a))
                                })
                            }
                            r(e, [{
                                key: "decryptChunk_",
                                value: function(t, n, r, i) {
                                    return function() {
                                        var e = h(t, n, r);
                                        i.set(e, t.byteOffset)
                                    }
                                }
                            }], [{
                                key: "STEP",
                                get: function() {
                                    return 32e3
                                }
                            }]);
                            return e
                        }();
                        n.Decrypter = p;
                        n["default"] = {
                            Decrypter: p,
                            decrypt: h
                        }
                    }, {
                        "./aes": 22,
                        "./async-stream": 23,
                        pkcs7: 28
                    }],
                    25: [function(e, t, n) {
                        "use strict";

                        function r(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var i = e("./decrypter");
                        var s = e("./async-stream");
                        var o = r(s);
                        n["default"] = {
                            decrypt: i.decrypt,
                            Decrypter: i.Decrypter,
                            AsyncStream: o["default"]
                        };
                        t.exports = n["default"]
                    }, {
                        "./async-stream": 23,
                        "./decrypter": 24
                    }],
                    26: [function(e, t, n) {
                        "use strict";

                        function i(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            function e(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || false;
                                    r.configurable = true;
                                    if ("value" in r)
                                        r.writable = true;
                                    Object.defineProperty(e, r.key, r)
                                }
                            }
                            return function(t, n, r) {
                                if (n)
                                    e(t.prototype, n);
                                if (r)
                                    e(t, r);
                                return t
                            }
                        }();
                        var s = function() {
                            function e() {
                                i(this, e);
                                this.listeners = {}
                            }
                            r(e, [{
                                key: "on",
                                value: function(t, n) {
                                    if (!this.listeners[t]) {
                                        this.listeners[t] = []
                                    }
                                    this.listeners[t].push(n)
                                }
                            }, {
                                key: "off",
                                value: function(t, n) {
                                    var r = undefined;
                                    if (!this.listeners[t]) {
                                        return false
                                    }
                                    r = this.listeners[t].indexOf(n);
                                    this.listeners[t].splice(r, 1);
                                    return r > -1
                                }
                            }, {
                                key: "trigger",
                                value: function(t) {
                                    var n = undefined;
                                    var r = undefined;
                                    var i = undefined;
                                    var s = undefined;
                                    n = this.listeners[t];
                                    if (!n) {
                                        return
                                    }
                                    if (arguments.length === 2) {
                                        i = n.length;
                                        for (r = 0; r < i; ++r) {
                                            n[r].call(this, arguments[1])
                                        }
                                    } else {
                                        s = Array.prototype.slice.call(arguments, 1);
                                        i = n.length;
                                        for (r = 0; r < i; ++r) {
                                            n[r].apply(this, s)
                                        }
                                    }
                                }
                            }, {
                                key: "dispose",
                                value: function() {
                                    this.listeners = {}
                                }
                            }, {
                                key: "pipe",
                                value: function(t) {
                                    this.on("data", function(e) {
                                        t.push(e)
                                    })
                                }
                            }]);
                            return e
                        }();
                        n["default"] = s;
                        t.exports = n["default"]
                    }, {}],
                    27: [function(e, t, n) {
                        "use strict";
                        var r;
                        t.exports = function(t) {
                            var n = r[t.byteLength % 16 || 0],
                                i = new Uint8Array(t.byteLength + n.length);
                            i.set(t);
                            i.set(n, t.byteLength);
                            return i
                        };
                        r = [
                            [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16],
                            [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15],
                            [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14],
                            [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13],
                            [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12],
                            [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],
                            [10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
                            [9, 9, 9, 9, 9, 9, 9, 9, 9],
                            [8, 8, 8, 8, 8, 8, 8, 8],
                            [7, 7, 7, 7, 7, 7, 7],
                            [6, 6, 6, 6, 6, 6],
                            [5, 5, 5, 5, 5],
                            [4, 4, 4, 4],
                            [3, 3, 3],
                            [2, 2],
                            [1]
                        ]
                    }, {}],
                    28: [function(e, t, n) {
                        "use strict";
                        n.pad = e("./pad.js");
                        n.unpad = e("./unpad.js")
                    }, {
                        "./pad.js": 27,
                        "./unpad.js": 29
                    }],
                    29: [function(e, t, n) {
                        "use strict";
                        t.exports = function(t) {
                            return t.subarray(0, t.byteLength - t[t.byteLength - 1])
                        }
                    }, {}],
                    30: [function(e, t, n) {}, {}],
                    31: [function(e, t, r) {
                        (function(n) {
                            var r = typeof n !== "undefined" ? n : typeof window !== "undefined" ? window : {};
                            var i = e("min-document");
                            var s;
                            if (typeof document !== "undefined") {
                                s = document
                            } else {
                                s = r["__GLOBAL_DOCUMENT_CACHE@4"];
                                if (!s) {
                                    s = r["__GLOBAL_DOCUMENT_CACHE@4"] = i
                                }
                            }
                            t.exports = s
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "min-document": 30
                    }],
                    32: [function(e, t, r) {
                        (function(e) {
                            var n;
                            if (typeof window !== "undefined") {
                                n = window
                            } else if (typeof e !== "undefined") {
                                n = e
                            } else if (typeof self !== "undefined") {
                                n = self
                            } else {
                                n = {}
                            }
                            t.exports = n
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {}],
                    33: [function(e, t, n) {
                        "use strict";

                        function f(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }
                        var r = e("./line-stream");
                        var i = f(r);
                        var s = e("./parse-stream");
                        var o = f(s);
                        var u = e("./parser");
                        var a = f(u);
                        t.exports = {
                            LineStream: i["default"],
                            ParseStream: o["default"],
                            Parser: a["default"]
                        }
                    }, {
                        "./line-stream": 34,
                        "./parse-stream": 35,
                        "./parser": 36
                    }],
                    34: [function(e, t, n) {
                        "use strict";

                        function o(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }

                        function a(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }

                        function f(e, t) {
                            if (!e) {
                                throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                            }
                            return t && ((typeof t === "undefined" ? "undefined" : u(t)) === "object" || typeof t === "function") ? t : e
                        }

                        function l(e, t) {
                            if (typeof t !== "function" && t !== null) {
                                throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                            }
                            e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                    value: e,
                                    enumerable: false,
                                    writable: true,
                                    configurable: true
                                }
                            });
                            if (t)
                                Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            function e(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || false;
                                    r.configurable = true;
                                    if ("value" in r)
                                        r.writable = true;
                                    Object.defineProperty(e, r.key, r)
                                }
                            }
                            return function(t, n, r) {
                                if (n)
                                    e(t.prototype, n);
                                if (r)
                                    e(t, r);
                                return t
                            }
                        }();
                        var i = e("./stream");
                        var s = o(i);
                        var c = function(e) {
                            function t() {
                                a(this, t);
                                var e = f(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                                e.buffer = "";
                                return e
                            }
                            l(t, e);
                            r(t, [{
                                key: "push",
                                value: function(t) {
                                    var n = void 0;
                                    this.buffer += t;
                                    n = this.buffer.indexOf("\n");
                                    for (; n > -1; n = this.buffer.indexOf("\n")) {
                                        this.trigger("data", this.buffer.substring(0, n));
                                        this.buffer = this.buffer.substring(n + 1)
                                    }
                                }
                            }]);
                            return t
                        }(s["default"]);
                        n["default"] = c
                    }, {
                        "./stream": 37
                    }],
                    35: [function(e, t, n) {
                        "use strict";

                        function a(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }

                        function f(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }

                        function l(e, t) {
                            if (!e) {
                                throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                            }
                            return t && ((typeof t === "undefined" ? "undefined" : u(t)) === "object" || typeof t === "function") ? t : e
                        }

                        function c(e, t) {
                            if (typeof t !== "function" && t !== null) {
                                throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                            }
                            e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                    value: e,
                                    enumerable: false,
                                    writable: true,
                                    configurable: true
                                }
                            });
                            if (t)
                                Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            function e(e, t) {
                                var n = [];
                                var r = true;
                                var i = false;
                                var s = undefined;
                                try {
                                    for (var o = e[Symbol.iterator](), u; !(r = (u = o.next()).done); r = true) {
                                        n.push(u.value);
                                        if (t && n.length === t)
                                            break
                                    }
                                } catch (a) {
                                    i = true;
                                    s = a
                                } finally {
                                    try {
                                        if (!r && o["return"])
                                            o["return"]()
                                    } finally {
                                        if (i)
                                            throw s
                                    }
                                }
                                return n
                            }
                            return function(t, n) {
                                if (Array.isArray(t)) {
                                    return t
                                } else if (Symbol.iterator in Object(t)) {
                                    return e(t, n)
                                } else {
                                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                                }
                            }
                        }();
                        var i = function() {
                            function e(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || false;
                                    r.configurable = true;
                                    if ("value" in r)
                                        r.writable = true;
                                    Object.defineProperty(e, r.key, r)
                                }
                            }
                            return function(t, n, r) {
                                if (n)
                                    e(t.prototype, n);
                                if (r)
                                    e(t, r);
                                return t
                            }
                        }();
                        var s = e("./stream");
                        var o = a(s);
                        var h = function() {
                            var t = "[^=]*";
                            var n = '"[^"]*"|[^,]*';
                            var r = "(?:" + t + ")=(?:" + n + ")";
                            return new RegExp("(?:^|,)(" + r + ")")
                        };
                        var p = function(t) {
                            var n = t.split(h());
                            var r = {};
                            var i = n.length;
                            var s = void 0;
                            while (i--) {
                                if (n[i] === "") {
                                    continue
                                }
                                s = /([^=]*)=(.*)/.exec(n[i]).slice(1);
                                s[0] = s[0].replace(/^\s+|\s+$/g, "");
                                s[1] = s[1].replace(/^\s+|\s+$/g, "");
                                s[1] = s[1].replace(/^['"](.*)['"]$/g, "$1");
                                r[s[0]] = s[1]
                            }
                            return r
                        };
                        var d = function(e) {
                            function t() {
                                f(this, t);
                                return l(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this))
                            }
                            c(t, e);
                            i(t, [{
                                key: "push",
                                value: function(t) {
                                    var n = void 0;
                                    var i = void 0;
                                    t = t.replace(/^[\u0000\s]+|[\u0000\s]+$/g, "");
                                    if (t.length === 0) {
                                        return
                                    }
                                    if (t[0] !== "#") {
                                        this.trigger("data", {
                                            type: "uri",
                                            uri: t
                                        });
                                        return
                                    }
                                    if (t.indexOf("#EXT") !== 0) {
                                        this.trigger("data", {
                                            type: "comment",
                                            text: t.slice(1)
                                        });
                                        return
                                    }
                                    t = t.replace("\r", "");
                                    n = /^#EXTM3U/.exec(t);
                                    if (n) {
                                        this.trigger("data", {
                                            type: "tag",
                                            tagType: "m3u"
                                        });
                                        return
                                    }
                                    n = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "inf"
                                        };
                                        if (n[1]) {
                                            i.duration = parseFloat(n[1])
                                        }
                                        if (n[2]) {
                                            i.title = n[2]
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "targetduration"
                                        };
                                        if (n[1]) {
                                            i.duration = parseInt(n[1], 10)
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "totalduration"
                                        };
                                        if (n[1]) {
                                            i.duration = parseInt(n[1], 10)
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "version"
                                        };
                                        if (n[1]) {
                                            i.version = parseInt(n[1], 10)
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "media-sequence"
                                        };
                                        if (n[1]) {
                                            i.number = parseInt(n[1], 10)
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "discontinuity-sequence"
                                        };
                                        if (n[1]) {
                                            i.number = parseInt(n[1], 10)
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "playlist-type"
                                        };
                                        if (n[1]) {
                                            i.playlistType = n[1]
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "byterange"
                                        };
                                        if (n[1]) {
                                            i.length = parseInt(n[1], 10)
                                        }
                                        if (n[2]) {
                                            i.offset = parseInt(n[2], 10)
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "allow-cache"
                                        };
                                        if (n[1]) {
                                            i.allowed = !/NO/.test(n[1])
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-MAP:?(.*)$/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "map"
                                        };
                                        if (n[1]) {
                                            var s = p(n[1]);
                                            if (s.URI) {
                                                i.uri = s.URI
                                            }
                                            if (s.BYTERANGE) {
                                                var o = s.BYTERANGE.split("@"),
                                                    u = r(o, 2),
                                                    a = u[0],
                                                    f = u[1];
                                                i.byterange = {};
                                                if (a) {
                                                    i.byterange.length = parseInt(a, 10)
                                                }
                                                if (f) {
                                                    i.byterange.offset = parseInt(f, 10)
                                                }
                                            }
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-STREAM-INF:?(.*)$/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "stream-inf"
                                        };
                                        if (n[1]) {
                                            i.attributes = p(n[1]);
                                            if (i.attributes.RESOLUTION) {
                                                var l = i.attributes.RESOLUTION.split("x");
                                                var c = {};
                                                if (l[0]) {
                                                    c.width = parseInt(l[0], 10)
                                                }
                                                if (l[1]) {
                                                    c.height = parseInt(l[1], 10)
                                                }
                                                i.attributes.RESOLUTION = c
                                            }
                                            if (i.attributes.BANDWIDTH) {
                                                i.attributes.BANDWIDTH = parseInt(i.attributes.BANDWIDTH, 10)
                                            }
                                            if (i.attributes["PROGRAM-ID"]) {
                                                i.attributes["PROGRAM-ID"] = parseInt(i.attributes["PROGRAM-ID"], 10)
                                            }
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-MEDIA:?(.*)$/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "media"
                                        };
                                        if (n[1]) {
                                            i.attributes = p(n[1])
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-ENDLIST/.exec(t);
                                    if (n) {
                                        this.trigger("data", {
                                            type: "tag",
                                            tagType: "endlist"
                                        });
                                        return
                                    }
                                    n = /^#EXT-X-DISCONTINUITY/.exec(t);
                                    if (n) {
                                        this.trigger("data", {
                                            type: "tag",
                                            tagType: "discontinuity"
                                        });
                                        return
                                    }
                                    n = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "program-date-time"
                                        };
                                        if (n[1]) {
                                            i.dateTimeString = n[1];
                                            i.dateTimeObject = new Date(n[1])
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-KEY:?(.*)$/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "key"
                                        };
                                        if (n[1]) {
                                            i.attributes = p(n[1]);
                                            if (i.attributes.IV) {
                                                if (i.attributes.IV.substring(0, 2).toLowerCase() === "0x") {
                                                    i.attributes.IV = i.attributes.IV.substring(2)
                                                }
                                                i.attributes.IV = i.attributes.IV.match(/.{8}/g);
                                                i.attributes.IV[0] = parseInt(i.attributes.IV[0], 16);
                                                i.attributes.IV[1] = parseInt(i.attributes.IV[1], 16);
                                                i.attributes.IV[2] = parseInt(i.attributes.IV[2], 16);
                                                i.attributes.IV[3] = parseInt(i.attributes.IV[3], 16);
                                                i.attributes.IV = new Uint32Array(i.attributes.IV)
                                            }
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "cue-out-cont"
                                        };
                                        if (n[1]) {
                                            i.data = n[1]
                                        } else {
                                            i.data = ""
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "cue-out"
                                        };
                                        if (n[1]) {
                                            i.data = n[1]
                                        } else {
                                            i.data = ""
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    n = /^#EXT-X-CUE-IN:?(.*)?$/.exec(t);
                                    if (n) {
                                        i = {
                                            type: "tag",
                                            tagType: "cue-in"
                                        };
                                        if (n[1]) {
                                            i.data = n[1]
                                        } else {
                                            i.data = ""
                                        }
                                        this.trigger("data", i);
                                        return
                                    }
                                    this.trigger("data", {
                                        type: "tag",
                                        data: t.slice(4)
                                    })
                                }
                            }]);
                            return t
                        }(o["default"]);
                        n["default"] = d
                    }, {
                        "./stream": 37
                    }],
                    36: [function(e, t, n) {
                        "use strict";

                        function h(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }

                        function p(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }

                        function d(e, t) {
                            if (!e) {
                                throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                            }
                            return t && ((typeof t === "undefined" ? "undefined" : u(t)) === "object" || typeof t === "function") ? t : e
                        }

                        function v(e, t) {
                            if (typeof t !== "function" && t !== null) {
                                throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                            }
                            e.prototype = Object.create(t && t.prototype, {
                                constructor: {
                                    value: e,
                                    enumerable: false,
                                    writable: true,
                                    configurable: true
                                }
                            });
                            if (t)
                                Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = Object.assign || function(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = arguments[t];
                                for (var r in n) {
                                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                                        e[r] = n[r]
                                    }
                                }
                            }
                            return e
                        };
                        var i = function() {
                            function e(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || false;
                                    r.configurable = true;
                                    if ("value" in r)
                                        r.writable = true;
                                    Object.defineProperty(e, r.key, r)
                                }
                            }
                            return function(t, n, r) {
                                if (n)
                                    e(t.prototype, n);
                                if (r)
                                    e(t, r);
                                return t
                            }
                        }();
                        var s = e("./stream");
                        var o = h(s);
                        var a = e("./line-stream");
                        var f = h(a);
                        var l = e("./parse-stream");
                        var c = h(l);
                        var m = function(e) {
                            function t() {
                                p(this, t);
                                var e = d(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                                e.lineStream = new f["default"];
                                e.parseStream = new c["default"];
                                e.lineStream.pipe(e.parseStream);
                                var n = e;
                                var i = [];
                                var s = {};
                                var o = void 0;
                                var u = void 0;
                                var a = function() {};
                                var l = {
                                    AUDIO: {},
                                    VIDEO: {},
                                    "CLOSED-CAPTIONS": {},
                                    SUBTITLES: {}
                                };
                                var h = 0;
                                e.manifest = {
                                    allowCache: true,
                                    discontinuityStarts: [],
                                    segments: []
                                };
                                e.parseStream.on("data", function(e) {
                                    var t = void 0;
                                    var f = void 0;
                                    (({
                                        tag: function() {
                                            ((({
                                                "allow-cache": function() {
                                                    this.manifest.allowCache = e.allowed;
                                                    if (!("allowed" in e)) {
                                                        this.trigger("info", {
                                                            message: "defaulting allowCache to YES"
                                                        });
                                                        this.manifest.allowCache = true
                                                    }
                                                },
                                                byterange: function p() {
                                                    var p = {};
                                                    if ("length" in e) {
                                                        s.byterange = p;
                                                        p.length = e.length;
                                                        if (!("offset" in e)) {
                                                            this.trigger("info", {
                                                                message: "defaulting offset to zero"
                                                            });
                                                            e.offset = 0
                                                        }
                                                    }
                                                    if ("offset" in e) {
                                                        s.byterange = p;
                                                        p.offset = e.offset
                                                    }
                                                },
                                                endlist: function() {
                                                    this.manifest.endList = true
                                                },
                                                inf: function() {
                                                    if (!("mediaSequence" in this.manifest)) {
                                                        this.manifest.mediaSequence = 0;
                                                        this.trigger("info", {
                                                            message: "defaulting media sequence to zero"
                                                        })
                                                    }
                                                    if (!("discontinuitySequence" in this.manifest)) {
                                                        this.manifest.discontinuitySequence = 0;
                                                        this.trigger("info", {
                                                            message: "defaulting discontinuity sequence to zero"
                                                        })
                                                    }
                                                    if (e.duration > 0) {
                                                        s.duration = e.duration
                                                    }
                                                    if (e.duration === 0) {
                                                        s.duration = .01;
                                                        this.trigger("info", {
                                                            message: "updating zero segment duration to a small value"
                                                        })
                                                    }
                                                    this.manifest.segments = i
                                                },
                                                key: function() {
                                                    if (!e.attributes) {
                                                        this.trigger("warn", {
                                                            message: "ignoring key declaration without attribute list"
                                                        });
                                                        return
                                                    }
                                                    if (e.attributes.METHOD === "NONE") {
                                                        u = null;
                                                        return
                                                    }
                                                    if (!e.attributes.URI) {
                                                        this.trigger("warn", {
                                                            message: "ignoring key declaration without URI"
                                                        });
                                                        return
                                                    }
                                                    if (!e.attributes.METHOD) {
                                                        this.trigger("warn", {
                                                            message: "defaulting key method to AES-128"
                                                        })
                                                    }
                                                    u = {
                                                        method: e.attributes.METHOD || "AES-128",
                                                        uri: e.attributes.URI
                                                    };
                                                    if (typeof e.attributes.IV !== "undefined") {
                                                        u.iv = e.attributes.IV
                                                    }
                                                },
                                                "media-sequence": function() {
                                                    if (!isFinite(e.number)) {
                                                        this.trigger("warn", {
                                                            message: "ignoring invalid media sequence: " + e.number
                                                        });
                                                        return
                                                    }
                                                    this.manifest.mediaSequence = e.number
                                                },
                                                "discontinuity-sequence": function() {
                                                    if (!isFinite(e.number)) {
                                                        this.trigger("warn", {
                                                            message: "ignoring invalid discontinuity sequence: " + e.number
                                                        });
                                                        return
                                                    }
                                                    this.manifest.discontinuitySequence = e.number;
                                                    h = e.number
                                                },
                                                "playlist-type": function() {
                                                    if (!/VOD|EVENT/.test(e.playlistType)) {
                                                        this.trigger("warn", {
                                                            message: "ignoring unknown playlist type: " + e.playlist
                                                        });
                                                        return
                                                    }
                                                    this.manifest.playlistType = e.playlistType
                                                },
                                                map: function() {
                                                    o = {};
                                                    if (e.uri) {
                                                        o.uri = e.uri
                                                    }
                                                    if (e.byterange) {
                                                        o.byterange = e.byterange
                                                    }
                                                },
                                                "stream-inf": function() {
                                                    this.manifest.playlists = i;
                                                    this.manifest.mediaGroups = this.manifest.mediaGroups || l;
                                                    if (!e.attributes) {
                                                        this.trigger("warn", {
                                                            message: "ignoring empty stream-inf attributes"
                                                        });
                                                        return
                                                    }
                                                    if (!s.attributes) {
                                                        s.attributes = {}
                                                    }
                                                    r(s.attributes, e.attributes)
                                                },
                                                media: function() {
                                                    this.manifest.mediaGroups = this.manifest.mediaGroups || l;
                                                    if (!(e.attributes && e.attributes.TYPE && e.attributes["GROUP-ID"] && e.attributes.NAME)) {
                                                        this.trigger("warn", {
                                                            message: "ignoring incomplete or missing media group"
                                                        });
                                                        return
                                                    }
                                                    var r = this.manifest.mediaGroups[e.attributes.TYPE];
                                                    r[e.attributes["GROUP-ID"]] = r[e.attributes["GROUP-ID"]] || {};
                                                    t = r[e.attributes["GROUP-ID"]];
                                                    f = {
                                                        "default": /yes/i.test(e.attributes.DEFAULT)
                                                    };
                                                    if (f["default"]) {
                                                        f.autoselect = true
                                                    } else {
                                                        f.autoselect = /yes/i.test(e.attributes.AUTOSELECT)
                                                    }
                                                    if (e.attributes.LANGUAGE) {
                                                        f.language = e.attributes.LANGUAGE
                                                    }
                                                    if (e.attributes.URI) {
                                                        f.uri = e.attributes.URI
                                                    }
                                                    if (e.attributes["INSTREAM-ID"]) {
                                                        f.instreamId = e.attributes["INSTREAM-ID"]
                                                    }
                                                    if (e.attributes.CHARACTERISTICS) {
                                                        f.characteristics = e.attributes.CHARACTERISTICS
                                                    }
                                                    if (e.attributes.FORCED) {
                                                        f.forced = /yes/i.test(e.attributes.FORCED)
                                                    }
                                                    t[e.attributes.NAME] = f
                                                },
                                                discontinuity: function() {
                                                    h += 1;
                                                    s.discontinuity = true;
                                                    this.manifest.discontinuityStarts.push(i.length)
                                                },
                                                "program-date-time": function() {
                                                    this.manifest.dateTimeString = e.dateTimeString;
                                                    this.manifest.dateTimeObject = e.dateTimeObject
                                                },
                                                targetduration: function() {
                                                    if (!isFinite(e.duration) || e.duration < 0) {
                                                        this.trigger("warn", {
                                                            message: "ignoring invalid target duration: " + e.duration
                                                        });
                                                        return
                                                    }
                                                    this.manifest.targetDuration = e.duration
                                                },
                                                totalduration: function() {
                                                    if (!isFinite(e.duration) || e.duration < 0) {
                                                        this.trigger("warn", {
                                                            message: "ignoring invalid total duration: " + e.duration
                                                        });
                                                        return
                                                    }
                                                    this.manifest.totalDuration = e.duration
                                                },
                                                "cue-out": function() {
                                                    s.cueOut = e.data
                                                },
                                                "cue-out-cont": function() {
                                                    s.cueOutCont = e.data
                                                },
                                                "cue-in": function() {
                                                    s.cueIn = e.data
                                                }
                                            }))[e.tagType] || a).call(n)
                                        },
                                        uri: function() {
                                            s.uri = e.uri;
                                            i.push(s);
                                            if (this.manifest.targetDuration && !("duration" in s)) {
                                                this.trigger("warn", {
                                                    message: "defaulting segment duration to the target duration"
                                                });
                                                s.duration = this.manifest.targetDuration
                                            }
                                            if (u) {
                                                s.key = u
                                            }
                                            s.timeline = h;
                                            if (o) {
                                                s.map = o
                                            }
                                            s = {}
                                        },
                                        comment: function() {}
                                    }))[e.type].call(n)
                                });
                                return e
                            }
                            v(t, e);
                            i(t, [{
                                key: "push",
                                value: function(t) {
                                    this.lineStream.push(t)
                                }
                            }, {
                                key: "end",
                                value: function() {
                                    this.lineStream.push("\n")
                                }
                            }]);
                            return t
                        }(o["default"]);
                        n["default"] = m
                    }, {
                        "./line-stream": 34,
                        "./parse-stream": 35,
                        "./stream": 37
                    }],
                    37: [function(e, t, n) {
                        "use strict";

                        function i(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            function e(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || false;
                                    r.configurable = true;
                                    if ("value" in r)
                                        r.writable = true;
                                    Object.defineProperty(e, r.key, r)
                                }
                            }
                            return function(t, n, r) {
                                if (n)
                                    e(t.prototype, n);
                                if (r)
                                    e(t, r);
                                return t
                            }
                        }();
                        var s = function() {
                            function e() {
                                i(this, e);
                                this.listeners = {}
                            }
                            r(e, [{
                                key: "on",
                                value: function(t, n) {
                                    if (!this.listeners[t]) {
                                        this.listeners[t] = []
                                    }
                                    this.listeners[t].push(n)
                                }
                            }, {
                                key: "off",
                                value: function(t, n) {
                                    if (!this.listeners[t]) {
                                        return false
                                    }
                                    var r = this.listeners[t].indexOf(n);
                                    this.listeners[t].splice(r, 1);
                                    return r > -1
                                }
                            }, {
                                key: "trigger",
                                value: function(t) {
                                    var n = this.listeners[t];
                                    var r = void 0;
                                    var i = void 0;
                                    var s = void 0;
                                    if (!n) {
                                        return
                                    }
                                    if (arguments.length === 2) {
                                        i = n.length;
                                        for (r = 0; r < i; ++r) {
                                            n[r].call(this, arguments[1])
                                        }
                                    } else {
                                        s = Array.prototype.slice.call(arguments, 1);
                                        i = n.length;
                                        for (r = 0; r < i; ++r) {
                                            n[r].apply(this, s)
                                        }
                                    }
                                }
                            }, {
                                key: "dispose",
                                value: function() {
                                    this.listeners = {}
                                }
                            }, {
                                key: "pipe",
                                value: function(t) {
                                    this.on("data", function(e) {
                                        t.push(e)
                                    })
                                }
                            }]);
                            return e
                        }();
                        n["default"] = s
                    }, {}],
                    38: [function(e, t, n) {
                        "use strict";
                        var r = e("../utils/stream.js");
                        var i;
                        i = function() {
                            var t = new Uint8Array,
                                n = 0;
                            i.prototype.init.call(this);
                            this.setTimestamp = function(e) {
                                n = e
                            };
                            this.parseId3TagSize = function(e, t) {
                                var n = e[t + 6] << 21 | e[t + 7] << 14 | e[t + 8] << 7 | e[t + 9],
                                    r = e[t + 5],
                                    i = (r & 16) >> 4;
                                if (i) {
                                    return n + 20
                                }
                                return n + 10
                            };
                            this.parseAdtsSize = function(e, t) {
                                var n = (e[t + 5] & 224) >> 5,
                                    r = e[t + 4] << 3,
                                    i = e[t + 3] & 3 << 11;
                                return i | r | n
                            };
                            this.push = function(e) {
                                var r = 0,
                                    i = 0,
                                    s, o, u, a;
                                if (t.length) {
                                    a = t.length;
                                    t = new Uint8Array(e.byteLength + a);
                                    t.set(t.subarray(0, a));
                                    t.set(e, a)
                                } else {
                                    t = e
                                }
                                while (t.length - i >= 3) {
                                    if (t[i] === "I".charCodeAt(0) && t[i + 1] === "D".charCodeAt(0) && t[i + 2] === "3".charCodeAt(0)) {
                                        if (t.length - i < 10) {
                                            break
                                        }
                                        r = this.parseId3TagSize(t, i);
                                        if (r > t.length) {
                                            break
                                        }
                                        o = {
                                            type: "timed-metadata",
                                            data: t.subarray(i, i + r)
                                        };
                                        this.trigger("data", o);
                                        i += r;
                                        continue
                                    } else if (t[i] & 255 === 255 && (t[i + 1] & 240) === 240) {
                                        if (t.length - i < 7) {
                                            break
                                        }
                                        r = this.parseAdtsSize(t, i);
                                        if (r > t.length) {
                                            break
                                        }
                                        u = {
                                            type: "audio",
                                            data: t.subarray(i, i + r),
                                            pts: n,
                                            dts: n
                                        };
                                        this.trigger("data", u);
                                        i += r;
                                        continue
                                    }
                                    i++
                                }
                                s = t.length - i;
                                if (s > 0) {
                                    t = t.subarray(i)
                                } else {
                                    t = new Uint8Array
                                }
                            }
                        };
                        i.prototype = new r;
                        t.exports = i
                    }, {
                        "../utils/stream.js": 62
                    }],
                    39: [function(e, t, n) {
                        "use strict";
                        var r = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                        var i = function(t) {
                            return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
                        };
                        var s = function(t, n, r) {
                            var i, s = "";
                            for (i = n; i < r; i++) {
                                s += "%" + ("00" + t[i].toString(16)).slice(-2)
                            }
                            return s
                        };
                        var o = function(t, n, r) {
                            return unescape(s(t, n, r))
                        };
                        var u = function(t, n) {
                            var r = t[n + 6] << 21 | t[n + 7] << 14 | t[n + 8] << 7 | t[n + 9],
                                i = t[n + 5],
                                s = (i & 16) >> 4;
                            if (s) {
                                return r + 20
                            }
                            return r + 10
                        };
                        var a = function(t, n) {
                            var r = (t[n + 5] & 224) >> 5,
                                i = t[n + 4] << 3,
                                s = t[n + 3] & 3 << 11;
                            return s | i | r
                        };
                        var f = function(t, n) {
                            if (t[n] === "I".charCodeAt(0) && t[n + 1] === "D".charCodeAt(0) && t[n + 2] === "3".charCodeAt(0)) {
                                return "timed-metadata"
                            } else if (t[n] & 255 === 255 && (t[n + 1] & 240) === 240) {
                                return "audio"
                            }
                            return null
                        };
                        var l = function(t) {
                            var n = 0;
                            while (n + 5 < t.length) {
                                if (t[n] !== 255 || (t[n + 1] & 246) !== 240) {
                                    n++;
                                    continue
                                }
                                return r[(t[n + 2] & 60) >>> 2]
                            }
                            return null
                        };
                        var c = function(t) {
                            var n, r, s, u;
                            n = 10;
                            if (t[5] & 64) {
                                n += 4;
                                n += i(t.subarray(10, 14))
                            }
                            do {
                                r = i(t.subarray(n + 4, n + 8));
                                if (r < 1) {
                                    return null
                                }
                                u = String.fromCharCode(t[n], t[n + 1], t[n + 2], t[n + 3]);
                                if (u === "PRIV") {
                                    s = t.subarray(n + 10, n + r + 10);
                                    for (var a = 0; a < s.byteLength; a++) {
                                        if (s[a] === 0) {
                                            var f = o(s, 0, a);
                                            if (f === "com.apple.streaming.transportStreamTimestamp") {
                                                var l = s.subarray(a + 1);
                                                var c = (l[3] & 1) << 30 | l[4] << 22 | l[5] << 14 | l[6] << 6 | l[7] >>> 2;
                                                c *= 4;
                                                c += l[7] & 3;
                                                return c
                                            }
                                            break
                                        }
                                    }
                                }
                                n += 10;
                                n += r
                            } while (n < t.byteLength);
                            return null
                        };
                        t.exports = {
                            parseId3TagSize: u,
                            parseAdtsSize: a,
                            parseType: f,
                            parseSampleRate: l,
                            parseAacTimestamp: c
                        }
                    }, {}],
                    40: [function(e, t, n) {
                        "use strict";
                        var r = e("../utils/stream.js");
                        var i;
                        var s = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                        i = function() {
                            var t;
                            i.prototype.init.call(this);
                            this.push = function(e) {
                                var n = 0,
                                    r = 0,
                                    i, o, u, a, f, l;
                                if (e.type !== "audio") {
                                    return
                                }
                                if (t) {
                                    a = t;
                                    t = new Uint8Array(a.byteLength + e.data.byteLength);
                                    t.set(a);
                                    t.set(e.data, a.byteLength)
                                } else {
                                    t = e.data
                                }
                                while (n + 5 < t.length) {
                                    if (t[n] !== 255 || (t[n + 1] & 246) !== 240) {
                                        n++;
                                        continue
                                    }
                                    o = (~t[n + 1] & 1) * 2;
                                    i = (t[n + 3] & 3) << 11 | t[n + 4] << 3 | (t[n + 5] & 224) >> 5;
                                    f = ((t[n + 6] & 3) + 1) * 1024;
                                    l = f * 9e4 / s[(t[n + 2] & 60) >>> 2];
                                    u = n + i;
                                    if (t.byteLength < u) {
                                        return
                                    }
                                    this.trigger("data", {
                                        pts: e.pts + r * l,
                                        dts: e.dts + r * l,
                                        sampleCount: f,
                                        audioobjecttype: (t[n + 2] >>> 6 & 3) + 1,
                                        channelcount: (t[n + 2] & 1) << 2 | (t[n + 3] & 192) >>> 6,
                                        samplerate: s[(t[n + 2] & 60) >>> 2],
                                        samplingfrequencyindex: (t[n + 2] & 60) >>> 2,
                                        samplesize: 16,
                                        data: t.subarray(n + 7 + o, u)
                                    });
                                    if (t.byteLength === u) {
                                        t = undefined;
                                        return
                                    }
                                    r++;
                                    t = t.subarray(u)
                                }
                            };
                            this.flush = function() {
                                this.trigger("done")
                            }
                        };
                        i.prototype = new r;
                        t.exports = i
                    }, {
                        "../utils/stream.js": 62
                    }],
                    41: [function(e, t, n) {
                        "use strict";
                        var r = e("../utils/stream.js");
                        var i = e("../utils/exp-golomb.js");
                        var s, o;
                        var u;
                        o = function() {
                            var t = 0,
                                n, r;
                            o.prototype.init.call(this);
                            this.push = function(e) {
                                var i;
                                if (!r) {
                                    r = e.data
                                } else {
                                    i = new Uint8Array(r.byteLength + e.data.byteLength);
                                    i.set(r);
                                    i.set(e.data, r.byteLength);
                                    r = i
                                }
                                for (; t < r.byteLength - 3; t++) {
                                    if (r[t + 2] === 1) {
                                        n = t + 5;
                                        break
                                    }
                                }
                                while (n < r.byteLength) {
                                    switch (r[n]) {
                                        case 0:
                                            if (r[n - 1] !== 0) {
                                                n += 2;
                                                break
                                            } else if (r[n - 2] !== 0) {
                                                n++;
                                                break
                                            }
                                            if (t + 3 !== n - 2) {
                                                this.trigger("data", r.subarray(t + 3, n - 2))
                                            }
                                            do {
                                                n++
                                            } while (r[n] !== 1 && n < r.length);
                                            t = n - 2;
                                            n += 3;
                                            break;
                                        case 1:
                                            if (r[n - 1] !== 0 || r[n - 2] !== 0) {
                                                n += 3;
                                                break
                                            }
                                            this.trigger("data", r.subarray(t + 3, n - 2));
                                            t = n - 2;
                                            n += 3;
                                            break;
                                        default:
                                            n += 3;
                                            break
                                    }
                                }
                                r = r.subarray(t);
                                n -= t;
                                t = 0
                            };
                            this.flush = function() {
                                if (r && r.byteLength > 3) {
                                    this.trigger("data", r.subarray(t + 3))
                                }
                                r = null;
                                t = 0;
                                this.trigger("done")
                            }
                        };
                        o.prototype = new r;
                        u = {
                            100: true,
                            110: true,
                            122: true,
                            244: true,
                            44: true,
                            83: true,
                            86: true,
                            118: true,
                            128: true,
                            138: true,
                            139: true,
                            134: true
                        };
                        s = function() {
                            var t = new o,
                                n, r, a, f, l, c, h;
                            s.prototype.init.call(this);
                            n = this;
                            this.push = function(e) {
                                if (e.type !== "video") {
                                    return
                                }
                                r = e.trackId;
                                a = e.pts;
                                f = e.dts;
                                t.push(e)
                            };
                            t.on("data", function(e) {
                                var t = {
                                    trackId: r,
                                    pts: a,
                                    dts: f,
                                    data: e
                                };
                                switch (e[0] & 31) {
                                    case 5:
                                        t.nalUnitType = "slice_layer_without_partitioning_rbsp_idr";
                                        break;
                                    case 6:
                                        t.nalUnitType = "sei_rbsp";
                                        t.escapedRBSP = l(e.subarray(1));
                                        break;
                                    case 7:
                                        t.nalUnitType = "seq_parameter_set_rbsp";
                                        t.escapedRBSP = l(e.subarray(1));
                                        t.config = c(t.escapedRBSP);
                                        break;
                                    case 8:
                                        t.nalUnitType = "pic_parameter_set_rbsp";
                                        break;
                                    case 9:
                                        t.nalUnitType = "access_unit_delimiter_rbsp";
                                        break;
                                    default:
                                        break
                                }
                                n.trigger("data", t)
                            });
                            t.on("done", function() {
                                n.trigger("done")
                            });
                            this.flush = function() {
                                t.flush()
                            };
                            h = function(t, n) {
                                var r = 8,
                                    i = 8,
                                    s, o;
                                for (s = 0; s < t; s++) {
                                    if (i !== 0) {
                                        o = n.readExpGolomb();
                                        i = (r + o + 256) % 256
                                    }
                                    r = i === 0 ? r : i
                                }
                            };
                            l = function(t) {
                                var n = t.byteLength,
                                    r = [],
                                    i = 1,
                                    s, o;
                                while (i < n - 2) {
                                    if (t[i] === 0 && t[i + 1] === 0 && t[i + 2] === 3) {
                                        r.push(i + 2);
                                        i += 2
                                    } else {
                                        i++
                                    }
                                }
                                if (r.length === 0) {
                                    return t
                                }
                                s = n - r.length;
                                o = new Uint8Array(s);
                                var u = 0;
                                for (i = 0; i < s; u++,
                                    i++) {
                                    if (u === r[0]) {
                                        u++;
                                        r.shift()
                                    }
                                    o[i] = t[u]
                                }
                                return o
                            };
                            c = function(t) {
                                var n = 0,
                                    r = 0,
                                    s = 0,
                                    o = 0,
                                    a = 1,
                                    f, l, c, p, d, v, m, g, y, b, w, E, S, x;
                                f = new i(t);
                                l = f.readUnsignedByte();
                                p = f.readUnsignedByte();
                                c = f.readUnsignedByte();
                                f.skipUnsignedExpGolomb();
                                if (u[l]) {
                                    d = f.readUnsignedExpGolomb();
                                    if (d === 3) {
                                        f.skipBits(1)
                                    }
                                    f.skipUnsignedExpGolomb();
                                    f.skipUnsignedExpGolomb();
                                    f.skipBits(1);
                                    if (f.readBoolean()) {
                                        w = d !== 3 ? 8 : 12;
                                        for (x = 0; x < w; x++) {
                                            if (f.readBoolean()) {
                                                if (x < 6) {
                                                    h(16, f)
                                                } else {
                                                    h(64, f)
                                                }
                                            }
                                        }
                                    }
                                }
                                f.skipUnsignedExpGolomb();
                                v = f.readUnsignedExpGolomb();
                                if (v === 0) {
                                    f.readUnsignedExpGolomb()
                                } else if (v === 1) {
                                    f.skipBits(1);
                                    f.skipExpGolomb();
                                    f.skipExpGolomb();
                                    m = f.readUnsignedExpGolomb();
                                    for (x = 0; x < m; x++) {
                                        f.skipExpGolomb()
                                    }
                                }
                                f.skipUnsignedExpGolomb();
                                f.skipBits(1);
                                g = f.readUnsignedExpGolomb();
                                y = f.readUnsignedExpGolomb();
                                b = f.readBits(1);
                                if (b === 0) {
                                    f.skipBits(1)
                                }
                                f.skipBits(1);
                                if (f.readBoolean()) {
                                    n = f.readUnsignedExpGolomb();
                                    r = f.readUnsignedExpGolomb();
                                    s = f.readUnsignedExpGolomb();
                                    o = f.readUnsignedExpGolomb()
                                }
                                if (f.readBoolean()) {
                                    if (f.readBoolean()) {
                                        S = f.readUnsignedByte();
                                        switch (S) {
                                            case 1:
                                                E = [1, 1];
                                                break;
                                            case 2:
                                                E = [12, 11];
                                                break;
                                            case 3:
                                                E = [10, 11];
                                                break;
                                            case 4:
                                                E = [16, 11];
                                                break;
                                            case 5:
                                                E = [40, 33];
                                                break;
                                            case 6:
                                                E = [24, 11];
                                                break;
                                            case 7:
                                                E = [20, 11];
                                                break;
                                            case 8:
                                                E = [32, 11];
                                                break;
                                            case 9:
                                                E = [80, 33];
                                                break;
                                            case 10:
                                                E = [18, 11];
                                                break;
                                            case 11:
                                                E = [15, 11];
                                                break;
                                            case 12:
                                                E = [64, 33];
                                                break;
                                            case 13:
                                                E = [160, 99];
                                                break;
                                            case 14:
                                                E = [4, 3];
                                                break;
                                            case 15:
                                                E = [3, 2];
                                                break;
                                            case 16:
                                                E = [2, 1];
                                                break;
                                            case 255:
                                                {
                                                    E = [f.readUnsignedByte() << 8 | f.readUnsignedByte(), f.readUnsignedByte() << 8 | f.readUnsignedByte()];
                                                    break
                                                }
                                        }
                                        if (E) {
                                            a = E[0] / E[1]
                                        }
                                    }
                                }
                                return {
                                    profileIdc: l,
                                    levelIdc: c,
                                    profileCompatibility: p,
                                    width: Math.ceil(((g + 1) * 16 - n * 2 - r * 2) * a),
                                    height: (2 - b) * (y + 1) * 16 - s * 2 - o * 2
                                }
                            }
                        };
                        s.prototype = new r;
                        t.exports = {
                            H264Stream: s,
                            NalByteStream: o
                        }
                    }, {
                        "../utils/exp-golomb.js": 61,
                        "../utils/stream.js": 62
                    }],
                    42: [function(e, t, n) {
                        var r = [33, 16, 5, 32, 164, 27];
                        var i = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];
                        var s = function(t) {
                            var n = [];
                            while (t--) {
                                n.push(0)
                            }
                            return n
                        };
                        var o = function(t) {
                            return Object.keys(t).reduce(function(e, n) {
                                e[n] = new Uint8Array(t[n].reduce(function(e, t) {
                                    return e.concat(t)
                                }, []));
                                return e
                            }, {})
                        };
                        var u = {
                            96e3: [r, [227, 64], s(154), [56]],
                            88200: [r, [231], s(170), [56]],
                            64e3: [r, [248, 192], s(240), [56]],
                            48e3: [r, [255, 192], s(268), [55, 148, 128], s(54), [112]],
                            44100: [r, [255, 192], s(268), [55, 163, 128], s(84), [112]],
                            32e3: [r, [255, 192], s(268), [55, 234], s(226), [112]],
                            24e3: [r, [255, 192], s(268), [55, 255, 128], s(268), [111, 112], s(126), [224]],
                            16e3: [r, [255, 192], s(268), [55, 255, 128], s(268), [111, 255], s(269), [223, 108], s(195), [1, 192]],
                            12e3: [i, s(268), [3, 127, 248], s(268), [6, 255, 240], s(268), [13, 255, 224], s(268), [27, 253, 128], s(259), [56]],
                            11025: [i, s(268), [3, 127, 248], s(268), [6, 255, 240], s(268), [13, 255, 224], s(268), [27, 255, 192], s(268), [55, 175, 128], s(108), [112]],
                            8e3: [i, s(268), [3, 121, 16], s(47), [7]]
                        };
                        t.exports = o(u)
                    }, {}],
                    43: [function(e, t, n) {
                        "use strict";
                        var r = e("../utils/stream.js");
                        var i = function s(e) {
                            this.numberOfTracks = 0;
                            this.metadataStream = e.metadataStream;
                            this.videoTags = [];
                            this.audioTags = [];
                            this.videoTrack = null;
                            this.audioTrack = null;
                            this.pendingCaptions = [];
                            this.pendingMetadata = [];
                            this.pendingTracks = 0;
                            this.processedTracks = 0;
                            s.prototype.init.call(this);
                            this.push = function(e) {
                                if (e.text) {
                                    return this.pendingCaptions.push(e)
                                }
                                if (e.frames) {
                                    return this.pendingMetadata.push(e)
                                }
                                if (e.track.type === "video") {
                                    this.videoTrack = e.track;
                                    this.videoTags = e.tags;
                                    this.pendingTracks++
                                }
                                if (e.track.type === "audio") {
                                    this.audioTrack = e.track;
                                    this.audioTags = e.tags;
                                    this.pendingTracks++
                                }
                            }
                        };
                        i.prototype = new r;
                        i.prototype.flush = function(e) {
                            var t, n, r, i, s = {
                                tags: {},
                                captions: [],
                                captionStreams: {},
                                metadata: []
                            };
                            if (this.pendingTracks < this.numberOfTracks) {
                                if (e !== "VideoSegmentStream" && e !== "AudioSegmentStream") {
                                    return
                                } else if (this.pendingTracks === 0) {
                                    this.processedTracks++;
                                    if (this.processedTracks < this.numberOfTracks) {
                                        return
                                    }
                                }
                            }
                            this.processedTracks += this.pendingTracks;
                            this.pendingTracks = 0;
                            if (this.processedTracks < this.numberOfTracks) {
                                return
                            }
                            if (this.videoTrack) {
                                i = this.videoTrack.timelineStartInfo.pts
                            } else if (this.audioTrack) {
                                i = this.audioTrack.timelineStartInfo.pts
                            }
                            s.tags.videoTags = this.videoTags;
                            s.tags.audioTags = this.audioTags;
                            for (r = 0; r < this.pendingCaptions.length; r++) {
                                n = this.pendingCaptions[r];
                                n.startTime = n.startPts - i;
                                n.startTime /= 9e4;
                                n.endTime = n.endPts - i;
                                n.endTime /= 9e4;
                                s.captionStreams[n.stream] = true;
                                s.captions.push(n)
                            }
                            for (r = 0; r < this.pendingMetadata.length; r++) {
                                t = this.pendingMetadata[r];
                                t.cueTime = t.pts - i;
                                t.cueTime /= 9e4;
                                s.metadata.push(t)
                            }
                            s.metadata.dispatchType = this.metadataStream.dispatchType;
                            this.videoTrack = null;
                            this.audioTrack = null;
                            this.videoTags = [];
                            this.audioTags = [];
                            this.pendingCaptions.length = 0;
                            this.pendingMetadata.length = 0;
                            this.pendingTracks = 0;
                            this.processedTracks = 0;
                            this.trigger("data", s);
                            this.trigger("done")
                        };
                        t.exports = i
                    }, {
                        "../utils/stream.js": 62
                    }],
                    44: [function(e, t, n) {
                        "use strict";
                        var r = e("./flv-tag.js");
                        var i = function(t, n, i) {
                            var s = new Uint8Array(3 + 1 + 1 + 4),
                                o = new DataView(s.buffer),
                                u, a, f;
                            t = t || 0;
                            n = n === undefined ? true : n;
                            i = i === undefined ? true : i;
                            o.setUint8(0, 70);
                            o.setUint8(1, 76);
                            o.setUint8(2, 86);
                            o.setUint8(3, 1);
                            o.setUint8(4, (n ? 4 : 0) | (i ? 1 : 0));
                            o.setUint32(5, s.byteLength);
                            if (t <= 0) {
                                a = new Uint8Array(s.byteLength + 4);
                                a.set(s);
                                a.set([0, 0, 0, 0], s.byteLength);
                                return a
                            }
                            u = new r(r.METADATA_TAG);
                            u.pts = u.dts = 0;
                            u.writeMetaDataDouble("duration", t);
                            f = u.finalize().length;
                            a = new Uint8Array(s.byteLength + f);
                            a.set(s);
                            a.set(o.byteLength, f);
                            return a
                        };
                        t.exports = i
                    }, {
                        "./flv-tag.js": 45
                    }],
                    45: [function(e, t, n) {
                        "use strict";
                        var r;
                        r = function(t, n) {
                            var i = 0,
                                s = 16384,
                                o = function(t, n) {
                                    var r, i = t.position + n;
                                    if (i < t.bytes.byteLength) {
                                        return
                                    }
                                    r = new Uint8Array(i * 2);
                                    r.set(t.bytes.subarray(0, t.position), 0);
                                    t.bytes = r;
                                    t.view = new DataView(t.bytes.buffer)
                                },
                                u = r.widthBytes || new Uint8Array("width".length),
                                a = r.heightBytes || new Uint8Array("height".length),
                                f = r.videocodecidBytes || new Uint8Array("videocodecid".length),
                                l;
                            if (!r.widthBytes) {
                                for (l = 0; l < "width".length; l++) {
                                    u[l] = "width".charCodeAt(l)
                                }
                                for (l = 0; l < "height".length; l++) {
                                    a[l] = "height".charCodeAt(l)
                                }
                                for (l = 0; l < "videocodecid".length; l++) {
                                    f[l] = "videocodecid".charCodeAt(l)
                                }
                                r.widthBytes = u;
                                r.heightBytes = a;
                                r.videocodecidBytes = f
                            }
                            this.keyFrame = false;
                            switch (t) {
                                case r.VIDEO_TAG:
                                    this.length = 16;
                                    s *= 6;
                                    break;
                                case r.AUDIO_TAG:
                                    this.length = 13;
                                    this.keyFrame = true;
                                    break;
                                case r.METADATA_TAG:
                                    this.length = 29;
                                    this.keyFrame = true;
                                    break;
                                default:
                                    throw new Error("Unknown FLV tag type")
                            }
                            this.bytes = new Uint8Array(s);
                            this.view = new DataView(this.bytes.buffer);
                            this.bytes[0] = t;
                            this.position = this.length;
                            this.keyFrame = n;
                            this.pts = 0;
                            this.dts = 0;
                            this.writeBytes = function(e, t, n) {
                                var r = t || 0,
                                    i;
                                n = n || e.byteLength;
                                i = r + n;
                                o(this, n);
                                this.bytes.set(e.subarray(r, i), this.position);
                                this.position += n;
                                this.length = Math.max(this.length, this.position)
                            };
                            this.writeByte = function(e) {
                                o(this, 1);
                                this.bytes[this.position] = e;
                                this.position++;
                                this.length = Math.max(this.length, this.position)
                            };
                            this.writeShort = function(e) {
                                o(this, 2);
                                this.view.setUint16(this.position, e);
                                this.position += 2;
                                this.length = Math.max(this.length, this.position)
                            };
                            this.negIndex = function(e) {
                                return this.bytes[this.length - e]
                            };
                            this.nalUnitSize = function() {
                                if (i === 0) {
                                    return 0
                                }
                                return this.length - (i + 4)
                            };
                            this.startNalUnit = function() {
                                if (i > 0) {
                                    throw new Error("Attempted to create new NAL wihout closing the old one")
                                }
                                i = this.length;
                                this.length += 4;
                                this.position = this.length
                            };
                            this.endNalUnit = function(e) {
                                var t, n;
                                if (this.length === i + 4) {
                                    this.length -= 4
                                } else if (i > 0) {
                                    t = i + 4;
                                    n = this.length - t;
                                    this.position = i;
                                    this.view.setUint32(this.position, n);
                                    this.position = this.length;
                                    if (e) {
                                        e.push(this.bytes.subarray(t, t + n))
                                    }
                                }
                                i = 0
                            };
                            this.writeMetaDataDouble = function(e, t) {
                                var n;
                                o(this, 2 + e.length + 9);
                                this.view.setUint16(this.position, e.length);
                                this.position += 2;
                                if (e === "width") {
                                    this.bytes.set(u, this.position);
                                    this.position += 5
                                } else if (e === "height") {
                                    this.bytes.set(a, this.position);
                                    this.position += 6
                                } else if (e === "videocodecid") {
                                    this.bytes.set(f, this.position);
                                    this.position += 12
                                } else {
                                    for (n = 0; n < e.length; n++) {
                                        this.bytes[this.position] = e.charCodeAt(n);
                                        this.position++
                                    }
                                }
                                this.position++;
                                this.view.setFloat64(this.position, t);
                                this.position += 8;
                                this.length = Math.max(this.length, this.position);
                                ++i
                            };
                            this.writeMetaDataBoolean = function(e, t) {
                                var n;
                                o(this, 2);
                                this.view.setUint16(this.position, e.length);
                                this.position += 2;
                                for (n = 0; n < e.length; n++) {
                                    o(this, 1);
                                    this.bytes[this.position] = e.charCodeAt(n);
                                    this.position++
                                }
                                o(this, 2);
                                this.view.setUint8(this.position, 1);
                                this.position++;
                                this.view.setUint8(this.position, t ? 1 : 0);
                                this.position++;
                                this.length = Math.max(this.length, this.position);
                                ++i
                            };
                            this.finalize = function() {
                                var e, t;
                                switch (this.bytes[0]) {
                                    case r.VIDEO_TAG:
                                        this.bytes[11] = (this.keyFrame || n ? 16 : 32) | 7;
                                        this.bytes[12] = n ? 0 : 1;
                                        e = this.pts - this.dts;
                                        this.bytes[13] = (e & 16711680) >>> 16;
                                        this.bytes[14] = (e & 65280) >>> 8;
                                        this.bytes[15] = (e & 255) >>> 0;
                                        break;
                                    case r.AUDIO_TAG:
                                        this.bytes[11] = 175;
                                        this.bytes[12] = n ? 0 : 1;
                                        break;
                                    case r.METADATA_TAG:
                                        this.position = 11;
                                        this.view.setUint8(this.position, 2);
                                        this.position++;
                                        this.view.setUint16(this.position, 10);
                                        this.position += 2;
                                        this.bytes.set([111, 110, 77, 101, 116, 97, 68, 97, 116, 97], this.position);
                                        this.position += 10;
                                        this.bytes[this.position] = 8;
                                        this.position++;
                                        this.view.setUint32(this.position, i);
                                        this.position = this.length;
                                        this.bytes.set([0, 0, 9], this.position);
                                        this.position += 3;
                                        this.length = this.position;
                                        break
                                }
                                t = this.length - 11;
                                this.bytes[1] = (t & 16711680) >>> 16;
                                this.bytes[2] = (t & 65280) >>> 8;
                                this.bytes[3] = (t & 255) >>> 0;
                                this.bytes[4] = (this.dts & 16711680) >>> 16;
                                this.bytes[5] = (this.dts & 65280) >>> 8;
                                this.bytes[6] = (this.dts & 255) >>> 0;
                                this.bytes[7] = (this.dts & 4278190080) >>> 24;
                                this.bytes[8] = 0;
                                this.bytes[9] = 0;
                                this.bytes[10] = 0;
                                o(this, 4);
                                this.view.setUint32(this.length, this.length);
                                this.length += 4;
                                this.position += 4;
                                this.bytes = this.bytes.subarray(0, this.length);
                                this.frameTime = r.frameTime(this.bytes);
                                return this
                            }
                        };
                        r.AUDIO_TAG = 8;
                        r.VIDEO_TAG = 9;
                        r.METADATA_TAG = 18;
                        r.isAudioFrame = function(e) {
                            return r.AUDIO_TAG === e[0]
                        };
                        r.isVideoFrame = function(e) {
                            return r.VIDEO_TAG === e[0]
                        };
                        r.isMetaData = function(e) {
                            return r.METADATA_TAG === e[0]
                        };
                        r.isKeyFrame = function(e) {
                            if (r.isVideoFrame(e)) {
                                return e[11] === 23
                            }
                            if (r.isAudioFrame(e)) {
                                return true
                            }
                            if (r.isMetaData(e)) {
                                return true
                            }
                            return false
                        };
                        r.frameTime = function(e) {
                            var t = e[4] << 16;
                            t |= e[5] << 8;
                            t |= e[6] << 0;
                            t |= e[7] << 24;
                            return t
                        };
                        t.exports = r
                    }, {}],
                    46: [function(e, t, n) {
                        t.exports = {
                            tag: e("./flv-tag"),
                            Transmuxer: e("./transmuxer"),
                            getFlvHeader: e("./flv-header")
                        }
                    }, {
                        "./flv-header": 44,
                        "./flv-tag": 45,
                        "./transmuxer": 48
                    }],
                    47: [function(e, t, n) {
                        "use strict";
                        var r = function() {
                            var t = this;
                            this.list = [];
                            this.push = function(e) {
                                this.list.push({
                                    bytes: e.bytes,
                                    dts: e.dts,
                                    pts: e.pts,
                                    keyFrame: e.keyFrame,
                                    metaDataTag: e.metaDataTag
                                })
                            };
                            Object.defineProperty(this, "length", {
                                get: function() {
                                    return t.list.length
                                }
                            })
                        };
                        t.exports = r
                    }, {}],
                    48: [function(e, t, n) {
                        "use strict";
                        var r = e("../utils/stream.js");
                        var i = e("./flv-tag.js");
                        var s = e("../m2ts/m2ts.js");
                        var o = e("../codecs/adts.js");
                        var u = e("../codecs/h264").H264Stream;
                        var a = e("./coalesce-stream.js");
                        var f = e("./tag-list.js");
                        var l, c, h, p, d, v;
                        p = function(t, n) {
                            if (typeof n.pts === "number") {
                                if (t.timelineStartInfo.pts === undefined) {
                                    t.timelineStartInfo.pts = n.pts
                                } else {
                                    t.timelineStartInfo.pts = Math.min(t.timelineStartInfo.pts, n.pts)
                                }
                            }
                            if (typeof n.dts === "number") {
                                if (t.timelineStartInfo.dts === undefined) {
                                    t.timelineStartInfo.dts = n.dts
                                } else {
                                    t.timelineStartInfo.dts = Math.min(t.timelineStartInfo.dts, n.dts)
                                }
                            }
                        };
                        d = function(t, n) {
                            var r = new i(i.METADATA_TAG);
                            r.dts = n;
                            r.pts = n;
                            r.writeMetaDataDouble("videocodecid", 7);
                            r.writeMetaDataDouble("width", t.width);
                            r.writeMetaDataDouble("height", t.height);
                            return r
                        };
                        v = function(t, n) {
                            var r, s = new i(i.VIDEO_TAG, true);
                            s.dts = n;
                            s.pts = n;
                            s.writeByte(1);
                            s.writeByte(t.profileIdc);
                            s.writeByte(t.profileCompatibility);
                            s.writeByte(t.levelIdc);
                            s.writeByte(252 | 3);
                            s.writeByte(224 | 1);
                            s.writeShort(t.sps[0].length);
                            s.writeBytes(t.sps[0]);
                            s.writeByte(t.pps.length);
                            for (r = 0; r < t.pps.length; ++r) {
                                s.writeShort(t.pps[r].length);
                                s.writeBytes(t.pps[r])
                            }
                            return s
                        };
                        h = function(t) {
                            var n = [],
                                r = [],
                                s;
                            h.prototype.init.call(this);
                            this.push = function(e) {
                                p(t, e);
                                if (t) {
                                    t.audioobjecttype = e.audioobjecttype;
                                    t.channelcount = e.channelcount;
                                    t.samplerate = e.samplerate;
                                    t.samplingfrequencyindex = e.samplingfrequencyindex;
                                    t.samplesize = e.samplesize;
                                    t.extraData = t.audioobjecttype << 11 | t.samplingfrequencyindex << 7 | t.channelcount << 3
                                }
                                e.pts = Math.round(e.pts / 90);
                                e.dts = Math.round(e.dts / 90);
                                n.push(e)
                            };
                            this.flush = function() {
                                var e, o, u, a = new f;
                                if (n.length === 0) {
                                    this.trigger("done", "AudioSegmentStream");
                                    return
                                }
                                u = -Infinity;
                                while (n.length) {
                                    e = n.shift();
                                    if (r.length && e.pts >= r[0]) {
                                        u = r.shift();
                                        this.writeMetaDataTags(a, u)
                                    }
                                    if (t.extraData !== s || e.pts - u >= 1e3) {
                                        this.writeMetaDataTags(a, e.pts);
                                        s = t.extraData;
                                        u = e.pts
                                    }
                                    o = new i(i.AUDIO_TAG);
                                    o.pts = e.pts;
                                    o.dts = e.dts;
                                    o.writeBytes(e.data);
                                    a.push(o.finalize())
                                }
                                r.length = 0;
                                s = null;
                                this.trigger("data", {
                                    track: t,
                                    tags: a.list
                                });
                                this.trigger("done", "AudioSegmentStream")
                            };
                            this.writeMetaDataTags = function(e, n) {
                                var r;
                                r = new i(i.METADATA_TAG);
                                r.pts = n;
                                r.dts = n;
                                r.writeMetaDataDouble("audiocodecid", 10);
                                r.writeMetaDataBoolean("stereo", t.channelcount === 2);
                                r.writeMetaDataDouble("audiosamplerate", t.samplerate);
                                r.writeMetaDataDouble("audiosamplesize", 16);
                                e.push(r.finalize());
                                r = new i(i.AUDIO_TAG, true);
                                r.pts = n;
                                r.dts = n;
                                r.view.setUint16(r.position, t.extraData);
                                r.position += 2;
                                r.length = Math.max(r.length, r.position);
                                e.push(r.finalize())
                            };
                            this.onVideoKeyFrame = function(e) {
                                r.push(e)
                            }
                        };
                        h.prototype = new r;
                        c = function(t) {
                            var n = [],
                                r, s;
                            c.prototype.init.call(this);
                            this.finishFrame = function(e, n) {
                                if (!n) {
                                    return
                                }
                                if (r && t && t.newMetadata && (n.keyFrame || e.length === 0)) {
                                    var i = d(r, n.dts).finalize();
                                    var o = v(t, n.dts).finalize();
                                    i.metaDataTag = o.metaDataTag = true;
                                    e.push(i);
                                    e.push(o);
                                    t.newMetadata = false;
                                    this.trigger("keyframe", n.dts)
                                }
                                n.endNalUnit();
                                e.push(n.finalize());
                                s = null
                            };
                            this.push = function(e) {
                                p(t, e);
                                e.pts = Math.round(e.pts / 90);
                                e.dts = Math.round(e.dts / 90);
                                n.push(e)
                            };
                            this.flush = function() {
                                var e, o = new f;
                                while (n.length) {
                                    if (n[0].nalUnitType === "access_unit_delimiter_rbsp") {
                                        break
                                    }
                                    n.shift()
                                }
                                if (n.length === 0) {
                                    this.trigger("done", "VideoSegmentStream");
                                    return
                                }
                                while (n.length) {
                                    e = n.shift();
                                    if (e.nalUnitType === "seq_parameter_set_rbsp") {
                                        t.newMetadata = true;
                                        r = e.config;
                                        t.width = r.width;
                                        t.height = r.height;
                                        t.sps = [e.data];
                                        t.profileIdc = r.profileIdc;
                                        t.levelIdc = r.levelIdc;
                                        t.profileCompatibility = r.profileCompatibility;
                                        s.endNalUnit()
                                    } else if (e.nalUnitType === "pic_parameter_set_rbsp") {
                                        t.newMetadata = true;
                                        t.pps = [e.data];
                                        s.endNalUnit()
                                    } else if (e.nalUnitType === "access_unit_delimiter_rbsp") {
                                        if (s) {
                                            this.finishFrame(o, s)
                                        }
                                        s = new i(i.VIDEO_TAG);
                                        s.pts = e.pts;
                                        s.dts = e.dts
                                    } else {
                                        if (e.nalUnitType === "slice_layer_without_partitioning_rbsp_idr") {
                                            s.keyFrame = true
                                        }
                                        s.endNalUnit()
                                    }
                                    s.startNalUnit();
                                    s.writeBytes(e.data)
                                }
                                if (s) {
                                    this.finishFrame(o, s)
                                }
                                this.trigger("data", {
                                    track: t,
                                    tags: o.list
                                });
                                this.trigger("done", "VideoSegmentStream")
                            }
                        };
                        c.prototype = new r;
                        l = function(t) {
                            var n = this,
                                r, i, f, p, d, v, m, g, y, b, w, E;
                            l.prototype.init.call(this);
                            t = t || {};
                            this.metadataStream = new s.MetadataStream;
                            t.metadataStream = this.metadataStream;
                            r = new s.TransportPacketStream;
                            i = new s.TransportParseStream;
                            f = new s.ElementaryStream;
                            p = new s.TimestampRolloverStream("video");
                            d = new s.TimestampRolloverStream("audio");
                            v = new s.TimestampRolloverStream("timed-metadata");
                            m = new o;
                            g = new u;
                            E = new a(t);
                            r.pipe(i).pipe(f);
                            f.pipe(p).pipe(g);
                            f.pipe(d).pipe(m);
                            f.pipe(v).pipe(this.metadataStream).pipe(E);
                            w = new s.CaptionStream;
                            g.pipe(w).pipe(E);
                            f.on("data", function(e) {
                                var t, n, r;
                                if (e.type === "metadata") {
                                    t = e.tracks.length;
                                    while (t--) {
                                        if (e.tracks[t].type === "video") {
                                            n = e.tracks[t]
                                        } else if (e.tracks[t].type === "audio") {
                                            r = e.tracks[t]
                                        }
                                    }
                                    if (n && !y) {
                                        E.numberOfTracks++;
                                        y = new c(n);
                                        g.pipe(y).pipe(E)
                                    }
                                    if (r && !b) {
                                        E.numberOfTracks++;
                                        b = new h(r);
                                        m.pipe(b).pipe(E);
                                        if (y) {
                                            y.on("keyframe", b.onVideoKeyFrame)
                                        }
                                    }
                                }
                            });
                            this.push = function(e) {
                                r.push(e)
                            };
                            this.flush = function() {
                                r.flush()
                            };
                            this.resetCaptions = function() {
                                w.reset()
                            };
                            E.on("data", function(e) {
                                n.trigger("data", e)
                            });
                            E.on("done", function() {
                                n.trigger("done")
                            })
                        };
                        l.prototype = new r;
                        t.exports = l
                    }, {
                        "../codecs/adts.js": 40,
                        "../codecs/h264": 41,
                        "../m2ts/m2ts.js": 50,
                        "../utils/stream.js": 62,
                        "./coalesce-stream.js": 43,
                        "./flv-tag.js": 45,
                        "./tag-list.js": 47
                    }],
                    49: [function(e, t, n) {
                        "use strict";
                        var r = 4,
                            i = 128,
                            s = e("../utils/stream");
                        var o = function(t) {
                            var n = 0,
                                s = {
                                    payloadType: -1,
                                    payloadSize: 0
                                },
                                o = 0,
                                u = 0;
                            while (n < t.byteLength) {
                                if (t[n] === i) {
                                    break
                                }
                                while (t[n] === 255) {
                                    o += 255;
                                    n++
                                }
                                o += t[n++];
                                while (t[n] === 255) {
                                    u += 255;
                                    n++
                                }
                                u += t[n++];
                                if (!s.payload && o === r) {
                                    s.payloadType = o;
                                    s.payloadSize = u;
                                    s.payload = t.subarray(n, n + u);
                                    break
                                }
                                n += u;
                                o = 0;
                                u = 0
                            }
                            return s
                        };
                        var u = function(t) {
                            if (t.payload[0] !== 181) {
                                return null
                            }
                            if ((t.payload[1] << 8 | t.payload[2]) !== 49) {
                                return null
                            }
                            if (String.fromCharCode(t.payload[3], t.payload[4], t.payload[5], t.payload[6]) !== "GA94") {
                                return null
                            }
                            if (t.payload[7] !== 3) {
                                return null
                            }
                            return t.payload.subarray(8, t.payload.length - 1)
                        };
                        var a = function(t, n) {
                            var r = [],
                                i, s, o, u;
                            if (!(n[0] & 64)) {
                                return r
                            }
                            s = n[0] & 31;
                            for (i = 0; i < s; i++) {
                                o = i * 3;
                                u = {
                                    type: n[o + 2] & 3,
                                    pts: t
                                };
                                if (n[o + 2] & 4) {
                                    u.ccData = n[o + 3] << 8 | n[o + 4];
                                    r.push(u)
                                }
                            }
                            return r
                        };
                        var f = function m() {
                            m.prototype.init.call(this);
                            this.captionPackets_ = [];
                            this.ccStreams_ = [new v(0, 0), new v(0, 1), new v(1, 0), new v(1, 1)];
                            this.reset();
                            this.ccStreams_.forEach(function(e) {
                                e.on("data", this.trigger.bind(this, "data"));
                                e.on("done", this.trigger.bind(this, "done"))
                            }, this)
                        };
                        f.prototype = new s;
                        f.prototype.push = function(e) {
                            var t, n;
                            if (e.nalUnitType !== "sei_rbsp") {
                                return
                            }
                            t = o(e.escapedRBSP);
                            if (t.payloadType !== r) {
                                return
                            }
                            n = u(t);
                            if (!n) {
                                return
                            }
                            if (e.dts < this.latestDts_) {
                                this.ignoreNextEqualDts_ = true;
                                return
                            } else if (e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
                                this.ignoreNextEqualDts_ = false;
                                return
                            }
                            this.captionPackets_ = this.captionPackets_.concat(a(e.pts, n));
                            this.latestDts_ = e.dts
                        };
                        f.prototype.flush = function() {
                            if (!this.captionPackets_.length) {
                                this.ccStreams_.forEach(function(e) {
                                    e.flush()
                                }, this);
                                return
                            }
                            this.captionPackets_.forEach(function(e, t) {
                                e.presortIndex = t
                            });
                            this.captionPackets_.sort(function(e, t) {
                                if (e.pts === t.pts) {
                                    return e.presortIndex - t.presortIndex
                                }
                                return e.pts - t.pts
                            });
                            this.captionPackets_.forEach(function(e) {
                                if (e.type < 2) {
                                    this.dispatchCea608Packet(e)
                                }
                            }, this);
                            this.captionPackets_.length = 0;
                            this.ccStreams_.forEach(function(e) {
                                e.flush()
                            }, this);
                            return
                        };
                        f.prototype.reset = function() {
                            this.latestDts_ = null;
                            this.ignoreNextEqualDts_ = false;
                            this.activeCea608Channel_ = [null, null];
                            this.ccStreams_.forEach(function(e) {
                                e.reset()
                            })
                        };
                        f.prototype.dispatchCea608Packet = function(e) {
                            if (this.setsChannel1Active(e)) {
                                this.activeCea608Channel_[e.type] = 0
                            } else if (this.setsChannel2Active(e)) {
                                this.activeCea608Channel_[e.type] = 1
                            }
                            if (this.activeCea608Channel_[e.type] === null) {
                                return
                            }
                            this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
                        };
                        f.prototype.setsChannel1Active = function(e) {
                            return (e.ccData & 30720) === 4096
                        };
                        f.prototype.setsChannel2Active = function(e) {
                            return (e.ccData & 30720) === 6144
                        };
                        var l = {
                            42: 225,
                            92: 233,
                            94: 237,
                            95: 243,
                            96: 250,
                            123: 231,
                            124: 247,
                            125: 209,
                            126: 241,
                            127: 9608,
                            304: 174,
                            305: 176,
                            306: 189,
                            307: 191,
                            308: 8482,
                            309: 162,
                            310: 163,
                            311: 9834,
                            312: 224,
                            313: 160,
                            314: 232,
                            315: 226,
                            316: 234,
                            317: 238,
                            318: 244,
                            319: 251,
                            544: 193,
                            545: 201,
                            546: 211,
                            547: 218,
                            548: 220,
                            549: 252,
                            550: 8216,
                            551: 161,
                            552: 42,
                            553: 39,
                            554: 8212,
                            555: 169,
                            556: 8480,
                            557: 8226,
                            558: 8220,
                            559: 8221,
                            560: 192,
                            561: 194,
                            562: 199,
                            563: 200,
                            564: 202,
                            565: 203,
                            566: 235,
                            567: 206,
                            568: 207,
                            569: 239,
                            570: 212,
                            571: 217,
                            572: 249,
                            573: 219,
                            574: 171,
                            575: 187,
                            800: 195,
                            801: 227,
                            802: 205,
                            803: 204,
                            804: 236,
                            805: 210,
                            806: 242,
                            807: 213,
                            808: 245,
                            809: 123,
                            810: 125,
                            811: 92,
                            812: 94,
                            813: 95,
                            814: 124,
                            815: 126,
                            816: 196,
                            817: 228,
                            818: 214,
                            819: 246,
                            820: 223,
                            821: 165,
                            822: 164,
                            823: 9474,
                            824: 197,
                            825: 229,
                            826: 216,
                            827: 248,
                            828: 9484,
                            829: 9488,
                            830: 9492,
                            831: 9496
                        };
                        var c = function(t) {
                            if (t === null) {
                                return ""
                            }
                            t = l[t] || t;
                            return String.fromCharCode(t)
                        };
                        var h = 14;
                        var p = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152];
                        var d = function() {
                            var t = [],
                                n = h + 1;
                            while (n--) {
                                t.push("")
                            }
                            return t
                        };
                        var v = function g(e, t) {
                            g.prototype.init.call(this);
                            this.field_ = e || 0;
                            this.dataChannel_ = t || 0;
                            this.name_ = "CC" + ((this.field_ << 1 | this.dataChannel_) + 1);
                            this.setConstants();
                            this.reset();
                            this.push = function(e) {
                                var t, n, r, i, s;
                                t = e.ccData & 32639;
                                if (t === this.lastControlCode_) {
                                    this.lastControlCode_ = null;
                                    return
                                }
                                if ((t & 61440) === 4096) {
                                    this.lastControlCode_ = t
                                } else if (t !== this.PADDING_) {
                                    this.lastControlCode_ = null
                                }
                                r = t >>> 8;
                                i = t & 255;
                                if (t === this.PADDING_) {
                                    return
                                } else if (t === this.RESUME_CAPTION_LOADING_) {
                                    this.mode_ = "popOn"
                                } else if (t === this.END_OF_CAPTION_) {
                                    this.clearFormatting(e.pts);
                                    this.flushDisplayed(e.pts);
                                    n = this.displayed_;
                                    this.displayed_ = this.nonDisplayed_;
                                    this.nonDisplayed_ = n;
                                    this.startPts_ = e.pts
                                } else if (t === this.ROLL_UP_2_ROWS_) {
                                    this.topRow_ = h - 1;
                                    this.mode_ = "rollUp"
                                } else if (t === this.ROLL_UP_3_ROWS_) {
                                    this.topRow_ = h - 2;
                                    this.mode_ = "rollUp"
                                } else if (t === this.ROLL_UP_4_ROWS_) {
                                    this.topRow_ = h - 3;
                                    this.mode_ = "rollUp"
                                } else if (t === this.CARRIAGE_RETURN_) {
                                    this.clearFormatting(e.pts);
                                    this.flushDisplayed(e.pts);
                                    this.shiftRowsUp_();
                                    this.startPts_ = e.pts
                                } else if (t === this.BACKSPACE_) {
                                    if (this.mode_ === "popOn") {
                                        this.nonDisplayed_[h] = this.nonDisplayed_[h].slice(0, -1)
                                    } else {
                                        this.displayed_[h] = this.displayed_[h].slice(0, -1)
                                    }
                                } else if (t === this.ERASE_DISPLAYED_MEMORY_) {
                                    this.flushDisplayed(e.pts);
                                    this.displayed_ = d()
                                } else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) {
                                    this.nonDisplayed_ = d()
                                } else if (t === this.RESUME_DIRECT_CAPTIONING_) {
                                    this.mode_ = "paintOn"
                                } else if (this.isSpecialCharacter(r, i)) {
                                    r = (r & 3) << 8;
                                    s = c(r | i);
                                    this[this.mode_](e.pts, s);
                                    this.column_++
                                } else if (this.isExtCharacter(r, i)) {
                                    if (this.mode_ === "popOn") {
                                        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
                                    } else {
                                        this.displayed_[h] = this.displayed_[h].slice(0, -1)
                                    }
                                    r = (r & 3) << 8;
                                    s = c(r | i);
                                    this[this.mode_](e.pts, s);
                                    this.column_++
                                } else if (this.isMidRowCode(r, i)) {
                                    this.clearFormatting(e.pts);
                                    this[this.mode_](e.pts, " ");
                                    this.column_++;
                                    if ((i & 14) === 14) {
                                        this.addFormatting(e.pts, ["i"])
                                    }
                                    if ((i & 1) === 1) {
                                        this.addFormatting(e.pts, ["u"])
                                    }
                                } else if (this.isOffsetControlCode(r, i)) {
                                    this.column_ += i & 3
                                } else if (this.isPAC(r, i)) {
                                    var o = p.indexOf(t & 7968);
                                    if (o !== this.row_) {
                                        this.clearFormatting(e.pts);
                                        this.row_ = o
                                    }
                                    if (i & 1 && this.formatting_.indexOf("u") === -1) {
                                        this.addFormatting(e.pts, ["u"])
                                    }
                                    if ((t & 16) === 16) {
                                        this.column_ = ((t & 14) >> 1) * 4
                                    }
                                    if (this.isColorPAC(i)) {
                                        if ((i & 14) === 14) {
                                            this.addFormatting(e.pts, ["i"])
                                        }
                                    }
                                } else if (this.isNormalChar(r)) {
                                    if (i === 0) {
                                        i = null
                                    }
                                    s = c(r);
                                    s += c(i);
                                    this[this.mode_](e.pts, s);
                                    this.column_ += s.length
                                }
                            }
                        };
                        v.prototype = new s;
                        v.prototype.flushDisplayed = function(e) {
                            var t = this.displayed_.map(function(e) {
                                return e.trim()
                            }).join("\n").replace(/^\n+|\n+$/g, "");
                            if (t.length) {
                                this.trigger("data", {
                                    startPts: this.startPts_,
                                    endPts: e,
                                    text: t,
                                    stream: this.name_
                                })
                            }
                        };
                        v.prototype.reset = function() {
                            this.mode_ = "popOn";
                            this.topRow_ = 0;
                            this.startPts_ = 0;
                            this.displayed_ = d();
                            this.nonDisplayed_ = d();
                            this.lastControlCode_ = null;
                            this.column_ = 0;
                            this.row_ = h;
                            this.formatting_ = []
                        };
                        v.prototype.setConstants = function() {
                            if (this.dataChannel_ === 0) {
                                this.BASE_ = 16;
                                this.EXT_ = 17;
                                this.CONTROL_ = (20 | this.field_) << 8;
                                this.OFFSET_ = 23
                            } else if (this.dataChannel_ === 1) {
                                this.BASE_ = 24;
                                this.EXT_ = 25;
                                this.CONTROL_ = (28 | this.field_) << 8;
                                this.OFFSET_ = 31
                            }
                            this.PADDING_ = 0;
                            this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
                            this.END_OF_CAPTION_ = this.CONTROL_ | 47;
                            this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
                            this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
                            this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
                            this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
                            this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
                            this.BACKSPACE_ = this.CONTROL_ | 33;
                            this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
                            this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
                        };
                        v.prototype.isSpecialCharacter = function(e, t) {
                            return e === this.EXT_ && t >= 48 && t <= 63
                        };
                        v.prototype.isExtCharacter = function(e, t) {
                            return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
                        };
                        v.prototype.isMidRowCode = function(e, t) {
                            return e === this.EXT_ && t >= 32 && t <= 47
                        };
                        v.prototype.isOffsetControlCode = function(e, t) {
                            return e === this.OFFSET_ && t >= 33 && t <= 35
                        };
                        v.prototype.isPAC = function(e, t) {
                            return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
                        };
                        v.prototype.isColorPAC = function(e) {
                            return e >= 64 && e <= 79 || e >= 96 && e <= 127
                        };
                        v.prototype.isNormalChar = function(e) {
                            return e >= 32 && e <= 127
                        };
                        v.prototype.addFormatting = function(e, t) {
                            this.formatting_ = this.formatting_.concat(t);
                            var n = t.reduce(function(e, t) {
                                return e + "<" + t + ">"
                            }, "");
                            this[this.mode_](e, n)
                        };
                        v.prototype.clearFormatting = function(e) {
                            if (!this.formatting_.length) {
                                return
                            }
                            var t = this.formatting_.reverse().reduce(function(e, t) {
                                return e + "</" + t + ">"
                            }, "");
                            this.formatting_ = [];
                            this[this.mode_](e, t)
                        };
                        v.prototype.popOn = function(e, t) {
                            var n = this.nonDisplayed_[this.row_];
                            n += t;
                            this.nonDisplayed_[this.row_] = n
                        };
                        v.prototype.rollUp = function(e, t) {
                            var n = this.displayed_[h];
                            n += t;
                            this.displayed_[h] = n
                        };
                        v.prototype.shiftRowsUp_ = function() {
                            var e;
                            for (e = 0; e < this.topRow_; e++) {
                                this.displayed_[e] = ""
                            }
                            for (e = this.topRow_; e < h; e++) {
                                this.displayed_[e] = this.displayed_[e + 1]
                            }
                            this.displayed_[h] = ""
                        };
                        v.prototype.paintOn = function() {};
                        t.exports = {
                            CaptionStream: f,
                            Cea608Stream: v
                        }
                    }, {
                        "../utils/stream": 62
                    }],
                    50: [function(e, t, n) {
                        "use strict";
                        var r = e("../utils/stream.js"),
                            i = e("./caption-stream"),
                            s = e("./stream-types"),
                            o = e("./timestamp-rollover-stream").TimestampRolloverStream;
                        var u = e("./stream-types.js");
                        var a, f, l;
                        var c = 188,
                            h = 71;
                        a = function() {
                            var t = new Uint8Array(c),
                                n = 0;
                            a.prototype.init.call(this);
                            this.push = function(e) {
                                var r = 0,
                                    i = c,
                                    s;
                                if (n) {
                                    s = new Uint8Array(e.byteLength + n);
                                    s.set(t.subarray(0, n));
                                    s.set(e, n);
                                    n = 0
                                } else {
                                    s = e
                                }
                                while (i < s.byteLength) {
                                    if (s[r] === h && s[i] === h) {
                                        this.trigger("data", s.subarray(r, i));
                                        r += c;
                                        i += c;
                                        continue
                                    }
                                    r++;
                                    i++
                                }
                                if (r < s.byteLength) {
                                    t.set(s.subarray(r), 0);
                                    n = s.byteLength - r
                                }
                            };
                            this.flush = function() {
                                if (n === c && t[0] === h) {
                                    this.trigger("data", t);
                                    n = 0
                                }
                                this.trigger("done")
                            }
                        };
                        a.prototype = new r;
                        f = function() {
                            var t, n, r, i;
                            f.prototype.init.call(this);
                            i = this;
                            this.packetsWaitingForPmt = [];
                            this.programMapTable = undefined;
                            t = function(t, i) {
                                var s = 0;
                                if (i.payloadUnitStartIndicator) {
                                    s += t[s] + 1
                                }
                                if (i.type === "pat") {
                                    n(t.subarray(s), i)
                                } else {
                                    r(t.subarray(s), i)
                                }
                            };
                            n = function(t, n) {
                                n.section_number = t[7];
                                n.last_section_number = t[8];
                                i.pmtPid = (t[10] & 31) << 8 | t[11];
                                n.pmtPid = i.pmtPid
                            };
                            r = function(t, n) {
                                var r, o, u, a;
                                if (!(t[5] & 1)) {
                                    return
                                }
                                i.programMapTable = {
                                    video: null,
                                    audio: null,
                                    "timed-metadata": {}
                                };
                                r = (t[1] & 15) << 8 | t[2];
                                o = 3 + r - 4;
                                u = (t[10] & 15) << 8 | t[11];
                                a = 12 + u;
                                while (a < o) {
                                    var f = t[a];
                                    var l = (t[a + 1] & 31) << 8 | t[a + 2];
                                    if (f === s.H264_STREAM_TYPE && i.programMapTable.video === null) {
                                        i.programMapTable.video = l
                                    } else if (f === s.ADTS_STREAM_TYPE && i.programMapTable.audio === null) {
                                        i.programMapTable.audio = l
                                    } else if (f === s.METADATA_STREAM_TYPE) {
                                        i.programMapTable["timed-metadata"][l] = f
                                    }
                                    a += ((t[a + 3] & 15) << 8 | t[a + 4]) + 5
                                }
                                n.programMapTable = i.programMapTable
                            };
                            this.push = function(e) {
                                var n = {},
                                    r = 4;
                                n.payloadUnitStartIndicator = !!(e[1] & 64);
                                n.pid = e[1] & 31;
                                n.pid <<= 8;
                                n.pid |= e[2];
                                if ((e[3] & 48) >>> 4 > 1) {
                                    r += e[r] + 1
                                }
                                if (n.pid === 0) {
                                    n.type = "pat";
                                    t(e.subarray(r), n);
                                    this.trigger("data", n)
                                } else if (n.pid === this.pmtPid) {
                                    n.type = "pmt";
                                    t(e.subarray(r), n);
                                    this.trigger("data", n);
                                    while (this.packetsWaitingForPmt.length) {
                                        this.processPes_.apply(this, this.packetsWaitingForPmt.shift())
                                    }
                                } else if (this.programMapTable === undefined) {
                                    this.packetsWaitingForPmt.push([e, r, n])
                                } else {
                                    this.processPes_(e, r, n)
                                }
                            };
                            this.processPes_ = function(e, t, n) {
                                if (n.pid === this.programMapTable.video) {
                                    n.streamType = s.H264_STREAM_TYPE
                                } else if (n.pid === this.programMapTable.audio) {
                                    n.streamType = s.ADTS_STREAM_TYPE
                                } else {
                                    n.streamType = this.programMapTable["timed-metadata"][n.pid]
                                }
                                n.type = "pes";
                                n.data = e.subarray(t);
                                this.trigger("data", n)
                            }
                        };
                        f.prototype = new r;
                        f.STREAM_TYPES = {
                            h264: 27,
                            adts: 15
                        };
                        l = function() {
                            var t = this,
                                n = {
                                    data: [],
                                    size: 0
                                },
                                r = {
                                    data: [],
                                    size: 0
                                },
                                i = {
                                    data: [],
                                    size: 0
                                },
                                o = function(t, n) {
                                    var r;
                                    n.packetLength = 6 + (t[4] << 8 | t[5]);
                                    n.dataAlignmentIndicator = (t[6] & 4) !== 0;
                                    r = t[7];
                                    if (r & 192) {
                                        n.pts = (t[9] & 14) << 27 | (t[10] & 255) << 20 | (t[11] & 254) << 12 | (t[12] & 255) << 5 | (t[13] & 254) >>> 3;
                                        n.pts *= 4;
                                        n.pts += (t[13] & 6) >>> 1;
                                        n.dts = n.pts;
                                        if (r & 64) {
                                            n.dts = (t[14] & 14) << 27 | (t[15] & 255) << 20 | (t[16] & 254) << 12 | (t[17] & 255) << 5 | (t[18] & 254) >>> 3;
                                            n.dts *= 4;
                                            n.dts += (t[18] & 6) >>> 1
                                        }
                                    }
                                    n.data = t.subarray(9 + t[8])
                                },
                                a = function(n, r, i) {
                                    var s = new Uint8Array(n.size),
                                        u = {
                                            type: r
                                        },
                                        a = 0,
                                        f = 0,
                                        l = false,
                                        c;
                                    if (!n.data.length || n.size < 9) {
                                        return
                                    }
                                    u.trackId = n.data[0].pid;
                                    for (a = 0; a < n.data.length; a++) {
                                        c = n.data[a];
                                        s.set(c.data, f);
                                        f += c.data.byteLength
                                    }
                                    o(s, u);
                                    l = r === "video" || u.packetLength <= n.size;
                                    if (i || l) {
                                        n.size = 0;
                                        n.data.length = 0
                                    }
                                    if (l) {
                                        t.trigger("data", u)
                                    }
                                };
                            l.prototype.init.call(this);
                            this.push = function(e) {
                                (({
                                    pat: function() {},
                                    pes: function() {
                                        var o, f;
                                        switch (e.streamType) {
                                            case s.H264_STREAM_TYPE:
                                            case u.H264_STREAM_TYPE:
                                                o = n;
                                                f = "video";
                                                break;
                                            case s.ADTS_STREAM_TYPE:
                                                o = r;
                                                f = "audio";
                                                break;
                                            case s.METADATA_STREAM_TYPE:
                                                o = i;
                                                f = "timed-metadata";
                                                break;
                                            default:
                                                return
                                        }
                                        if (e.payloadUnitStartIndicator) {
                                            a(o, f, true)
                                        }
                                        o.data.push(e);
                                        o.size += e.data.byteLength
                                    },
                                    pmt: function() {
                                        var r = {
                                                type: "metadata",
                                                tracks: []
                                            },
                                            i = e.programMapTable;
                                        if (i.video !== null) {
                                            r.tracks.push({
                                                timelineStartInfo: {
                                                    baseMediaDecodeTime: 0
                                                },
                                                id: +i.video,
                                                codec: "avc",
                                                type: "video"
                                            })
                                        }
                                        if (i.audio !== null) {
                                            r.tracks.push({
                                                timelineStartInfo: {
                                                    baseMediaDecodeTime: 0
                                                },
                                                id: +i.audio,
                                                codec: "adts",
                                                type: "audio"
                                            })
                                        }
                                        t.trigger("data", r)
                                    }
                                }))[e.type]()
                            };
                            this.flush = function() {
                                a(n, "video");
                                a(r, "audio");
                                a(i, "timed-metadata");
                                this.trigger("done")
                            }
                        };
                        l.prototype = new r;
                        var p = {
                            PAT_PID: 0,
                            MP2T_PACKET_LENGTH: c,
                            TransportPacketStream: a,
                            TransportParseStream: f,
                            ElementaryStream: l,
                            TimestampRolloverStream: o,
                            CaptionStream: i.CaptionStream,
                            Cea608Stream: i.Cea608Stream,
                            MetadataStream: e("./metadata-stream")
                        };
                        for (var d in s) {
                            if (s.hasOwnProperty(d)) {
                                p[d] = s[d]
                            }
                        }
                        t.exports = p
                    }, {
                        "../utils/stream.js": 62,
                        "./caption-stream": 49,
                        "./metadata-stream": 51,
                        "./stream-types": 53,
                        "./stream-types.js": 53,
                        "./timestamp-rollover-stream": 54
                    }],
                    51: [function(e, t, n) {
                        "use strict";
                        var r = e("../utils/stream"),
                            i = e("./stream-types"),
                            s = function(t, n, r) {
                                var i, s = "";
                                for (i = n; i < r; i++) {
                                    s += "%" + ("00" + t[i].toString(16)).slice(-2)
                                }
                                return s
                            },
                            o = function(t, n, r) {
                                return decodeURIComponent(s(t, n, r))
                            },
                            u = function(t, n, r) {
                                return unescape(s(t, n, r))
                            },
                            a = function(t) {
                                return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
                            },
                            f = {
                                TXXX: function(t) {
                                    var n;
                                    if (t.data[0] !== 3) {
                                        return
                                    }
                                    for (n = 1; n < t.data.length; n++) {
                                        if (t.data[n] === 0) {
                                            t.description = o(t.data, 1, n);
                                            t.value = o(t.data, n + 1, t.data.length).replace(/\0*$/, "");
                                            break
                                        }
                                    }
                                    t.data = t.value
                                },
                                WXXX: function(t) {
                                    var n;
                                    if (t.data[0] !== 3) {
                                        return
                                    }
                                    for (n = 1; n < t.data.length; n++) {
                                        if (t.data[n] === 0) {
                                            t.description = o(t.data, 1, n);
                                            t.url = o(t.data, n + 1, t.data.length);
                                            break
                                        }
                                    }
                                },
                                PRIV: function(t) {
                                    var n;
                                    for (n = 0; n < t.data.length; n++) {
                                        if (t.data[n] === 0) {
                                            t.owner = u(t.data, 0, n);
                                            break
                                        }
                                    }
                                    t.privateData = t.data.subarray(n + 1);
                                    t.data = t.privateData
                                }
                            },
                            l;
                        l = function(t) {
                            var n = {
                                    debug: !!(t && t.debug),
                                    descriptor: t && t.descriptor
                                },
                                r = 0,
                                s = [],
                                o = 0,
                                u;
                            l.prototype.init.call(this);
                            this.dispatchType = i.METADATA_STREAM_TYPE.toString(16);
                            if (n.descriptor) {
                                for (u = 0; u < n.descriptor.length; u++) {
                                    this.dispatchType += ("00" + n.descriptor[u].toString(16)).slice(-2)
                                }
                            }
                            this.push = function(e) {
                                var t, i, u, l, c, h;
                                if (e.type !== "timed-metadata") {
                                    return
                                }
                                if (e.dataAlignmentIndicator) {
                                    o = 0;
                                    s.length = 0
                                }
                                if (s.length === 0 && (e.data.length < 10 || e.data[0] !== "I".charCodeAt(0) || e.data[1] !== "D".charCodeAt(0) || e.data[2] !== "3".charCodeAt(0))) {
                                    if (n.debug) {
                                        console.log("Skipping unrecognized metadata packet")
                                    }
                                    return
                                }
                                s.push(e);
                                o += e.data.byteLength;
                                if (s.length === 1) {
                                    r = a(e.data.subarray(6, 10));
                                    r += 10
                                }
                                if (o < r) {
                                    return
                                }
                                t = {
                                    data: new Uint8Array(r),
                                    frames: [],
                                    pts: s[0].pts,
                                    dts: s[0].dts
                                };
                                for (c = 0; c < r;) {
                                    t.data.set(s[0].data.subarray(0, r - c), c);
                                    c += s[0].data.byteLength;
                                    o -= s[0].data.byteLength;
                                    s.shift()
                                }
                                i = 10;
                                if (t.data[5] & 64) {
                                    i += 4;
                                    i += a(t.data.subarray(10, 14));
                                    r -= a(t.data.subarray(16, 20))
                                }
                                do {
                                    u = a(t.data.subarray(i + 4, i + 8));
                                    if (u < 1) {
                                        return console.log("Malformed ID3 frame encountered. Skipping metadata parsing.")
                                    }
                                    h = String.fromCharCode(t.data[i], t.data[i + 1], t.data[i + 2], t.data[i + 3]);
                                    l = {
                                        id: h,
                                        data: t.data.subarray(i + 10, i + u + 10)
                                    };
                                    l.key = l.id;
                                    if (f[l.id]) {
                                        f[l.id](l);
                                        if (l.owner === "com.apple.streaming.transportStreamTimestamp") {
                                            var p = l.data,
                                                d = (p[3] & 1) << 30 | p[4] << 22 | p[5] << 14 | p[6] << 6 | p[7] >>> 2;
                                            d *= 4;
                                            d += p[7] & 3;
                                            l.timeStamp = d;
                                            if (t.pts === undefined && t.dts === undefined) {
                                                t.pts = l.timeStamp;
                                                t.dts = l.timeStamp
                                            }
                                            this.trigger("timestamp", l)
                                        }
                                    }
                                    t.frames.push(l);
                                    i += 10;
                                    i += u
                                } while (i < r);
                                this.trigger("data", t)
                            }
                        };
                        l.prototype = new r;
                        t.exports = l
                    }, {
                        "../utils/stream": 62,
                        "./stream-types": 53
                    }],
                    52: [function(e, t, n) {
                        "use strict";
                        var r = e("./stream-types.js");
                        var i = function(t) {
                            var n = t[1] & 31;
                            n <<= 8;
                            n |= t[2];
                            return n
                        };
                        var s = function(t) {
                            return !!(t[1] & 64)
                        };
                        var o = function(t) {
                            var n = 0;
                            if ((t[3] & 48) >>> 4 > 1) {
                                n += t[4] + 1
                            }
                            return n
                        };
                        var u = function(t, n) {
                            var r = i(t);
                            if (r === 0) {
                                return "pat"
                            } else if (r === n) {
                                return "pmt"
                            } else if (n) {
                                return "pes"
                            }
                            return null
                        };
                        var a = function(t) {
                            var n = s(t);
                            var r = 4 + o(t);
                            if (n) {
                                r += t[r] + 1
                            }
                            return (t[r + 10] & 31) << 8 | t[r + 11]
                        };
                        var f = function(t) {
                            var n = {};
                            var r = s(t);
                            var i = 4 + o(t);
                            if (r) {
                                i += t[i] + 1
                            }
                            if (!(t[i + 5] & 1)) {
                                return
                            }
                            var u, a, f;
                            u = (t[i + 1] & 15) << 8 | t[i + 2];
                            a = 3 + u - 4;
                            f = (t[i + 10] & 15) << 8 | t[i + 11];
                            var l = 12 + f;
                            while (l < a) {
                                var c = i + l;
                                n[(t[c + 1] & 31) << 8 | t[c + 2]] = t[c];
                                l += ((t[c + 3] & 15) << 8 | t[c + 4]) + 5
                            }
                            return n
                        };
                        var l = function(t, n) {
                            var s = i(t);
                            var o = n[s];
                            switch (o) {
                                case r.H264_STREAM_TYPE:
                                    return "video";
                                case r.ADTS_STREAM_TYPE:
                                    return "audio";
                                case r.METADATA_STREAM_TYPE:
                                    return "timed-metadata";
                                default:
                                    return null
                            }
                        };
                        var c = function(t) {
                            var n = s(t);
                            if (!n) {
                                return null
                            }
                            var r = 4 + o(t);
                            if (r >= t.byteLength) {
                                return null
                            }
                            var i = null;
                            var u;
                            u = t[r + 7];
                            if (u & 192) {
                                i = {};
                                i.pts = (t[r + 9] & 14) << 27 | (t[r + 10] & 255) << 20 | (t[r + 11] & 254) << 12 | (t[r + 12] & 255) << 5 | (t[r + 13] & 254) >>> 3;
                                i.pts *= 4;
                                i.pts += (t[r + 13] & 6) >>> 1;
                                i.dts = i.pts;
                                if (u & 64) {
                                    i.dts = (t[r + 14] & 14) << 27 | (t[r + 15] & 255) << 20 | (t[r + 16] & 254) << 12 | (t[r + 17] & 255) << 5 | (t[r + 18] & 254) >>> 3;
                                    i.dts *= 4;
                                    i.dts += (t[r + 18] & 6) >>> 1
                                }
                            }
                            return i
                        };
                        var h = function(t) {
                            switch (t) {
                                case 5:
                                    return "slice_layer_without_partitioning_rbsp_idr";
                                case 6:
                                    return "sei_rbsp";
                                case 7:
                                    return "seq_parameter_set_rbsp";
                                case 8:
                                    return "pic_parameter_set_rbsp";
                                case 9:
                                    return "access_unit_delimiter_rbsp";
                                default:
                                    return null
                            }
                        };
                        var p = function(t) {
                            var n = 4 + o(t);
                            var r = t.subarray(n);
                            var i = 0;
                            var s = 0;
                            var u = false;
                            var a;
                            for (; s < r.byteLength - 3; s++) {
                                if (r[s + 2] === 1) {
                                    i = s + 5;
                                    break
                                }
                            }
                            while (i < r.byteLength) {
                                switch (r[i]) {
                                    case 0:
                                        if (r[i - 1] !== 0) {
                                            i += 2;
                                            break
                                        } else if (r[i - 2] !== 0) {
                                            i++;
                                            break
                                        }
                                        if (s + 3 !== i - 2) {
                                            a = h(r[s + 3] & 31);
                                            if (a === "slice_layer_without_partitioning_rbsp_idr") {
                                                u = true
                                            }
                                        }
                                        do {
                                            i++
                                        } while (r[i] !== 1 && i < r.length);
                                        s = i - 2;
                                        i += 3;
                                        break;
                                    case 1:
                                        if (r[i - 1] !== 0 || r[i - 2] !== 0) {
                                            i += 3;
                                            break
                                        }
                                        a = h(r[s + 3] & 31);
                                        if (a === "slice_layer_without_partitioning_rbsp_idr") {
                                            u = true
                                        }
                                        s = i - 2;
                                        i += 3;
                                        break;
                                    default:
                                        i += 3;
                                        break
                                }
                            }
                            r = r.subarray(s);
                            i -= s;
                            s = 0;
                            if (r && r.byteLength > 3) {
                                a = h(r[s + 3] & 31);
                                if (a === "slice_layer_without_partitioning_rbsp_idr") {
                                    u = true
                                }
                            }
                            return u
                        };
                        t.exports = {
                            parseType: u,
                            parsePat: a,
                            parsePmt: f,
                            parsePayloadUnitStartIndicator: s,
                            parsePesType: l,
                            parsePesTime: c,
                            videoPacketContainsKeyFrame: p
                        }
                    }, {
                        "./stream-types.js": 53
                    }],
                    53: [function(e, t, n) {
                        "use strict";
                        t.exports = {
                            H264_STREAM_TYPE: 27,
                            ADTS_STREAM_TYPE: 15,
                            METADATA_STREAM_TYPE: 21
                        }
                    }, {}],
                    54: [function(e, t, n) {
                        "use strict";
                        var r = e("../utils/stream");
                        var i = 8589934592;
                        var s = 4294967296;
                        var o = function(t, n) {
                            var r = 1;
                            if (t > n) {
                                r = -1
                            }
                            while (Math.abs(n - t) > s) {
                                t += r * i
                            }
                            return t
                        };
                        var u = function a(e) {
                            var t, n;
                            a.prototype.init.call(this);
                            this.type_ = e;
                            this.push = function(e) {
                                if (e.type !== this.type_) {
                                    return
                                }
                                if (n === undefined) {
                                    n = e.dts
                                }
                                e.dts = o(e.dts, n);
                                e.pts = o(e.pts, n);
                                t = e.dts;
                                this.trigger("data", e)
                            };
                            this.flush = function() {
                                n = t;
                                this.trigger("done")
                            };
                            this.discontinuity = function() {
                                n = void 0;
                                t = void 0
                            }
                        };
                        u.prototype = new r;
                        t.exports = {
                            TimestampRolloverStream: u,
                            handleRollover: o
                        }
                    }, {
                        "../utils/stream": 62
                    }],
                    55: [function(e, t, n) {
                        t.exports = {
                            generator: e("./mp4-generator"),
                            Transmuxer: e("./transmuxer").Transmuxer,
                            AudioSegmentStream: e("./transmuxer").AudioSegmentStream,
                            VideoSegmentStream: e("./transmuxer").VideoSegmentStream
                        }
                    }, {
                        "./mp4-generator": 56,
                        "./transmuxer": 58
                    }],
                    56: [function(e, t, n) {
                        "use strict";
                        var r = Math.pow(2, 32) - 1;
                        var i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S, x, T, N, C, k, L, A, O, M, _, D, P, H, B, j, F, I;
                        (function() {
                            var e;
                            C = {
                                avc1: [],
                                avcC: [],
                                btrt: [],
                                dinf: [],
                                dref: [],
                                esds: [],
                                ftyp: [],
                                hdlr: [],
                                mdat: [],
                                mdhd: [],
                                mdia: [],
                                mfhd: [],
                                minf: [],
                                moof: [],
                                moov: [],
                                mp4a: [],
                                mvex: [],
                                mvhd: [],
                                sdtp: [],
                                smhd: [],
                                stbl: [],
                                stco: [],
                                stsc: [],
                                stsd: [],
                                stsz: [],
                                stts: [],
                                styp: [],
                                tfdt: [],
                                tfhd: [],
                                traf: [],
                                trak: [],
                                trun: [],
                                trex: [],
                                tkhd: [],
                                vmhd: []
                            };
                            if (typeof Uint8Array === "undefined") {
                                return
                            }
                            for (e in C) {
                                if (C.hasOwnProperty(e)) {
                                    C[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]
                                }
                            }
                            k = new Uint8Array(["i".charCodeAt(0), "s".charCodeAt(0), "o".charCodeAt(0), "m".charCodeAt(0)]);
                            A = new Uint8Array(["a".charCodeAt(0), "v".charCodeAt(0), "c".charCodeAt(0), "1".charCodeAt(0)]);
                            L = new Uint8Array([0, 0, 0, 1]);
                            O = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]);
                            M = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                            _ = {
                                video: O,
                                audio: M
                            };
                            H = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]);
                            P = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                            B = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                            j = B;
                            F = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
                            I = B;
                            D = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
                        })();
                        i = function(t) {
                            var n = [],
                                r = 0,
                                i, s, o;
                            for (i = 1; i < arguments.length; i++) {
                                n.push(arguments[i])
                            }
                            i = n.length;
                            while (i--) {
                                r += n[i].byteLength
                            }
                            s = new Uint8Array(r + 8);
                            o = new DataView(s.buffer, s.byteOffset, s.byteLength);
                            o.setUint32(0, s.byteLength);
                            s.set(t, 4);
                            for (i = 0,
                                r = 8; i < n.length; i++) {
                                s.set(n[i], r);
                                r += n[i].byteLength
                            }
                            return s
                        };
                        s = function() {
                            return i(C.dinf, i(C.dref, H))
                        };
                        o = function(t) {
                            return i(C.esds, new Uint8Array([0, 0, 0, 0, 3, 25, 0, 0, 0, 4, 17, 64, 21, 0, 6, 0, 0, 0, 218, 192, 0, 0, 218, 192, 5, 2, t.audioobjecttype << 3 | t.samplingfrequencyindex >>> 1, t.samplingfrequencyindex << 7 | t.channelcount << 3, 6, 1, 2]))
                        };
                        u = function() {
                            return i(C.ftyp, k, L, k, A)
                        };
                        b = function(t) {
                            return i(C.hdlr, _[t])
                        };
                        a = function(t) {
                            return i(C.mdat, t)
                        };
                        y = function(t) {
                            var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 1, 95, 144, t.duration >>> 24 & 255, t.duration >>> 16 & 255, t.duration >>> 8 & 255, t.duration & 255, 85, 196, 0, 0]);
                            if (t.samplerate) {
                                n[12] = t.samplerate >>> 24 & 255;
                                n[13] = t.samplerate >>> 16 & 255;
                                n[14] = t.samplerate >>> 8 & 255;
                                n[15] = t.samplerate & 255
                            }
                            return i(C.mdhd, n)
                        };
                        g = function(t) {
                            return i(C.mdia, y(t), b(t.type), l(t))
                        };
                        f = function(t) {
                            return i(C.mfhd, new Uint8Array([0, 0, 0, 0, (t & 4278190080) >> 24, (t & 16711680) >> 16, (t & 65280) >> 8, t & 255]))
                        };
                        l = function(t) {
                            return i(C.minf, t.type === "video" ? i(C.vmhd, D) : i(C.smhd, P), s(), E(t))
                        };
                        c = function(t, n) {
                            var r = [],
                                s = n.length;
                            while (s--) {
                                r[s] = x(n[s])
                            }
                            return i.apply(null, [C.moof, f(t)].concat(r))
                        };
                        h = function(t) {
                            var n = t.length,
                                r = [];
                            while (n--) {
                                r[n] = v(t[n])
                            }
                            return i.apply(null, [C.moov, d(4294967295)].concat(r).concat(p(t)))
                        };
                        p = function(t) {
                            var n = t.length,
                                r = [];
                            while (n--) {
                                r[n] = T(t[n])
                            }
                            return i.apply(null, [C.mvex].concat(r))
                        };
                        d = function(t) {
                            var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 95, 144, (t & 4278190080) >> 24, (t & 16711680) >> 16, (t & 65280) >> 8, t & 255, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                            return i(C.mvhd, n)
                        };
                        w = function(t) {
                            var n = t.samples || [],
                                r = new Uint8Array(4 + n.length),
                                s, o;
                            for (o = 0; o < n.length; o++) {
                                s = n[o].flags;
                                r[o + 4] = s.dependsOn << 4 | s.isDependedOn << 2 | s.hasRedundancy
                            }
                            return i(C.sdtp, r)
                        };
                        E = function(t) {
                            return i(C.stbl, S(t), i(C.stts, I), i(C.stsc, j), i(C.stsz, F), i(C.stco, B))
                        };
                        (function() {
                            var e, t;
                            S = function(r) {
                                return i(C.stsd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), r.type === "video" ? e(r) : t(r))
                            };
                            e = function(t) {
                                var n = t.sps || [],
                                    r = t.pps || [],
                                    s = [],
                                    o = [],
                                    u;
                                for (u = 0; u < n.length; u++) {
                                    s.push((n[u].byteLength & 65280) >>> 8);
                                    s.push(n[u].byteLength & 255);
                                    s = s.concat(Array.prototype.slice.call(n[u]))
                                }
                                for (u = 0; u < r.length; u++) {
                                    o.push((r[u].byteLength & 65280) >>> 8);
                                    o.push(r[u].byteLength & 255);
                                    o = o.concat(Array.prototype.slice.call(r[u]))
                                }
                                return i(C.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (t.width & 65280) >> 8, t.width & 255, (t.height & 65280) >> 8, t.height & 255, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 19, 118, 105, 100, 101, 111, 106, 115, 45, 99, 111, 110, 116, 114, 105, 98, 45, 104, 108, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), i(C.avcC, new Uint8Array([1, t.profileIdc, t.profileCompatibility, t.levelIdc, 255].concat([n.length]).concat(s).concat([r.length]).concat(o))), i(C.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])))
                            };
                            t = function(t) {
                                return i(C.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, (t.channelcount & 65280) >> 8, t.channelcount & 255, (t.samplesize & 65280) >> 8, t.samplesize & 255, 0, 0, 0, 0, (t.samplerate & 65280) >> 8, t.samplerate & 255, 0, 0]), o(t))
                            }
                        })();
                        m = function(t) {
                            var n = new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, (t.id & 4278190080) >> 24, (t.id & 16711680) >> 16, (t.id & 65280) >> 8, t.id & 255, 0, 0, 0, 0, (t.duration & 4278190080) >> 24, (t.duration & 16711680) >> 16, (t.duration & 65280) >> 8, t.duration & 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, (t.width & 65280) >> 8, t.width & 255, 0, 0, (t.height & 65280) >> 8, t.height & 255, 0, 0]);
                            return i(C.tkhd, n)
                        };
                        x = function(t) {
                            var n, s, o, u, a, f, l;
                            n = i(C.tfhd, new Uint8Array([0, 0, 0, 58, (t.id & 4278190080) >> 24, (t.id & 16711680) >> 16, (t.id & 65280) >> 8, t.id & 255, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));
                            f = Math.floor(t.baseMediaDecodeTime / (r + 1));
                            l = Math.floor(t.baseMediaDecodeTime % (r + 1));
                            s = i(C.tfdt, new Uint8Array([1, 0, 0, 0, f >>> 24 & 255, f >>> 16 & 255, f >>> 8 & 255, f & 255, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, l & 255]));
                            a = 32 + 20 + 8 + 16 + 8 + 8;
                            if (t.type === "audio") {
                                o = N(t, a);
                                return i(C.traf, n, s, o)
                            }
                            u = w(t);
                            o = N(t, u.length + a);
                            return i(C.traf, n, s, o, u)
                        };
                        v = function(t) {
                            t.duration = t.duration || 4294967295;
                            return i(C.trak, m(t), g(t))
                        };
                        T = function(t) {
                            var n = new Uint8Array([0, 0, 0, 0, (t.id & 4278190080) >> 24, (t.id & 16711680) >> 16, (t.id & 65280) >> 8, t.id & 255, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
                            if (t.type !== "video") {
                                n[n.length - 1] = 0
                            }
                            return i(C.trex, n)
                        };
                        (function() {
                            var e, t, n;
                            n = function(t, n) {
                                var r = 0,
                                    i = 0,
                                    s = 0,
                                    o = 0;
                                if (t.length) {
                                    if (t[0].duration !== undefined) {
                                        r = 1
                                    }
                                    if (t[0].size !== undefined) {
                                        i = 2
                                    }
                                    if (t[0].flags !== undefined) {
                                        s = 4
                                    }
                                    if (t[0].compositionTimeOffset !== undefined) {
                                        o = 8
                                    }
                                }
                                return [0, 0, r | i | s | o, 1, (t.length & 4278190080) >>> 24, (t.length & 16711680) >>> 16, (t.length & 65280) >>> 8, t.length & 255, (n & 4278190080) >>> 24, (n & 16711680) >>> 16, (n & 65280) >>> 8, n & 255]
                            };
                            t = function(t, r) {
                                var s, o, u, a;
                                o = t.samples || [];
                                r += 8 + 12 + 16 * o.length;
                                s = n(o, r);
                                for (a = 0; a < o.length; a++) {
                                    u = o[a];
                                    s = s.concat([(u.duration & 4278190080) >>> 24, (u.duration & 16711680) >>> 16, (u.duration & 65280) >>> 8, u.duration & 255, (u.size & 4278190080) >>> 24, (u.size & 16711680) >>> 16, (u.size & 65280) >>> 8, u.size & 255, u.flags.isLeading << 2 | u.flags.dependsOn, u.flags.isDependedOn << 6 | u.flags.hasRedundancy << 4 | u.flags.paddingValue << 1 | u.flags.isNonSyncSample, u.flags.degradationPriority & 240 << 8, u.flags.degradationPriority & 15, (u.compositionTimeOffset & 4278190080) >>> 24, (u.compositionTimeOffset & 16711680) >>> 16, (u.compositionTimeOffset & 65280) >>> 8, u.compositionTimeOffset & 255])
                                }
                                return i(C.trun, new Uint8Array(s))
                            };
                            e = function(t, r) {
                                var s, o, u, a;
                                o = t.samples || [];
                                r += 8 + 12 + 8 * o.length;
                                s = n(o, r);
                                for (a = 0; a < o.length; a++) {
                                    u = o[a];
                                    s = s.concat([(u.duration & 4278190080) >>> 24, (u.duration & 16711680) >>> 16, (u.duration & 65280) >>> 8, u.duration & 255, (u.size & 4278190080) >>> 24, (u.size & 16711680) >>> 16, (u.size & 65280) >>> 8, u.size & 255])
                                }
                                return i(C.trun, new Uint8Array(s))
                            };
                            N = function(r, i) {
                                if (r.type === "audio") {
                                    return e(r, i)
                                }
                                return t(r, i)
                            }
                        })();
                        t.exports = {
                            ftyp: u,
                            mdat: a,
                            moof: c,
                            moov: h,
                            initSegment: function(t) {
                                var n = u(),
                                    r = h(t),
                                    i;
                                i = new Uint8Array(n.byteLength + r.byteLength);
                                i.set(n);
                                i.set(r, n.byteLength);
                                return i
                            }
                        }
                    }, {}],
                    57: [function(e, t, n) {
                        "use strict";
                        var r, i, s, o;
                        r = function(t, n) {
                            var s = [],
                                o, u, a, f, l;
                            if (!n.length) {
                                return null
                            }
                            for (o = 0; o < t.byteLength;) {
                                u = t[o] << 24;
                                u |= t[o + 1] << 16;
                                u |= t[o + 2] << 8;
                                u |= t[o + 3];
                                a = i(t.subarray(o + 4, o + 8));
                                f = u > 1 ? o + u : t.byteLength;
                                if (a === n[0]) {
                                    if (n.length === 1) {
                                        s.push(t.subarray(o + 8, f))
                                    } else {
                                        l = r(t.subarray(o + 8, f), n.slice(1));
                                        if (l.length) {
                                            s = s.concat(l)
                                        }
                                    }
                                }
                                o = f
                            }
                            return s
                        };
                        i = function(t) {
                            var n = "";
                            n += String.fromCharCode(t[0]);
                            n += String.fromCharCode(t[1]);
                            n += String.fromCharCode(t[2]);
                            n += String.fromCharCode(t[3]);
                            return n
                        };
                        s = function(t) {
                            var n = {},
                                i = r(t, ["moov", "trak"]);
                            return i.reduce(function(e, t) {
                                var n, i, s, o, u;
                                n = r(t, ["tkhd"])[0];
                                if (!n) {
                                    return null
                                }
                                i = n[0];
                                s = i === 0 ? 12 : 20;
                                o = n[s] << 24 | n[s + 1] << 16 | n[s + 2] << 8 | n[s + 3];
                                u = r(t, ["mdia", "mdhd"])[0];
                                if (!u) {
                                    return null
                                }
                                i = u[0];
                                s = i === 0 ? 12 : 20;
                                e[o] = u[s] << 24 | u[s + 1] << 16 | u[s + 2] << 8 | u[s + 3];
                                return e
                            }, n)
                        };
                        o = function(t, n) {
                            var i, s, o;
                            i = r(n, ["moof", "traf"]);
                            s = [].concat.apply([], i.map(function(e) {
                                return r(e, ["tfhd"]).map(function(n) {
                                    var i, s, o;
                                    i = n[4] << 24 | n[5] << 16 | n[6] << 8 | n[7];
                                    s = t[i] || 9e4;
                                    o = r(e, ["tfdt"]).map(function(e) {
                                        var t, n;
                                        t = e[0];
                                        n = e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7];
                                        if (t === 1) {
                                            n *= Math.pow(2, 32);
                                            n += e[8] << 24 | e[9] << 16 | e[10] << 8 | e[11]
                                        }
                                        return n
                                    })[0];
                                    o = o || Infinity;
                                    return o / s
                                })
                            }));
                            o = Math.min.apply(null, s);
                            return isFinite(o) ? o : 0
                        };
                        t.exports = {
                            parseType: i,
                            timescale: s,
                            startTime: o
                        }
                    }, {}],
                    58: [function(e, t, n) {
                        "use strict";
                        var r = e("../utils/stream.js");
                        var i = e("./mp4-generator.js");
                        var s = e("../m2ts/m2ts.js");
                        var o = e("../codecs/adts.js");
                        var u = e("../codecs/h264").H264Stream;
                        var a = e("../aac");
                        var f = e("../data/silence");
                        var l = e("../utils/clock");
                        var c = ["audioobjecttype", "channelcount", "samplerate", "samplingfrequencyindex", "samplesize"];
                        var h = ["width", "height", "profileIdc", "levelIdc", "profileCompatibility"];
                        var p = 9e4;
                        var d, v, m, g;
                        var y, b, w, E, S, x, T;
                        y = function() {
                            return {
                                size: 0,
                                flags: {
                                    isLeading: 0,
                                    dependsOn: 1,
                                    isDependedOn: 0,
                                    hasRedundancy: 0,
                                    degradationPriority: 0
                                }
                            }
                        };
                        b = function(t) {
                            if (t[0] === "I".charCodeAt(0) && t[1] === "D".charCodeAt(0) && t[2] === "3".charCodeAt(0)) {
                                return true
                            }
                            return false
                        };
                        x = function(t, n) {
                            var r;
                            if (t.length !== n.length) {
                                return false
                            }
                            for (r = 0; r < t.length; r++) {
                                if (t[r] !== n[r]) {
                                    return false
                                }
                            }
                            return true
                        };
                        T = function(t) {
                            var n, r, i = 0;
                            for (n = 0; n < t.length; n++) {
                                r = t[n];
                                i += r.data.byteLength
                            }
                            return i
                        };
                        v = function(t) {
                            var n = [],
                                r = 0,
                                s = 0,
                                o = 0,
                                u = Infinity;
                            v.prototype.init.call(this);
                            this.push = function(e) {
                                w(t, e);
                                if (t) {
                                    c.forEach(function(n) {
                                        t[n] = e[n]
                                    })
                                }
                                n.push(e)
                            };
                            this.setEarliestDts = function(e) {
                                s = e - t.timelineStartInfo.baseMediaDecodeTime
                            };
                            this.setVideoBaseMediaDecodeTime = function(e) {
                                u = e
                            };
                            this.setAudioAppendStart = function(e) {
                                o = e
                            };
                            this.flush = function() {
                                var e, s, o, u;
                                if (n.length === 0) {
                                    this.trigger("done", "AudioSegmentStream");
                                    return
                                }
                                e = this.trimAdtsFramesByEarliestDts_(n);
                                t.baseMediaDecodeTime = S(t);
                                this.prefixWithSilence_(t, e);
                                t.samples = this.generateSampleTable_(e);
                                o = i.mdat(this.concatenateFrameData_(e));
                                n = [];
                                s = i.moof(r, [t]);
                                u = new Uint8Array(s.byteLength + o.byteLength);
                                r++;
                                u.set(s);
                                u.set(o, s.byteLength);
                                E(t);
                                this.trigger("data", {
                                    track: t,
                                    boxes: u
                                });
                                this.trigger("done", "AudioSegmentStream")
                            };
                            this.prefixWithSilence_ = function(e, t) {
                                var n, r = 0,
                                    i = 0,
                                    s = 0,
                                    a = 0,
                                    c, h;
                                if (!t.length) {
                                    return
                                }
                                n = l.audioTsToVideoTs(e.baseMediaDecodeTime, e.samplerate);
                                r = Math.ceil(p / (e.samplerate / 1024));
                                if (o && u) {
                                    i = n - Math.max(o, u);
                                    s = Math.floor(i / r);
                                    a = s * r
                                }
                                if (s < 1 || a > p / 2) {
                                    return
                                }
                                c = f[e.samplerate];
                                if (!c) {
                                    c = t[0].data
                                }
                                for (h = 0; h < s; h++) {
                                    t.splice(h, 0, {
                                        data: c
                                    })
                                }
                                e.baseMediaDecodeTime -= Math.floor(l.videoTsToAudioTs(a, e.samplerate))
                            };
                            this.trimAdtsFramesByEarliestDts_ = function(e) {
                                if (t.minSegmentDts >= s) {
                                    return e
                                }
                                t.minSegmentDts = Infinity;
                                return e.filter(function(e) {
                                    if (e.dts >= s) {
                                        t.minSegmentDts = Math.min(t.minSegmentDts, e.dts);
                                        t.minSegmentPts = t.minSegmentDts;
                                        return true
                                    }
                                    return false
                                })
                            };
                            this.generateSampleTable_ = function(e) {
                                var t, n, r = [];
                                for (t = 0; t < e.length; t++) {
                                    n = e[t];
                                    r.push({
                                        size: n.data.byteLength,
                                        duration: 1024
                                    })
                                }
                                return r
                            };
                            this.concatenateFrameData_ = function(e) {
                                var t, n, r = 0,
                                    i = new Uint8Array(T(e));
                                for (t = 0; t < e.length; t++) {
                                    n = e[t];
                                    i.set(n.data, r);
                                    r += n.data.byteLength
                                }
                                return i
                            }
                        };
                        v.prototype = new r;
                        d = function(t, n) {
                            var r = 0,
                                s = [],
                                o = [],
                                u, a;
                            n = n || {};
                            d.prototype.init.call(this);
                            delete t.minPTS;
                            this.gopCache_ = [];
                            this.push = function(e) {
                                w(t, e);
                                if (e.nalUnitType === "seq_parameter_set_rbsp" && !u) {
                                    u = e.config;
                                    t.sps = [e.data];
                                    h.forEach(function(e) {
                                        t[e] = u[e]
                                    }, this)
                                }
                                if (e.nalUnitType === "pic_parameter_set_rbsp" && !a) {
                                    a = e.data;
                                    t.pps = [e.data]
                                }
                                s.push(e)
                            };
                            this.flush = function() {
                                var e, u, a, f, l, c;
                                while (s.length) {
                                    if (s[0].nalUnitType === "access_unit_delimiter_rbsp") {
                                        break
                                    }
                                    s.shift()
                                }
                                if (s.length === 0) {
                                    this.resetStream_();
                                    this.trigger("done", "VideoSegmentStream");
                                    return
                                }
                                e = this.groupNalsIntoFrames_(s);
                                a = this.groupFramesIntoGops_(e);
                                if (!a[0][0].keyFrame) {
                                    u = this.getGopForFusion_(s[0], t);
                                    if (u) {
                                        a.unshift(u);
                                        a.byteLength += u.byteLength;
                                        a.nalCount += u.nalCount;
                                        a.pts = u.pts;
                                        a.dts = u.dts;
                                        a.duration += u.duration
                                    } else {
                                        a = this.extendFirstKeyFrame_(a)
                                    }
                                }
                                if (o.length) {
                                    var h;
                                    if (n.alignGopsAtEnd) {
                                        h = this.alignGopsAtEnd_(a)
                                    } else {
                                        h = this.alignGopsAtStart_(a)
                                    }
                                    if (!h) {
                                        this.gopCache_.unshift({
                                            gop: a.pop(),
                                            pps: t.pps,
                                            sps: t.sps
                                        });
                                        this.gopCache_.length = Math.min(6, this.gopCache_.length);
                                        s = [];
                                        this.resetStream_();
                                        this.trigger("done", "VideoSegmentStream");
                                        return
                                    }
                                    E(t);
                                    a = h
                                }
                                w(t, a);
                                t.samples = this.generateSampleTable_(a);
                                l = i.mdat(this.concatenateNalData_(a));
                                t.baseMediaDecodeTime = S(t);
                                this.trigger("processedGopsInfo", a.map(function(e) {
                                    return {
                                        pts: e.pts,
                                        dts: e.dts,
                                        byteLength: e.byteLength
                                    }
                                }));
                                this.gopCache_.unshift({
                                    gop: a.pop(),
                                    pps: t.pps,
                                    sps: t.sps
                                });
                                this.gopCache_.length = Math.min(6, this.gopCache_.length);
                                s = [];
                                this.trigger("baseMediaDecodeTime", t.baseMediaDecodeTime);
                                this.trigger("timelineStartInfo", t.timelineStartInfo);
                                f = i.moof(r, [t]);
                                c = new Uint8Array(f.byteLength + l.byteLength);
                                r++;
                                c.set(f);
                                c.set(l, f.byteLength);
                                this.trigger("data", {
                                    track: t,
                                    boxes: c
                                });
                                this.resetStream_();
                                this.trigger("done", "VideoSegmentStream")
                            };
                            this.resetStream_ = function() {
                                E(t);
                                u = undefined;
                                a = undefined
                            };
                            this.getGopForFusion_ = function(e) {
                                var n = 45e3,
                                    r = 1e4,
                                    i = Infinity,
                                    s, o, u, a, f;
                                for (f = 0; f < this.gopCache_.length; f++) {
                                    a = this.gopCache_[f];
                                    u = a.gop;
                                    if (!(t.pps && x(t.pps[0], a.pps[0])) || !(t.sps && x(t.sps[0], a.sps[0]))) {
                                        continue
                                    }
                                    if (u.dts < t.timelineStartInfo.dts) {
                                        continue
                                    }
                                    s = e.dts - u.dts - u.duration;
                                    if (s >= -r && s <= n) {
                                        if (!o || i > s) {
                                            o = a;
                                            i = s
                                        }
                                    }
                                }
                                if (o) {
                                    return o.gop
                                }
                                return null
                            };
                            this.extendFirstKeyFrame_ = function(e) {
                                var t;
                                if (!e[0][0].keyFrame && e.length > 1) {
                                    t = e.shift();
                                    e.byteLength -= t.byteLength;
                                    e.nalCount -= t.nalCount;
                                    e[0][0].dts = t.dts;
                                    e[0][0].pts = t.pts;
                                    e[0][0].duration += t.duration
                                }
                                return e
                            };
                            this.groupNalsIntoFrames_ = function(e) {
                                var t, n, r = [],
                                    i = [];
                                r.byteLength = 0;
                                for (t = 0; t < e.length; t++) {
                                    n = e[t];
                                    if (n.nalUnitType === "access_unit_delimiter_rbsp") {
                                        if (r.length) {
                                            r.duration = n.dts - r.dts;
                                            i.push(r)
                                        }
                                        r = [n];
                                        r.byteLength = n.data.byteLength;
                                        r.pts = n.pts;
                                        r.dts = n.dts
                                    } else {
                                        if (n.nalUnitType === "slice_layer_without_partitioning_rbsp_idr") {
                                            r.keyFrame = true
                                        }
                                        r.duration = n.dts - r.dts;
                                        r.byteLength += n.data.byteLength;
                                        r.push(n)
                                    }
                                }
                                if (i.length && (!r.duration || r.duration <= 0)) {
                                    r.duration = i[i.length - 1].duration
                                }
                                i.push(r);
                                return i
                            };
                            this.groupFramesIntoGops_ = function(e) {
                                var t, n, r = [],
                                    i = [];
                                r.byteLength = 0;
                                r.nalCount = 0;
                                r.duration = 0;
                                r.pts = e[0].pts;
                                r.dts = e[0].dts;
                                i.byteLength = 0;
                                i.nalCount = 0;
                                i.duration = 0;
                                i.pts = e[0].pts;
                                i.dts = e[0].dts;
                                for (t = 0; t < e.length; t++) {
                                    n = e[t];
                                    if (n.keyFrame) {
                                        if (r.length) {
                                            i.push(r);
                                            i.byteLength += r.byteLength;
                                            i.nalCount += r.nalCount;
                                            i.duration += r.duration
                                        }
                                        r = [n];
                                        r.nalCount = n.length;
                                        r.byteLength = n.byteLength;
                                        r.pts = n.pts;
                                        r.dts = n.dts;
                                        r.duration = n.duration
                                    } else {
                                        r.duration += n.duration;
                                        r.nalCount += n.length;
                                        r.byteLength += n.byteLength;
                                        r.push(n)
                                    }
                                }
                                if (i.length && r.duration <= 0) {
                                    r.duration = i[i.length - 1].duration
                                }
                                i.byteLength += r.byteLength;
                                i.nalCount += r.nalCount;
                                i.duration += r.duration;
                                i.push(r);
                                return i
                            };
                            this.generateSampleTable_ = function(e, t) {
                                var n, r, i, s, o, u = t || 0,
                                    a = [];
                                for (n = 0; n < e.length; n++) {
                                    s = e[n];
                                    for (r = 0; r < s.length; r++) {
                                        o = s[r];
                                        i = y();
                                        i.dataOffset = u;
                                        i.compositionTimeOffset = o.pts - o.dts;
                                        i.duration = o.duration;
                                        i.size = 4 * o.length;
                                        i.size += o.byteLength;
                                        if (o.keyFrame) {
                                            i.flags.dependsOn = 2
                                        }
                                        u += i.size;
                                        a.push(i)
                                    }
                                }
                                return a
                            };
                            this.concatenateNalData_ = function(e) {
                                var t, n, r, i, s, o, u = 0,
                                    a = e.byteLength,
                                    f = e.nalCount,
                                    l = a + 4 * f,
                                    c = new Uint8Array(l),
                                    h = new DataView(c.buffer);
                                for (t = 0; t < e.length; t++) {
                                    i = e[t];
                                    for (n = 0; n < i.length; n++) {
                                        s = i[n];
                                        for (r = 0; r < s.length; r++) {
                                            o = s[r];
                                            h.setUint32(u, o.data.byteLength);
                                            u += 4;
                                            c.set(o.data, u);
                                            u += o.data.byteLength
                                        }
                                    }
                                }
                                return c
                            };
                            this.alignGopsAtStart_ = function(e) {
                                var t, n, r, i, s, u, a, f;
                                s = e.byteLength;
                                u = e.nalCount;
                                a = e.duration;
                                t = n = 0;
                                while (t < o.length && n < e.length) {
                                    r = o[t];
                                    i = e[n];
                                    if (r.pts === i.pts) {
                                        break
                                    }
                                    if (i.pts > r.pts) {
                                        t++;
                                        continue
                                    }
                                    n++;
                                    s -= i.byteLength;
                                    u -= i.nalCount;
                                    a -= i.duration
                                }
                                if (n === 0) {
                                    return e
                                }
                                if (n === e.length) {
                                    return null
                                }
                                f = e.slice(n);
                                f.byteLength = s;
                                f.duration = a;
                                f.nalCount = u;
                                f.pts = f[0].pts;
                                f.dts = f[0].dts;
                                return f
                            };
                            this.alignGopsAtEnd_ = function(e) {
                                var t, n, r, i, s, u;
                                t = o.length - 1;
                                n = e.length - 1;
                                s = null;
                                u = false;
                                while (t >= 0 && n >= 0) {
                                    r = o[t];
                                    i = e[n];
                                    if (r.pts === i.pts) {
                                        u = true;
                                        break
                                    }
                                    if (r.pts > i.pts) {
                                        t--;
                                        continue
                                    }
                                    if (t === o.length - 1) {
                                        s = n
                                    }
                                    n--
                                }
                                if (!u && s === null) {
                                    return null
                                }
                                var a;
                                if (u) {
                                    a = n
                                } else {
                                    a = s
                                }
                                if (a === 0) {
                                    return e
                                }
                                var f = e.slice(a);
                                var l = f.reduce(function(e, t) {
                                    e.byteLength += t.byteLength;
                                    e.duration += t.duration;
                                    e.nalCount += t.nalCount;
                                    return e
                                }, {
                                    byteLength: 0,
                                    duration: 0,
                                    nalCount: 0
                                });
                                f.byteLength = l.byteLength;
                                f.duration = l.duration;
                                f.nalCount = l.nalCount;
                                f.pts = f[0].pts;
                                f.dts = f[0].dts;
                                return f
                            };
                            this.alignGopsWith = function(e) {
                                o = e
                            }
                        };
                        d.prototype = new r;
                        w = function(t, n) {
                            if (typeof n.pts === "number") {
                                if (t.timelineStartInfo.pts === undefined) {
                                    t.timelineStartInfo.pts = n.pts
                                }
                                if (t.minSegmentPts === undefined) {
                                    t.minSegmentPts = n.pts
                                } else {
                                    t.minSegmentPts = Math.min(t.minSegmentPts, n.pts)
                                }
                                if (t.maxSegmentPts === undefined) {
                                    t.maxSegmentPts = n.pts
                                } else {
                                    t.maxSegmentPts = Math.max(t.maxSegmentPts, n.pts)
                                }
                            }
                            if (typeof n.dts === "number") {
                                if (t.timelineStartInfo.dts === undefined) {
                                    t.timelineStartInfo.dts = n.dts
                                }
                                if (t.minSegmentDts === undefined) {
                                    t.minSegmentDts = n.dts
                                } else {
                                    t.minSegmentDts = Math.min(t.minSegmentDts, n.dts)
                                }
                                if (t.maxSegmentDts === undefined) {
                                    t.maxSegmentDts = n.dts
                                } else {
                                    t.maxSegmentDts = Math.max(t.maxSegmentDts, n.dts)
                                }
                            }
                        };
                        E = function(t) {
                            delete t.minSegmentDts;
                            delete t.maxSegmentDts;
                            delete t.minSegmentPts;
                            delete t.maxSegmentPts
                        };
                        S = function(t) {
                            var n, r, i = t.minSegmentDts - t.timelineStartInfo.dts;
                            n = t.timelineStartInfo.baseMediaDecodeTime;
                            n += i;
                            n = Math.max(0, n);
                            if (t.type === "audio") {
                                r = t.samplerate / p;
                                n *= r;
                                n = Math.floor(n)
                            }
                            return n
                        };
                        g = function(t, n) {
                            this.numberOfTracks = 0;
                            this.metadataStream = n;
                            if (typeof t.remux !== "undefined") {
                                this.remuxTracks = !!t.remux
                            } else {
                                this.remuxTracks = true
                            }
                            this.pendingTracks = [];
                            this.videoTrack = null;
                            this.pendingBoxes = [];
                            this.pendingCaptions = [];
                            this.pendingMetadata = [];
                            this.pendingBytes = 0;
                            this.emittedTracks = 0;
                            g.prototype.init.call(this);
                            this.push = function(e) {
                                if (e.text) {
                                    return this.pendingCaptions.push(e)
                                }
                                if (e.frames) {
                                    return this.pendingMetadata.push(e)
                                }
                                this.pendingTracks.push(e.track);
                                this.pendingBoxes.push(e.boxes);
                                this.pendingBytes += e.boxes.byteLength;
                                if (e.track.type === "video") {
                                    this.videoTrack = e.track
                                }
                                if (e.track.type === "audio") {
                                    this.audioTrack = e.track
                                }
                            }
                        };
                        g.prototype = new r;
                        g.prototype.flush = function(e) {
                            var t = 0,
                                n = {
                                    captions: [],
                                    captionStreams: {},
                                    metadata: [],
                                    info: {}
                                },
                                r, s, o, u = 0,
                                a;
                            if (this.pendingTracks.length < this.numberOfTracks) {
                                if (e !== "VideoSegmentStream" && e !== "AudioSegmentStream") {
                                    return
                                } else if (this.remuxTracks) {
                                    return
                                } else if (this.pendingTracks.length === 0) {
                                    this.emittedTracks++;
                                    if (this.emittedTracks >= this.numberOfTracks) {
                                        this.trigger("done");
                                        this.emittedTracks = 0
                                    }
                                    return
                                }
                            }
                            if (this.videoTrack) {
                                u = this.videoTrack.timelineStartInfo.pts;
                                h.forEach(function(e) {
                                    n.info[e] = this.videoTrack[e]
                                }, this)
                            } else if (this.audioTrack) {
                                u = this.audioTrack.timelineStartInfo.pts;
                                c.forEach(function(e) {
                                    n.info[e] = this.audioTrack[e]
                                }, this)
                            }
                            if (this.pendingTracks.length === 1) {
                                n.type = this.pendingTracks[0].type
                            } else {
                                n.type = "combined"
                            }
                            this.emittedTracks += this.pendingTracks.length;
                            o = i.initSegment(this.pendingTracks);
                            n.initSegment = new Uint8Array(o.byteLength);
                            n.initSegment.set(o);
                            n.data = new Uint8Array(this.pendingBytes);
                            for (a = 0; a < this.pendingBoxes.length; a++) {
                                n.data.set(this.pendingBoxes[a], t);
                                t += this.pendingBoxes[a].byteLength
                            }
                            for (a = 0; a < this.pendingCaptions.length; a++) {
                                r = this.pendingCaptions[a];
                                r.startTime = r.startPts - u;
                                r.startTime /= 9e4;
                                r.endTime = r.endPts - u;
                                r.endTime /= 9e4;
                                n.captionStreams[r.stream] = true;
                                n.captions.push(r)
                            }
                            for (a = 0; a < this.pendingMetadata.length; a++) {
                                s = this.pendingMetadata[a];
                                s.cueTime = s.pts - u;
                                s.cueTime /= 9e4;
                                n.metadata.push(s)
                            }
                            n.metadata.dispatchType = this.metadataStream.dispatchType;
                            this.pendingTracks.length = 0;
                            this.videoTrack = null;
                            this.pendingBoxes.length = 0;
                            this.pendingCaptions.length = 0;
                            this.pendingBytes = 0;
                            this.pendingMetadata.length = 0;
                            this.trigger("data", n);
                            if (this.emittedTracks >= this.numberOfTracks) {
                                this.trigger("done");
                                this.emittedTracks = 0
                            }
                        };
                        m = function(t) {
                            var n = this,
                                r = true,
                                i, f;
                            m.prototype.init.call(this);
                            t = t || {};
                            this.baseMediaDecodeTime = t.baseMediaDecodeTime || 0;
                            this.transmuxPipeline_ = {};
                            this.setupAacPipeline = function() {
                                var e = {};
                                this.transmuxPipeline_ = e;
                                e.type = "aac";
                                e.metadataStream = new s.MetadataStream;
                                e.aacStream = new a;
                                e.audioTimestampRolloverStream = new s.TimestampRolloverStream("audio");
                                e.timedMetadataTimestampRolloverStream = new s.TimestampRolloverStream("timed-metadata");
                                e.adtsStream = new o;
                                e.coalesceStream = new g(t, e.metadataStream);
                                e.headOfPipeline = e.aacStream;
                                e.aacStream.pipe(e.audioTimestampRolloverStream).pipe(e.adtsStream);
                                e.aacStream.pipe(e.timedMetadataTimestampRolloverStream).pipe(e.metadataStream).pipe(e.coalesceStream);
                                e.metadataStream.on("timestamp", function(t) {
                                    e.aacStream.setTimestamp(t.timeStamp)
                                });
                                e.aacStream.on("data", function(t) {
                                    if (t.type === "timed-metadata" && !e.audioSegmentStream) {
                                        f = f || {
                                            timelineStartInfo: {
                                                baseMediaDecodeTime: n.baseMediaDecodeTime
                                            },
                                            codec: "adts",
                                            type: "audio"
                                        };
                                        e.coalesceStream.numberOfTracks++;
                                        e.audioSegmentStream = new v(f);
                                        e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
                                    }
                                });
                                e.coalesceStream.on("data", this.trigger.bind(this, "data"));
                                e.coalesceStream.on("done", this.trigger.bind(this, "done"))
                            };
                            this.setupTsPipeline = function() {
                                var e = {};
                                this.transmuxPipeline_ = e;
                                e.type = "ts";
                                e.metadataStream = new s.MetadataStream;
                                e.packetStream = new s.TransportPacketStream;
                                e.parseStream = new s.TransportParseStream;
                                e.elementaryStream = new s.ElementaryStream;
                                e.videoTimestampRolloverStream = new s.TimestampRolloverStream("video");
                                e.audioTimestampRolloverStream = new s.TimestampRolloverStream("audio");
                                e.timedMetadataTimestampRolloverStream = new s.TimestampRolloverStream("timed-metadata");
                                e.adtsStream = new o;
                                e.h264Stream = new u;
                                e.captionStream = new s.CaptionStream;
                                e.coalesceStream = new g(t, e.metadataStream);
                                e.headOfPipeline = e.packetStream;
                                e.packetStream.pipe(e.parseStream).pipe(e.elementaryStream);
                                e.elementaryStream.pipe(e.videoTimestampRolloverStream).pipe(e.h264Stream);
                                e.elementaryStream.pipe(e.audioTimestampRolloverStream).pipe(e.adtsStream);
                                e.elementaryStream.pipe(e.timedMetadataTimestampRolloverStream).pipe(e.metadataStream).pipe(e.coalesceStream);
                                e.h264Stream.pipe(e.captionStream).pipe(e.coalesceStream);
                                e.elementaryStream.on("data", function(r) {
                                    var s;
                                    if (r.type === "metadata") {
                                        s = r.tracks.length;
                                        while (s--) {
                                            if (!i && r.tracks[s].type === "video") {
                                                i = r.tracks[s];
                                                i.timelineStartInfo.baseMediaDecodeTime = n.baseMediaDecodeTime
                                            } else if (!f && r.tracks[s].type === "audio") {
                                                f = r.tracks[s];
                                                f.timelineStartInfo.baseMediaDecodeTime = n.baseMediaDecodeTime
                                            }
                                        }
                                        if (i && !e.videoSegmentStream) {
                                            e.coalesceStream.numberOfTracks++;
                                            e.videoSegmentStream = new d(i, t);
                                            e.videoSegmentStream.on("timelineStartInfo", function(t) {
                                                if (f) {
                                                    f.timelineStartInfo = t;
                                                    e.audioSegmentStream.setEarliestDts(t.dts)
                                                }
                                            });
                                            e.videoSegmentStream.on("processedGopsInfo", n.trigger.bind(n, "gopInfo"));
                                            e.videoSegmentStream.on("baseMediaDecodeTime", function(t) {
                                                if (f) {
                                                    e.audioSegmentStream.setVideoBaseMediaDecodeTime(t)
                                                }
                                            });
                                            e.h264Stream.pipe(e.videoSegmentStream).pipe(e.coalesceStream)
                                        }
                                        if (f && !e.audioSegmentStream) {
                                            e.coalesceStream.numberOfTracks++;
                                            e.audioSegmentStream = new v(f);
                                            e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
                                        }
                                    }
                                });
                                e.coalesceStream.on("data", this.trigger.bind(this, "data"));
                                e.coalesceStream.on("done", this.trigger.bind(this, "done"))
                            };
                            this.setBaseMediaDecodeTime = function(e) {
                                var t = this.transmuxPipeline_;
                                this.baseMediaDecodeTime = e;
                                if (f) {
                                    f.timelineStartInfo.dts = undefined;
                                    f.timelineStartInfo.pts = undefined;
                                    E(f);
                                    f.timelineStartInfo.baseMediaDecodeTime = e;
                                    if (t.audioTimestampRolloverStream) {
                                        t.audioTimestampRolloverStream.discontinuity()
                                    }
                                }
                                if (i) {
                                    if (t.videoSegmentStream) {
                                        t.videoSegmentStream.gopCache_ = [];
                                        t.videoTimestampRolloverStream.discontinuity()
                                    }
                                    i.timelineStartInfo.dts = undefined;
                                    i.timelineStartInfo.pts = undefined;
                                    E(i);
                                    t.captionStream.reset();
                                    i.timelineStartInfo.baseMediaDecodeTime = e
                                }
                                if (t.timedMetadataTimestampRolloverStream) {
                                    t.timedMetadataTimestampRolloverStream.discontinuity()
                                }
                            };
                            this.setAudioAppendStart = function(e) {
                                if (f) {
                                    this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e)
                                }
                            };
                            this.alignGopsWith = function(e) {
                                if (i && this.transmuxPipeline_.videoSegmentStream) {
                                    this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e)
                                }
                            };
                            this.push = function(e) {
                                if (r) {
                                    var t = b(e);
                                    if (t && this.transmuxPipeline_.type !== "aac") {
                                        this.setupAacPipeline()
                                    } else if (!t && this.transmuxPipeline_.type !== "ts") {
                                        this.setupTsPipeline()
                                    }
                                    r = false
                                }
                                this.transmuxPipeline_.headOfPipeline.push(e)
                            };
                            this.flush = function() {
                                r = true;
                                this.transmuxPipeline_.headOfPipeline.flush()
                            };
                            this.resetCaptions = function() {
                                if (this.transmuxPipeline_.captionStream) {
                                    this.transmuxPipeline_.captionStream.reset()
                                }
                            }
                        };
                        m.prototype = new r;
                        t.exports = {
                            Transmuxer: m,
                            VideoSegmentStream: d,
                            AudioSegmentStream: v,
                            AUDIO_PROPERTIES: c,
                            VIDEO_PROPERTIES: h
                        }
                    }, {
                        "../aac": 38,
                        "../codecs/adts.js": 40,
                        "../codecs/h264": 41,
                        "../data/silence": 42,
                        "../m2ts/m2ts.js": 50,
                        "../utils/clock": 60,
                        "../utils/stream.js": 62,
                        "./mp4-generator.js": 56
                    }],
                    59: [function(e, t, n) {
                        "use strict";
                        var r = e("../m2ts/stream-types.js");
                        var i = e("../m2ts/timestamp-rollover-stream.js").handleRollover;
                        var s = {};
                        s.ts = e("../m2ts/probe.js");
                        s.aac = e("../aac/probe.js");
                        var o = 9e4,
                            u = 188,
                            a = 71;
                        var f = function(t) {
                            if (t[0] === "I".charCodeAt(0) && t[1] === "D".charCodeAt(0) && t[2] === "3".charCodeAt(0)) {
                                return true
                            }
                            return false
                        };
                        var l = function(t, n) {
                            var r = 0,
                                i = u,
                                o, f;
                            while (i < t.byteLength) {
                                if (t[r] === a && t[i] === a) {
                                    o = t.subarray(r, i);
                                    f = s.ts.parseType(o, n.pid);
                                    switch (f) {
                                        case "pat":
                                            if (!n.pid) {
                                                n.pid = s.ts.parsePat(o)
                                            }
                                            break;
                                        case "pmt":
                                            if (!n.table) {
                                                n.table = s.ts.parsePmt(o)
                                            }
                                            break;
                                        default:
                                            break
                                    }
                                    if (n.pid && n.table) {
                                        return
                                    }
                                    r += u;
                                    i += u;
                                    continue
                                }
                                r++;
                                i++
                            }
                        };
                        var c = function(t, n, r) {
                            var i = 0,
                                o = u,
                                f, l, c, h, p;
                            var d = false;
                            while (o < t.byteLength) {
                                if (t[i] === a && t[o] === a) {
                                    f = t.subarray(i, o);
                                    l = s.ts.parseType(f, n.pid);
                                    switch (l) {
                                        case "pes":
                                            c = s.ts.parsePesType(f, n.table);
                                            h = s.ts.parsePayloadUnitStartIndicator(f);
                                            if (c === "audio" && h) {
                                                p = s.ts.parsePesTime(f);
                                                if (p) {
                                                    p.type = "audio";
                                                    r.audio.push(p);
                                                    d = true
                                                }
                                            }
                                            break;
                                        default:
                                            break
                                    }
                                    if (d) {
                                        break
                                    }
                                    i += u;
                                    o += u;
                                    continue
                                }
                                i++;
                                o++
                            }
                            o = t.byteLength;
                            i = o - u;
                            d = false;
                            while (i >= 0) {
                                if (t[i] === a && t[o] === a) {
                                    f = t.subarray(i, o);
                                    l = s.ts.parseType(f, n.pid);
                                    switch (l) {
                                        case "pes":
                                            c = s.ts.parsePesType(f, n.table);
                                            h = s.ts.parsePayloadUnitStartIndicator(f);
                                            if (c === "audio" && h) {
                                                p = s.ts.parsePesTime(f);
                                                if (p) {
                                                    p.type = "audio";
                                                    r.audio.push(p);
                                                    d = true
                                                }
                                            }
                                            break;
                                        default:
                                            break
                                    }
                                    if (d) {
                                        break
                                    }
                                    i -= u;
                                    o -= u;
                                    continue
                                }
                                i--;
                                o--
                            }
                        };
                        var h = function(t, n, r) {
                            var i = 0,
                                o = u,
                                f, l, c, h, p, d, v, m;
                            var g = false;
                            var y = {
                                data: [],
                                size: 0
                            };
                            while (o < t.byteLength) {
                                if (t[i] === a && t[o] === a) {
                                    f = t.subarray(i, o);
                                    l = s.ts.parseType(f, n.pid);
                                    switch (l) {
                                        case "pes":
                                            c = s.ts.parsePesType(f, n.table);
                                            h = s.ts.parsePayloadUnitStartIndicator(f);
                                            if (c === "video") {
                                                if (h && !g) {
                                                    p = s.ts.parsePesTime(f);
                                                    if (p) {
                                                        p.type = "video";
                                                        r.video.push(p);
                                                        g = true
                                                    }
                                                }
                                                if (!r.firstKeyFrame) {
                                                    if (h) {
                                                        if (y.size !== 0) {
                                                            d = new Uint8Array(y.size);
                                                            v = 0;
                                                            while (y.data.length) {
                                                                m = y.data.shift();
                                                                d.set(m, v);
                                                                v += m.byteLength
                                                            }
                                                            if (s.ts.videoPacketContainsKeyFrame(d)) {
                                                                r.firstKeyFrame = s.ts.parsePesTime(d);
                                                                r.firstKeyFrame.type = "video"
                                                            }
                                                            y.size = 0
                                                        }
                                                    }
                                                    y.data.push(f);
                                                    y.size += f.byteLength
                                                }
                                            }
                                            break;
                                        default:
                                            break
                                    }
                                    if (g && r.firstKeyFrame) {
                                        break
                                    }
                                    i += u;
                                    o += u;
                                    continue
                                }
                                i++;
                                o++
                            }
                            o = t.byteLength;
                            i = o - u;
                            g = false;
                            while (i >= 0) {
                                if (t[i] === a && t[o] === a) {
                                    f = t.subarray(i, o);
                                    l = s.ts.parseType(f, n.pid);
                                    switch (l) {
                                        case "pes":
                                            c = s.ts.parsePesType(f, n.table);
                                            h = s.ts.parsePayloadUnitStartIndicator(f);
                                            if (c === "video" && h) {
                                                p = s.ts.parsePesTime(f);
                                                if (p) {
                                                    p.type = "video";
                                                    r.video.push(p);
                                                    g = true
                                                }
                                            }
                                            break;
                                        default:
                                            break
                                    }
                                    if (g) {
                                        break
                                    }
                                    i -= u;
                                    o -= u;
                                    continue
                                }
                                i--;
                                o--
                            }
                        };
                        var p = function(t, n) {
                            if (t.audio && t.audio.length) {
                                var r = n;
                                if (typeof r === "undefined") {
                                    r = t.audio[0].dts
                                }
                                t.audio.forEach(function(e) {
                                    e.dts = i(e.dts, r);
                                    e.pts = i(e.pts, r);
                                    e.dtsTime = e.dts / o;
                                    e.ptsTime = e.pts / o
                                })
                            }
                            if (t.video && t.video.length) {
                                var s = n;
                                if (typeof s === "undefined") {
                                    s = t.video[0].dts
                                }
                                t.video.forEach(function(e) {
                                    e.dts = i(e.dts, s);
                                    e.pts = i(e.pts, s);
                                    e.dtsTime = e.dts / o;
                                    e.ptsTime = e.pts / o
                                });
                                if (t.firstKeyFrame) {
                                    var u = t.firstKeyFrame;
                                    u.dts = i(u.dts, s);
                                    u.pts = i(u.pts, s);
                                    u.dtsTime = u.dts / o;
                                    u.ptsTime = u.dts / o
                                }
                            }
                        };
                        var d = function(t) {
                            var n = false,
                                r = 0,
                                i = null,
                                u = null,
                                a = 0,
                                f = 0,
                                l;
                            while (t.length - f >= 3) {
                                var c = s.aac.parseType(t, f);
                                switch (c) {
                                    case "timed-metadata":
                                        if (t.length - f < 10) {
                                            n = true;
                                            break
                                        }
                                        a = s.aac.parseId3TagSize(t, f);
                                        if (a > t.length) {
                                            n = true;
                                            break
                                        }
                                        if (u === null) {
                                            l = t.subarray(f, f + a);
                                            u = s.aac.parseAacTimestamp(l)
                                        }
                                        f += a;
                                        break;
                                    case "audio":
                                        if (t.length - f < 7) {
                                            n = true;
                                            break
                                        }
                                        a = s.aac.parseAdtsSize(t, f);
                                        if (a > t.length) {
                                            n = true;
                                            break
                                        }
                                        if (i === null) {
                                            l = t.subarray(f, f + a);
                                            i = s.aac.parseSampleRate(l)
                                        }
                                        r++;
                                        f += a;
                                        break;
                                    default:
                                        f++;
                                        break
                                }
                                if (n) {
                                    return null
                                }
                            }
                            if (i === null || u === null) {
                                return null
                            }
                            var h = o / i;
                            var p = {
                                audio: [{
                                    type: "audio",
                                    dts: u,
                                    pts: u
                                }, {
                                    type: "audio",
                                    dts: u + r * 1024 * h,
                                    pts: u + r * 1024 * h
                                }]
                            };
                            return p
                        };
                        var v = function(t) {
                            var n = {
                                pid: null,
                                table: null
                            };
                            var i = {};
                            l(t, n);
                            for (var s in n.table) {
                                if (n.table.hasOwnProperty(s)) {
                                    var o = n.table[s];
                                    switch (o) {
                                        case r.H264_STREAM_TYPE:
                                            i.video = [];
                                            h(t, n, i);
                                            if (i.video.length === 0) {
                                                delete i.video
                                            }
                                            break;
                                        case r.ADTS_STREAM_TYPE:
                                            i.audio = [];
                                            c(t, n, i);
                                            if (i.audio.length === 0) {
                                                delete i.audio
                                            }
                                            break;
                                        default:
                                            break
                                    }
                                }
                            }
                            return i
                        };
                        var m = function(t, n) {
                            var r = f(t);
                            var i;
                            if (r) {
                                i = d(t)
                            } else {
                                i = v(t)
                            }
                            if (!i || !i.audio && !i.video) {
                                return null
                            }
                            p(i, n);
                            return i
                        };
                        t.exports = {
                            inspect: m
                        }
                    }, {
                        "../aac/probe.js": 39,
                        "../m2ts/probe.js": 52,
                        "../m2ts/stream-types.js": 53,
                        "../m2ts/timestamp-rollover-stream.js": 54
                    }],
                    60: [function(e, t, n) {
                        var r = 9e4,
                            i, s, o, u, a, f;
                        i = function(t) {
                            return t * r
                        };
                        s = function(t, n) {
                            return t * n
                        };
                        o = function(t) {
                            return t / r
                        };
                        u = function(t, n) {
                            return t / n
                        };
                        a = function(t, n) {
                            return i(u(t, n))
                        };
                        f = function(t, n) {
                            return s(o(t), n)
                        };
                        t.exports = {
                            secondsToVideoTs: i,
                            secondsToAudioTs: s,
                            videoTsToSeconds: o,
                            audioTsToSeconds: u,
                            audioTsToVideoTs: a,
                            videoTsToAudioTs: f
                        }
                    }, {}],
                    61: [function(e, t, n) {
                        "use strict";
                        var r;
                        r = function(t) {
                            var n = t.byteLength,
                                r = 0,
                                i = 0;
                            this.length = function() {
                                return 8 * n
                            };
                            this.bitsAvailable = function() {
                                return 8 * n + i
                            };
                            this.loadWord = function() {
                                var e = t.byteLength - n,
                                    s = new Uint8Array(4),
                                    o = Math.min(4, n);
                                if (o === 0) {
                                    throw new Error("no bytes available")
                                }
                                s.set(t.subarray(e, e + o));
                                r = (new DataView(s.buffer)).getUint32(0);
                                i = o * 8;
                                n -= o
                            };
                            this.skipBits = function(e) {
                                var t;
                                if (i > e) {
                                    r <<= e;
                                    i -= e
                                } else {
                                    e -= i;
                                    t = Math.floor(e / 8);
                                    e -= t * 8;
                                    n -= t;
                                    this.loadWord();
                                    r <<= e;
                                    i -= e
                                }
                            };
                            this.readBits = function(e) {
                                var t = Math.min(i, e),
                                    s = r >>> 32 - t;
                                i -= t;
                                if (i > 0) {
                                    r <<= t
                                } else if (n > 0) {
                                    this.loadWord()
                                }
                                t = e - t;
                                if (t > 0) {
                                    return s << t | this.readBits(t)
                                }
                                return s
                            };
                            this.skipLeadingZeros = function() {
                                var e;
                                for (e = 0; e < i; ++e) {
                                    if ((r & 2147483648 >>> e) !== 0) {
                                        r <<= e;
                                        i -= e;
                                        return e
                                    }
                                }
                                this.loadWord();
                                return e + this.skipLeadingZeros()
                            };
                            this.skipUnsignedExpGolomb = function() {
                                this.skipBits(1 + this.skipLeadingZeros())
                            };
                            this.skipExpGolomb = function() {
                                this.skipBits(1 + this.skipLeadingZeros())
                            };
                            this.readUnsignedExpGolomb = function() {
                                var e = this.skipLeadingZeros();
                                return this.readBits(e + 1) - 1
                            };
                            this.readExpGolomb = function() {
                                var e = this.readUnsignedExpGolomb();
                                if (1 & e) {
                                    return 1 + e >>> 1
                                }
                                return -1 * (e >>> 1)
                            };
                            this.readBoolean = function() {
                                return this.readBits(1) === 1
                            };
                            this.readUnsignedByte = function() {
                                return this.readBits(8)
                            };
                            this.loadWord()
                        };
                        t.exports = r
                    }, {}],
                    62: [function(e, t, n) {
                        "use strict";
                        var r = function() {
                            this.init = function() {
                                var e = {};
                                this.on = function(t, n) {
                                    if (!e[t]) {
                                        e[t] = []
                                    }
                                    e[t] = e[t].concat(n)
                                };
                                this.off = function(t, n) {
                                    var r;
                                    if (!e[t]) {
                                        return false
                                    }
                                    r = e[t].indexOf(n);
                                    e[t] = e[t].slice();
                                    e[t].splice(r, 1);
                                    return r > -1
                                };
                                this.trigger = function(t) {
                                    var n, r, i, s;
                                    n = e[t];
                                    if (!n) {
                                        return
                                    }
                                    if (arguments.length === 2) {
                                        i = n.length;
                                        for (r = 0; r < i; ++r) {
                                            n[r].call(this, arguments[1])
                                        }
                                    } else {
                                        s = [];
                                        r = arguments.length;
                                        for (r = 1; r < arguments.length; ++r) {
                                            s.push(arguments[r])
                                        }
                                        i = n.length;
                                        for (r = 0; r < i; ++r) {
                                            n[r].apply(this, s)
                                        }
                                    }
                                };
                                this.dispose = function() {
                                    e = {}
                                }
                            }
                        };
                        r.prototype.pipe = function(e) {
                            this.on("data", function(t) {
                                e.push(t)
                            });
                            this.on("done", function(t) {
                                e.flush(t)
                            });
                            return e
                        };
                        r.prototype.push = function(e) {
                            this.trigger("data", e)
                        };
                        r.prototype.flush = function(e) {
                            this.trigger("done", e)
                        };
                        t.exports = r
                    }, {}],
                    63: [function(t, n, r) {
                        (function(t) {
                            var i = {
                                buildAbsoluteURL: function(t, n) {
                                    n = n.trim();
                                    if (/^[a-z]+:/i.test(n)) {
                                        return n
                                    }
                                    var r = null;
                                    var s = null;
                                    var o = /^([^#]*)(.*)$/.exec(n);
                                    if (o) {
                                        s = o[2];
                                        n = o[1]
                                    }
                                    var u = /^([^\?]*)(.*)$/.exec(n);
                                    if (u) {
                                        r = u[2];
                                        n = u[1]
                                    }
                                    var a = /^([^#]*)(.*)$/.exec(t);
                                    if (a) {
                                        t = a[1]
                                    }
                                    var f = /^([^\?]*)(.*)$/.exec(t);
                                    if (f) {
                                        t = f[1]
                                    }
                                    var l = /^(([a-z]+:)?\/\/[^:\/]+(:[0-9]+)?)?(\/?.*)$/i.exec(t);
                                    if (!l) {
                                        throw new Error("Error trying to parse base URL.")
                                    }
                                    var c = l[2] || "";
                                    var h = l[1] || "";
                                    var p = l[4];
                                    if (p.indexOf("/") !== 0 && h !== "") {
                                        p = "/" + p
                                    }
                                    var d = null;
                                    if (/^\/\//.test(n)) {
                                        d = c + "//" + i.buildAbsolutePath("", n.substring(2))
                                    } else if (/^\//.test(n)) {
                                        d = h + "/" + i.buildAbsolutePath("", n.substring(1))
                                    } else {
                                        d = i.buildAbsolutePath(h + p, n)
                                    }
                                    if (r) {
                                        d += r
                                    }
                                    if (s) {
                                        d += s
                                    }
                                    return d
                                },
                                buildAbsolutePath: function(t, n) {
                                    var r = n;
                                    var i, s = "",
                                        o = t.replace(/[^\/]*$/, r.replace(/(\/|^)(?:\.?\/+)+/g, "$1"));
                                    for (var u, a = 0; u = o.indexOf("/../", a),
                                        u > -1; a = u + i) {
                                        i = /^\/(?:\.\.\/)*/.exec(o.slice(u))[0].length;
                                        s = (s + o.substring(a, u)).replace(new RegExp("(?:\\/+[^\\/]*){0," + (i - 1) / 3 + "}$"), "/")
                                    }
                                    return s + o.substr(a)
                                }
                            };
                            if ((typeof r === "undefined" ? "undefined" : u(r)) === "object" && (typeof n === "undefined" ? "undefined" : u(n)) === "object")
                                n.exports = i;
                            else if (typeof e === "function" && e.amd)
                                e([], function() {
                                    return i
                                });
                            else if ((typeof r === "undefined" ? "undefined" : u(r)) === "object")
                                r["URLToolkit"] = i;
                            else
                                t["URLToolkit"] = i
                        })(this)
                    }, {}],
                    64: [function(e, t, r) {
                        (function(n) {
                            "use strict";

                            function i(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var s = e("global/window");
                            var o = i(s);
                            var u = typeof window !== "undefined" ? window["videojs"] : typeof n !== "undefined" ? n["videojs"] : null;
                            var a = i(u);
                            var f = function(t) {
                                Object.defineProperties(t.frame, {
                                    id: {
                                        get: function() {
                                            a["default"].log.warn("cue.frame.id is deprecated. Use cue.value.key instead.");
                                            return t.value.key
                                        }
                                    },
                                    value: {
                                        get: function() {
                                            a["default"].log.warn("cue.frame.value is deprecated. Use cue.value.data instead.");
                                            return t.value.data
                                        }
                                    },
                                    privateData: {
                                        get: function() {
                                            a["default"].log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead.");
                                            return t.value.data
                                        }
                                    }
                                })
                            };
                            var l = function(t) {
                                var n = undefined;
                                if (isNaN(t) || Math.abs(t) === Infinity) {
                                    n = Number.MAX_VALUE
                                } else {
                                    n = t
                                }
                                return n
                            };
                            var c = function(t, n, r) {
                                var i = o["default"].WebKitDataCue || o["default"].VTTCue;
                                if (n) {
                                    n.forEach(function(e) {
                                        var t = e.stream;
                                        this.inbandTextTracks_[t].addCue(new i(e.startTime + this.timestampOffset, e.endTime + this.timestampOffset, e.text))
                                    }, t)
                                }
                                if (r) {
                                    (function() {
                                        var e = l(t.mediaSource_.duration);
                                        r.forEach(function(e) {
                                            var t = e.cueTime + this.timestampOffset;
                                            e.frames.forEach(function(e) {
                                                var n = new i(t, t, e.value || e.url || e.data || "");
                                                n.frame = e;
                                                n.value = e;
                                                f(n);
                                                this.metadataTrack_.addCue(n)
                                            }, this)
                                        }, t);
                                        if (t.metadataTrack_ && t.metadataTrack_.cues && t.metadataTrack_.cues.length) {
                                            (function() {
                                                var n = t.metadataTrack_.cues;
                                                var r = [];
                                                for (var i = 0; i < n.length; i++) {
                                                    if (n[i]) {
                                                        r.push(n[i])
                                                    }
                                                }
                                                var s = r.reduce(function(e, t) {
                                                    var n = e[t.startTime] || [];
                                                    n.push(t);
                                                    e[t.startTime] = n;
                                                    return e
                                                }, {});
                                                var o = Object.keys(s).sort(function(e, t) {
                                                    return Number(e) - Number(t)
                                                });
                                                o.forEach(function(t, n) {
                                                    var r = s[t];
                                                    var i = Number(o[n + 1]) || e;
                                                    r.forEach(function(e) {
                                                        e.endTime = i
                                                    })
                                                })
                                            })()
                                        }
                                    })()
                                }
                            };
                            r["default"] = {
                                addTextTrackData: c,
                                durationOfVideo: l
                            };
                            t.exports = r["default"]
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "global/window": 32
                    }],
                    65: [function(e, t, n) {
                        "use strict";
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function(t) {
                            return /mp4a\.\d+.\d+/i.test(t)
                        };
                        var i = function(t) {
                            return /avc1\.[\da-f]+/i.test(t)
                        };
                        var s = function(t) {
                            var n = {
                                type: "",
                                parameters: {}
                            };
                            var r = t.trim().split(";");
                            n.type = r.shift().trim();
                            r.forEach(function(e) {
                                var t = e.trim().split("=");
                                if (t.length > 1) {
                                    var r = t[0].replace(/"/g, "").trim();
                                    var i = t[1].replace(/"/g, "").trim();
                                    n.parameters[r] = i
                                }
                            });
                            return n
                        };
                        var o = function(t) {
                            return t.map(function(e) {
                                return e.replace(/avc1\.(\d+)\.(\d+)/i, function(e, t, n) {
                                    var r = ("00" + Number(t).toString(16)).slice(-2);
                                    var i = ("00" + Number(n).toString(16)).slice(-2);
                                    return "avc1." + r + "00" + i
                                })
                            })
                        };
                        n["default"] = {
                            isAudioCodec: r,
                            parseContentType: s,
                            isVideoCodec: i,
                            translateLegacyCodecs: o
                        };
                        t.exports = n["default"]
                    }, {}],
                    66: [function(e, t, n) {
                        "use strict";
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function(t, n, r) {
                            var i = n.player_;
                            if (r.captions && r.captions.length) {
                                if (!t.inbandTextTracks_) {
                                    t.inbandTextTracks_ = {}
                                }
                                for (var s in r.captionStreams) {
                                    if (!t.inbandTextTracks_[s]) {
                                        i.tech_.trigger({
                                            type: "usage",
                                            name: "hls-608"
                                        });
                                        var o = i.textTracks().getTrackById(s);
                                        if (o) {
                                            t.inbandTextTracks_[s] = o
                                        } else {
                                            t.inbandTextTracks_[s] = i.addRemoteTextTrack({
                                                kind: "captions",
                                                id: s,
                                                label: s
                                            }, false).track
                                        }
                                    }
                                }
                            }
                            if (r.metadata && r.metadata.length && !t.metadataTrack_) {
                                t.metadataTrack_ = i.addRemoteTextTrack({
                                    kind: "metadata",
                                    label: "Timed Metadata"
                                }, false).track;
                                t.metadataTrack_.inBandMetadataTrackDispatchType = r.metadata.dispatchType
                            }
                        };
                        n["default"] = r;
                        t.exports = n["default"]
                    }, {}],
                    67: [function(e, t, n) {
                        "use strict";
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = {
                            TIME_BETWEEN_CHUNKS: 1,
                            BYTES_PER_CHUNK: 1024 * 32
                        };
                        n["default"] = r;
                        t.exports = n["default"]
                    }, {}],
                    68: [function(e, t, r) {
                        (function(n) {
                            "use strict";

                            function o(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function a(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }

                            function f(e, t) {
                                if (typeof t !== "function" && t !== null) {
                                    throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                                }
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: false,
                                        writable: true,
                                        configurable: true
                                    }
                                });
                                if (t)
                                    Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var s = function(t, n, r) {
                                var i = true;
                                e: while (i) {
                                    var s = t,
                                        o = n,
                                        u = r;
                                    i = false;
                                    if (s === null)
                                        s = Function.prototype;
                                    var a = Object.getOwnPropertyDescriptor(s, o);
                                    if (a === undefined) {
                                        var f = Object.getPrototypeOf(s);
                                        if (f === null) {
                                            return undefined
                                        } else {
                                            t = f;
                                            n = o;
                                            r = u;
                                            i = true;
                                            a = f = undefined;
                                            continue e
                                        }
                                    } else if ("value" in a) {
                                        return a.value
                                    } else {
                                        var l = a.get;
                                        if (l === undefined) {
                                            return undefined
                                        }
                                        return l.call(u)
                                    }
                                }
                            };
                            var l = e("global/document");
                            var c = o(l);
                            var h = typeof window !== "undefined" ? window["videojs"] : typeof n !== "undefined" ? n["videojs"] : null;
                            var p = o(h);
                            var d = e("./flash-source-buffer");
                            var v = o(d);
                            var m = e("./flash-constants");
                            var g = o(m);
                            var y = e("./codec-utils");
                            var b = function(e) {
                                function t() {
                                    var e = this;
                                    a(this, t);
                                    s(Object.getPrototypeOf(t.prototype), "constructor", this).call(this);
                                    this.sourceBuffers = [];
                                    this.readyState = "closed";
                                    this.on(["sourceopen", "webkitsourceopen"], function(t) {
                                        e.swfObj = c["default"].getElementById(t.swfId);
                                        e.player_ = (0,
                                            p["default"])(e.swfObj.parentNode);
                                        e.tech_ = e.swfObj.tech;
                                        e.readyState = "open";
                                        e.tech_.on("seeking", function() {
                                            var t = e.sourceBuffers.length;
                                            while (t--) {
                                                e.sourceBuffers[t].abort()
                                            }
                                        });
                                        if (e.swfObj) {
                                            e.swfObj.vjs_load()
                                        }
                                    })
                                }
                                f(t, e);
                                i(t, [{
                                    key: "addSeekableRange_",
                                    value: function() {}
                                }, {
                                    key: "addSourceBuffer",
                                    value: function(t) {
                                        var n = (0,
                                            y.parseContentType)(t);
                                        var r = undefined;
                                        if (n.type === "video/mp2t" || n.type === "audio/mp2t") {
                                            r = new v["default"](this)
                                        } else {
                                            throw new Error("NotSupportedError (Video.js)")
                                        }
                                        this.sourceBuffers.push(r);
                                        return r
                                    }
                                }, {
                                    key: "endOfStream",
                                    value: function(t) {
                                        if (t === "network") {
                                            this.tech_.error(2)
                                        } else if (t === "decode") {
                                            this.tech_.error(3)
                                        }
                                        if (this.readyState !== "ended") {
                                            this.readyState = "ended";
                                            this.swfObj.vjs_endOfStream()
                                        }
                                    }
                                }]);
                                return t
                            }(p["default"].EventTarget);
                            r["default"] = b;
                            try {
                                Object.defineProperty(b.prototype, "duration", {
                                    get: function() {
                                        if (!this.swfObj) {
                                            return NaN
                                        }
                                        return this.swfObj.vjs_getProperty("duration")
                                    },
                                    set: function(t) {
                                        var n = undefined;
                                        var r = this.swfObj.vjs_getProperty("duration");
                                        this.swfObj.vjs_setProperty("duration", t);
                                        if (t < r) {
                                            for (n = 0; n < this.sourceBuffers.length; n++) {
                                                this.sourceBuffers[n].remove(t, r)
                                            }
                                        }
                                        return t
                                    }
                                })
                            } catch (w) {
                                b.prototype.duration = NaN
                            }
                            for (var E in g["default"]) {
                                b[E] = g["default"][E]
                            }
                            t.exports = r["default"]
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./codec-utils": 65,
                        "./flash-constants": 67,
                        "./flash-source-buffer": 69,
                        "global/document": 31
                    }],
                    69: [function(e, t, r) {
                        (function(n) {
                            "use strict";

                            function o(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function a(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }

                            function f(e, t) {
                                if (typeof t !== "function" && t !== null) {
                                    throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                                }
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: false,
                                        writable: true,
                                        configurable: true
                                    }
                                });
                                if (t)
                                    Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var s = function(t, n, r) {
                                var i = true;
                                e: while (i) {
                                    var s = t,
                                        o = n,
                                        u = r;
                                    i = false;
                                    if (s === null)
                                        s = Function.prototype;
                                    var a = Object.getOwnPropertyDescriptor(s, o);
                                    if (a === undefined) {
                                        var f = Object.getPrototypeOf(s);
                                        if (f === null) {
                                            return undefined
                                        } else {
                                            t = f;
                                            n = o;
                                            r = u;
                                            i = true;
                                            a = f = undefined;
                                            continue e
                                        }
                                    } else if ("value" in a) {
                                        return a.value
                                    } else {
                                        var l = a.get;
                                        if (l === undefined) {
                                            return undefined
                                        }
                                        return l.call(u)
                                    }
                                }
                            };
                            var l = e("global/window");
                            var c = o(l);
                            var h = typeof window !== "undefined" ? window["videojs"] : typeof n !== "undefined" ? n["videojs"] : null;
                            var p = o(h);
                            var d = e("mux.js/lib/flv");
                            var v = o(d);
                            var m = e("./remove-cues-from-track");
                            var g = o(m);
                            var y = e("./create-text-tracks-if-necessary");
                            var b = o(y);
                            var w = e("./add-text-track-data");
                            var E = e("./flash-transmuxer-worker");
                            var S = o(E);
                            var x = e("webworkify");
                            var T = o(x);
                            var N = e("./flash-constants");
                            var C = o(N);
                            var k = function(t) {
                                c["default"].setTimeout(t, C["default"].TIME_BETWEEN_CHUNKS)
                            };
                            var L = function() {
                                return Math.random().toString(36).slice(2, 8)
                            };
                            var A = function(t, n) {
                                if (typeof n !== "number" || n < 0) {
                                    n = 0
                                }
                                var r = Math.pow(10, n);
                                return Math.round(t * r) / r
                            };
                            var O = function(e) {
                                function t(e) {
                                    var n = this;
                                    a(this, t);
                                    s(Object.getPrototypeOf(t.prototype), "constructor", this).call(this);
                                    var r = undefined;
                                    this.chunkSize_ = C["default"].BYTES_PER_CHUNK;
                                    this.buffer_ = [];
                                    this.bufferSize_ = 0;
                                    this.basePtsOffset_ = NaN;
                                    this.mediaSource_ = e;
                                    this.audioBufferEnd_ = NaN;
                                    this.videoBufferEnd_ = NaN;
                                    this.updating = false;
                                    this.timestampOffset_ = 0;
                                    r = c["default"].btoa(String.fromCharCode.apply(null, Array.prototype.slice.call(v["default"].getFlvHeader())));
                                    var i = this.mediaSource_.player_.id().replace(/[^a-zA-Z0-9]/g, "_");
                                    this.flashEncodedHeaderName_ = "vjs_flashEncodedHeader_" + i + L();
                                    this.flashEncodedDataName_ = "vjs_flashEncodedData_" + i + L();
                                    c["default"][this.flashEncodedHeaderName_] = function() {
                                        delete c["default"][n.flashEncodedHeaderName_];
                                        return r
                                    };
                                    this.mediaSource_.swfObj.vjs_appendChunkReady(this.flashEncodedHeaderName_);
                                    this.transmuxer_ = (0,
                                        T["default"])(S["default"]);
                                    this.transmuxer_.postMessage({
                                        action: "init",
                                        options: {}
                                    });
                                    this.transmuxer_.onmessage = function(e) {
                                        if (e.data.action === "data") {
                                            n.receiveBuffer_(e.data.segment)
                                        }
                                    };
                                    this.one("updateend", function() {
                                        n.mediaSource_.tech_.trigger("loadedmetadata")
                                    });
                                    Object.defineProperty(this, "timestampOffset", {
                                        get: function() {
                                            return this.timestampOffset_
                                        },
                                        set: function(t) {
                                            if (typeof t === "number" && t >= 0) {
                                                this.timestampOffset_ = t;
                                                this.mediaSource_.swfObj.vjs_discontinuity();
                                                this.basePtsOffset_ = NaN;
                                                this.audioBufferEnd_ = NaN;
                                                this.videoBufferEnd_ = NaN;
                                                this.transmuxer_.postMessage({
                                                    action: "reset"
                                                })
                                            }
                                        }
                                    });
                                    Object.defineProperty(this, "buffered", {
                                        get: function() {
                                            if (!this.mediaSource_ || !this.mediaSource_.swfObj || !("vjs_getProperty" in this.mediaSource_.swfObj)) {
                                                return p["default"].createTimeRange()
                                            }
                                            var t = this.mediaSource_.swfObj.vjs_getProperty("buffered");
                                            if (t && t.length) {
                                                t[0][0] = A(t[0][0], 3);
                                                t[0][1] = A(t[0][1], 3)
                                            }
                                            return p["default"].createTimeRanges(t)
                                        }
                                    });
                                    this.mediaSource_.player_.on("seeked", function() {
                                        (0,
                                            g["default"])(0, Infinity, n.metadataTrack_);
                                        if (n.inbandTextTracks_) {
                                            for (var e in n.inbandTextTracks_) {
                                                (0,
                                                    g["default"])(0, Infinity, n.inbandTextTracks_[e])
                                            }
                                        }
                                    });
                                    var o = this.onHlsReset_.bind(this);
                                    this.mediaSource_.player_.tech_.on("hls-reset", o);
                                    this.mediaSource_.player_.tech_.hls.on("dispose", function() {
                                        n.transmuxer_.terminate();
                                        n.mediaSource_.player_.tech_.off("hls-reset", o)
                                    })
                                }
                                f(t, e);
                                i(t, [{
                                    key: "appendBuffer",
                                    value: function(t) {
                                        var n = undefined;
                                        if (this.updating) {
                                            n = new Error("SourceBuffer.append() cannot be called " + "while an update is in progress");
                                            n.name = "InvalidStateError";
                                            n.code = 11;
                                            throw n
                                        }
                                        this.updating = true;
                                        this.mediaSource_.readyState = "open";
                                        this.trigger({
                                            type: "update"
                                        });
                                        this.transmuxer_.postMessage({
                                            action: "push",
                                            data: t.buffer,
                                            byteOffset: t.byteOffset,
                                            byteLength: t.byteLength
                                        }, [t.buffer]);
                                        this.transmuxer_.postMessage({
                                            action: "flush"
                                        })
                                    }
                                }, {
                                    key: "abort",
                                    value: function() {
                                        this.buffer_ = [];
                                        this.bufferSize_ = 0;
                                        this.mediaSource_.swfObj.vjs_abort();
                                        if (this.updating) {
                                            this.updating = false;
                                            this.trigger({
                                                type: "updateend"
                                            })
                                        }
                                    }
                                }, {
                                    key: "remove",
                                    value: function(t, n) {
                                        (0,
                                            g["default"])(t, n, this.metadataTrack_);
                                        if (this.inbandTextTracks_) {
                                            for (var r in this.inbandTextTracks_) {
                                                (0,
                                                    g["default"])(t, n, this.inbandTextTracks_[r])
                                            }
                                        }
                                        this.trigger({
                                            type: "update"
                                        });
                                        this.trigger({
                                            type: "updateend"
                                        })
                                    }
                                }, {
                                    key: "receiveBuffer_",
                                    value: function(t) {
                                        var n = this;
                                        (0,
                                            b["default"])(this, this.mediaSource_, t);
                                        (0,
                                            w.addTextTrackData)(this, t.captions, t.metadata);
                                        k(function() {
                                            var e = n.convertTagsToData_(t);
                                            if (n.buffer_.length === 0) {
                                                k(n.processBuffer_.bind(n))
                                            }
                                            if (e) {
                                                n.buffer_.push(e);
                                                n.bufferSize_ += e.byteLength
                                            }
                                        })
                                    }
                                }, {
                                    key: "processBuffer_",
                                    value: function() {
                                        var t = this;
                                        var n = C["default"].BYTES_PER_CHUNK;
                                        if (!this.buffer_.length) {
                                            if (this.updating !== false) {
                                                this.updating = false;
                                                this.trigger({
                                                    type: "updateend"
                                                })
                                            }
                                            return
                                        }
                                        var r = this.buffer_[0].subarray(0, n);
                                        if (r.byteLength < n || this.buffer_[0].byteLength === n) {
                                            this.buffer_.shift()
                                        } else {
                                            this.buffer_[0] = this.buffer_[0].subarray(n)
                                        }
                                        this.bufferSize_ -= r.byteLength;
                                        var i = [];
                                        var s = r.byteLength;
                                        for (var o = 0; o < s; o++) {
                                            i.push(String.fromCharCode(r[o]))
                                        }
                                        var u = c["default"].btoa(i.join(""));
                                        c["default"][this.flashEncodedDataName_] = function() {
                                            k(t.processBuffer_.bind(t));
                                            delete c["default"][t.flashEncodedDataName_];
                                            return u
                                        };
                                        this.mediaSource_.swfObj.vjs_appendChunkReady(this.flashEncodedDataName_)
                                    }
                                }, {
                                    key: "convertTagsToData_",
                                    value: function(t) {
                                        var n = 0;
                                        var r = this.mediaSource_.tech_;
                                        var i = 0;
                                        var s = undefined;
                                        var o = t.tags.videoTags;
                                        var u = t.tags.audioTags;
                                        if (isNaN(this.basePtsOffset_) && (o.length || u.length)) {
                                            var a = o[0] || {
                                                pts: Infinity
                                            };
                                            var f = u[0] || {
                                                pts: Infinity
                                            };
                                            this.basePtsOffset_ = Math.min(f.pts, a.pts)
                                        }
                                        if (r.seeking()) {
                                            this.videoBufferEnd_ = NaN;
                                            this.audioBufferEnd_ = NaN
                                        }
                                        if (isNaN(this.videoBufferEnd_)) {
                                            if (r.buffered().length) {
                                                i = r.buffered().end(0) - this.timestampOffset
                                            }
                                            if (r.seeking()) {
                                                i = Math.max(i, r.currentTime() - this.timestampOffset)
                                            }
                                            i *= 1e3;
                                            i += this.basePtsOffset_
                                        } else {
                                            i = this.videoBufferEnd_ + .1
                                        }
                                        var l = o.length;
                                        if (l && o[l - 1].pts >= i) {
                                            while (--l) {
                                                var c = o[l];
                                                if (c.pts > i) {
                                                    continue
                                                }
                                                if (c.keyFrame || c.metaDataTag) {
                                                    break
                                                }
                                            }
                                            while (l) {
                                                var h = o[l - 1];
                                                if (!h.metaDataTag) {
                                                    break
                                                }
                                                l--
                                            }
                                        }
                                        var p = o.slice(l);
                                        var d = undefined;
                                        if (isNaN(this.audioBufferEnd_)) {
                                            d = i
                                        } else {
                                            d = this.audioBufferEnd_ + .1
                                        }
                                        if (p.length) {
                                            d = Math.min(d, p[0].pts)
                                        }
                                        l = 0;
                                        while (l < u.length) {
                                            if (u[l].pts >= d) {
                                                break
                                            }
                                            l++
                                        }
                                        var v = u.slice(l);
                                        if (v.length) {
                                            this.audioBufferEnd_ = v[v.length - 1].pts
                                        }
                                        if (p.length) {
                                            this.videoBufferEnd_ = p[p.length - 1].pts
                                        }
                                        var m = this.getOrderedTags_(p, v);
                                        if (m.length === 0) {
                                            return
                                        }
                                        if (m[0].pts < i && r.seeking()) {
                                            var g = 1 / 30;
                                            var y = r.currentTime();
                                            var b = (i - m[0].pts) / 1e3;
                                            var w = y - b;
                                            if (w < g) {
                                                w = 0
                                            }
                                            try {
                                                this.mediaSource_.swfObj.vjs_adjustCurrentTime(w)
                                            } catch (E) {}
                                        }
                                        for (var S = 0; S < m.length; S++) {
                                            n += m[S].bytes.byteLength
                                        }
                                        s = new Uint8Array(n);
                                        for (var S = 0, x = 0; S < m.length; S++) {
                                            s.set(m[S].bytes, x);
                                            x += m[S].bytes.byteLength
                                        }
                                        return s
                                    }
                                }, {
                                    key: "getOrderedTags_",
                                    value: function(t, n) {
                                        var r = undefined;
                                        var i = [];
                                        while (t.length || n.length) {
                                            if (!t.length) {
                                                r = n.shift()
                                            } else if (!n.length) {
                                                r = t.shift()
                                            } else if (n[0].dts < t[0].dts) {
                                                r = n.shift()
                                            } else {
                                                r = t.shift()
                                            }
                                            i.push(r)
                                        }
                                        return i
                                    }
                                }, {
                                    key: "onHlsReset_",
                                    value: function() {
                                        this.transmuxer_.postMessage({
                                            action: "resetCaptions"
                                        })
                                    }
                                }]);
                                return t
                            }(p["default"].EventTarget);
                            r["default"] = O;
                            t.exports = r["default"]
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./add-text-track-data": 64,
                        "./create-text-tracks-if-necessary": 66,
                        "./flash-constants": 67,
                        "./flash-transmuxer-worker": 70,
                        "./remove-cues-from-track": 72,
                        "global/window": 32,
                        "mux.js/lib/flv": 46,
                        webworkify: 76
                    }],
                    70: [function(e, t, n) {
                        "use strict";

                        function i(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }

                        function s(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            function e(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || false;
                                    r.configurable = true;
                                    if ("value" in r)
                                        r.writable = true;
                                    Object.defineProperty(e, r.key, r)
                                }
                            }
                            return function(t, n, r) {
                                if (n)
                                    e(t.prototype, n);
                                if (r)
                                    e(t, r);
                                return t
                            }
                        }();
                        var o = e("global/window");
                        var u = i(o);
                        var a = e("mux.js/lib/flv");
                        var f = i(a);
                        var l = function(t) {
                            t.on("data", function(e) {
                                u["default"].postMessage({
                                    action: "data",
                                    segment: e
                                })
                            });
                            t.on("done", function(e) {
                                u["default"].postMessage({
                                    action: "done"
                                })
                            })
                        };
                        var c = function() {
                            function e(t) {
                                s(this, e);
                                this.options = t || {};
                                this.init()
                            }
                            r(e, [{
                                key: "init",
                                value: function() {
                                    if (this.transmuxer) {
                                        this.transmuxer.dispose()
                                    }
                                    this.transmuxer = new f["default"].Transmuxer(this.options);
                                    l(this.transmuxer)
                                }
                            }, {
                                key: "push",
                                value: function(t) {
                                    var n = new Uint8Array(t.data, t.byteOffset, t.byteLength);
                                    this.transmuxer.push(n)
                                }
                            }, {
                                key: "reset",
                                value: function() {
                                    this.init()
                                }
                            }, {
                                key: "flush",
                                value: function() {
                                    this.transmuxer.flush()
                                }
                            }, {
                                key: "resetCaptions",
                                value: function() {
                                    this.transmuxer.resetCaptions()
                                }
                            }]);
                            return e
                        }();
                        var h = function(t) {
                            t.onmessage = function(e) {
                                if (e.data.action === "init" && e.data.options) {
                                    this.messageHandlers = new c(e.data.options);
                                    return
                                }
                                if (!this.messageHandlers) {
                                    this.messageHandlers = new c
                                }
                                if (e.data && e.data.action && e.data.action !== "init") {
                                    if (this.messageHandlers[e.data.action]) {
                                        this.messageHandlers[e.data.action](e.data)
                                    }
                                }
                            }
                        };
                        n["default"] = function(e) {
                            return new h(e)
                        };
                        t.exports = n["default"]
                    }, {
                        "global/window": 32,
                        "mux.js/lib/flv": 46
                    }],
                    71: [function(e, t, r) {
                        (function(n) {
                            "use strict";

                            function o(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function a(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }

                            function f(e, t) {
                                if (typeof t !== "function" && t !== null) {
                                    throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                                }
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: false,
                                        writable: true,
                                        configurable: true
                                    }
                                });
                                if (t)
                                    Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var s = function(t, n, r) {
                                var i = true;
                                e: while (i) {
                                    var s = t,
                                        o = n,
                                        u = r;
                                    i = false;
                                    if (s === null)
                                        s = Function.prototype;
                                    var a = Object.getOwnPropertyDescriptor(s, o);
                                    if (a === undefined) {
                                        var f = Object.getPrototypeOf(s);
                                        if (f === null) {
                                            return undefined
                                        } else {
                                            t = f;
                                            n = o;
                                            r = u;
                                            i = true;
                                            a = f = undefined;
                                            continue e
                                        }
                                    } else if ("value" in a) {
                                        return a.value
                                    } else {
                                        var l = a.get;
                                        if (l === undefined) {
                                            return undefined
                                        }
                                        return l.call(u)
                                    }
                                }
                            };
                            var l = e("global/window");
                            var c = o(l);
                            var h = e("global/document");
                            var p = o(h);
                            var d = typeof window !== "undefined" ? window["videojs"] : typeof n !== "undefined" ? n["videojs"] : null;
                            var v = o(d);
                            var m = e("./virtual-source-buffer");
                            var g = o(m);
                            var y = e("./add-text-track-data");
                            var b = e("./codec-utils");
                            var w = function(e) {
                                function t() {
                                    var e = this;
                                    a(this, t);
                                    s(Object.getPrototypeOf(t.prototype), "constructor", this).call(this);
                                    var n = undefined;
                                    this.nativeMediaSource_ = new c["default"].MediaSource;
                                    for (n in this.nativeMediaSource_) {
                                        if (!(n in t.prototype) && typeof this.nativeMediaSource_[n] === "function") {
                                            this[n] = this.nativeMediaSource_[n].bind(this.nativeMediaSource_)
                                        }
                                    }
                                    this.duration_ = NaN;
                                    Object.defineProperty(this, "duration", {
                                        get: function() {
                                            if (this.duration_ === Infinity) {
                                                return this.duration_
                                            }
                                            return this.nativeMediaSource_.duration
                                        },
                                        set: function(t) {
                                            this.duration_ = t;
                                            if (t !== Infinity) {
                                                this.nativeMediaSource_.duration = t;
                                                return
                                            }
                                        }
                                    });
                                    Object.defineProperty(this, "seekable", {
                                        get: function() {
                                            if (this.duration_ === Infinity) {
                                                return v["default"].createTimeRanges([
                                                    [0, this.nativeMediaSource_.duration]
                                                ])
                                            }
                                            return this.nativeMediaSource_.seekable
                                        }
                                    });
                                    Object.defineProperty(this, "readyState", {
                                        get: function() {
                                            return this.nativeMediaSource_.readyState
                                        }
                                    });
                                    Object.defineProperty(this, "activeSourceBuffers", {
                                        get: function() {
                                            return this.activeSourceBuffers_
                                        }
                                    });
                                    this.sourceBuffers = [];
                                    this.activeSourceBuffers_ = [];
                                    this.updateActiveSourceBuffers_ = function() {
                                        e.activeSourceBuffers_.length = 0;
                                        if (e.sourceBuffers.length === 1) {
                                            var t = e.sourceBuffers[0];
                                            t.appendAudioInitSegment_ = true;
                                            t.audioDisabled_ = !t.audioCodec_;
                                            e.activeSourceBuffers_.push(t);
                                            return
                                        }
                                        var n = false;
                                        var r = true;
                                        for (var i = 0; i < e.player_.audioTracks().length; i++) {
                                            var s = e.player_.audioTracks()[i];
                                            if (s.enabled && s.kind !== "main") {
                                                n = true;
                                                r = false;
                                                break
                                            }
                                        }
                                        e.sourceBuffers.forEach(function(t) {
                                            t.appendAudioInitSegment_ = true;
                                            if (t.videoCodec_ && t.audioCodec_) {
                                                t.audioDisabled_ = n
                                            } else if (t.videoCodec_ && !t.audioCodec_) {
                                                t.audioDisabled_ = true;
                                                r = false
                                            } else if (!t.videoCodec_ && t.audioCodec_) {
                                                t.audioDisabled_ = r;
                                                if (r) {
                                                    return
                                                }
                                            }
                                            e.activeSourceBuffers_.push(t)
                                        })
                                    };
                                    this.onPlayerMediachange_ = function() {
                                        e.sourceBuffers.forEach(function(e) {
                                            e.appendAudioInitSegment_ = true
                                        })
                                    };
                                    this.onHlsReset_ = function() {
                                        e.sourceBuffers.forEach(function(e) {
                                            if (e.transmuxer_) {
                                                e.transmuxer_.postMessage({
                                                    action: "resetCaptions"
                                                })
                                            }
                                        })
                                    };
                                    this.onHlsSegmentTimeMapping_ = function(t) {
                                        e.sourceBuffers.forEach(function(e) {
                                            return e.timeMapping_ = t.mapping
                                        })
                                    };
                                    ["sourceopen", "sourceclose", "sourceended"].forEach(function(e) {
                                        this.nativeMediaSource_.addEventListener(e, this.trigger.bind(this))
                                    }, this);
                                    this.on("sourceopen", function(t) {
                                        var n = p["default"].querySelector('[src="' + e.url_ + '"]');
                                        if (!n) {
                                            return
                                        }
                                        e.player_ = (0,
                                            v["default"])(n.parentNode);
                                        e.player_.tech_.on("hls-reset", e.onHlsReset_);
                                        e.player_.tech_.on("hls-segment-time-mapping", e.onHlsSegmentTimeMapping_);
                                        if (e.player_.audioTracks && e.player_.audioTracks()) {
                                            e.player_.audioTracks().on("change", e.updateActiveSourceBuffers_);
                                            e.player_.audioTracks().on("addtrack", e.updateActiveSourceBuffers_);
                                            e.player_.audioTracks().on("removetrack", e.updateActiveSourceBuffers_)
                                        }
                                        e.player_.on("mediachange", e.onPlayerMediachange_)
                                    });
                                    this.on("sourceended", function(t) {
                                        var n = (0,
                                            y.durationOfVideo)(e.duration);
                                        for (var r = 0; r < e.sourceBuffers.length; r++) {
                                            var i = e.sourceBuffers[r];
                                            var s = i.metadataTrack_ && i.metadataTrack_.cues;
                                            if (s && s.length) {
                                                s[s.length - 1].endTime = n
                                            }
                                        }
                                    });
                                    this.on("sourceclose", function(e) {
                                        this.sourceBuffers.forEach(function(e) {
                                            if (e.transmuxer_) {
                                                e.transmuxer_.terminate()
                                            }
                                        });
                                        this.sourceBuffers.length = 0;
                                        if (!this.player_) {
                                            return
                                        }
                                        if (this.player_.audioTracks && this.player_.audioTracks()) {
                                            this.player_.audioTracks().off("change", this.updateActiveSourceBuffers_);
                                            this.player_.audioTracks().off("addtrack", this.updateActiveSourceBuffers_);
                                            this.player_.audioTracks().off("removetrack", this.updateActiveSourceBuffers_)
                                        }
                                        if (this.player_.el_) {
                                            this.player_.off("mediachange", this.onPlayerMediachange_);
                                            this.player_.tech_.off("hls-reset", this.onHlsReset_);
                                            this.player_.tech_.off("hls-segment-time-mapping", this.onHlsSegmentTimeMapping_)
                                        }
                                    })
                                }
                                f(t, e);
                                i(t, [{
                                    key: "addSeekableRange_",
                                    value: function(t, n) {
                                        var r = undefined;
                                        if (this.duration !== Infinity) {
                                            r = new Error("MediaSource.addSeekableRange() can only be invoked " + "when the duration is Infinity");
                                            r.name = "InvalidStateError";
                                            r.code = 11;
                                            throw r
                                        }
                                        if (n > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {
                                            this.nativeMediaSource_.duration = n
                                        }
                                    }
                                }, {
                                    key: "addSourceBuffer",
                                    value: function(t) {
                                        var n = undefined;
                                        var r = (0,
                                            b.parseContentType)(t);
                                        if (/^(video|audio)\/mp2t$/i.test(r.type)) {
                                            var i = [];
                                            if (r.parameters && r.parameters.codecs) {
                                                i = r.parameters.codecs.split(",");
                                                i = (0,
                                                    b.translateLegacyCodecs)(i);
                                                i = i.filter(function(e) {
                                                    return (0,
                                                        b.isAudioCodec)(e) || (0,
                                                        b.isVideoCodec)(e)
                                                })
                                            }
                                            if (i.length === 0) {
                                                i = ["avc1.4d400d", "mp4a.40.2"]
                                            }
                                            n = new g["default"](this, i);
                                            if (this.sourceBuffers.length !== 0) {
                                                this.sourceBuffers[0].createRealSourceBuffers_();
                                                n.createRealSourceBuffers_();
                                                this.sourceBuffers[0].audioDisabled_ = true
                                            }
                                        } else {
                                            n = this.nativeMediaSource_.addSourceBuffer(t)
                                        }
                                        this.sourceBuffers.push(n);
                                        return n
                                    }
                                }]);
                                return t
                            }(v["default"].EventTarget);
                            r["default"] = w;
                            t.exports = r["default"]
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./add-text-track-data": 64,
                        "./codec-utils": 65,
                        "./virtual-source-buffer": 75,
                        "global/document": 31,
                        "global/window": 32
                    }],
                    72: [function(e, t, n) {
                        "use strict";
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function(t, n, r) {
                            var i = undefined;
                            var s = undefined;
                            if (!r) {
                                return
                            }
                            if (!r.cues) {
                                return
                            }
                            i = r.cues.length;
                            while (i--) {
                                s = r.cues[i];
                                if (s.startTime <= n && s.endTime >= t) {
                                    r.removeCue(s)
                                }
                            }
                        };
                        n["default"] = r;
                        t.exports = n["default"]
                    }, {}],
                    73: [function(e, t, n) {
                        "use strict";

                        function i(e) {
                            return e && e.__esModule ? e : {
                                "default": e
                            }
                        }

                        function s(e, t) {
                            if (!(e instanceof t)) {
                                throw new TypeError("Cannot call a class as a function")
                            }
                        }
                        Object.defineProperty(n, "__esModule", {
                            value: true
                        });
                        var r = function() {
                            function e(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.enumerable = r.enumerable || false;
                                    r.configurable = true;
                                    if ("value" in r)
                                        r.writable = true;
                                    Object.defineProperty(e, r.key, r)
                                }
                            }
                            return function(t, n, r) {
                                if (n)
                                    e(t.prototype, n);
                                if (r)
                                    e(t, r);
                                return t
                            }
                        }();
                        var o = e("global/window");
                        var u = i(o);
                        var a = e("mux.js/lib/mp4");
                        var f = i(a);
                        var l = function(t) {
                            t.on("data", function(e) {
                                var t = e.initSegment;
                                e.initSegment = {
                                    data: t.buffer,
                                    byteOffset: t.byteOffset,
                                    byteLength: t.byteLength
                                };
                                var n = e.data;
                                e.data = n.buffer;
                                u["default"].postMessage({
                                    action: "data",
                                    segment: e,
                                    byteOffset: n.byteOffset,
                                    byteLength: n.byteLength
                                }, [e.data])
                            });
                            if (t.captionStream) {
                                t.captionStream.on("data", function(e) {
                                    u["default"].postMessage({
                                        action: "caption",
                                        data: e
                                    })
                                })
                            }
                            t.on("done", function(e) {
                                u["default"].postMessage({
                                    action: "done"
                                })
                            });
                            t.on("gopInfo", function(e) {
                                u["default"].postMessage({
                                    action: "gopInfo",
                                    gopInfo: e
                                })
                            })
                        };
                        var c = function() {
                            function e(t) {
                                s(this, e);
                                this.options = t || {};
                                this.init()
                            }
                            r(e, [{
                                key: "init",
                                value: function() {
                                    if (this.transmuxer) {
                                        this.transmuxer.dispose()
                                    }
                                    this.transmuxer = new f["default"].Transmuxer(this.options);
                                    l(this.transmuxer)
                                }
                            }, {
                                key: "push",
                                value: function(t) {
                                    var n = new Uint8Array(t.data, t.byteOffset, t.byteLength);
                                    this.transmuxer.push(n)
                                }
                            }, {
                                key: "reset",
                                value: function() {
                                    this.init()
                                }
                            }, {
                                key: "setTimestampOffset",
                                value: function(t) {
                                    var n = t.timestampOffset || 0;
                                    this.transmuxer.setBaseMediaDecodeTime(Math.round(n * 9e4))
                                }
                            }, {
                                key: "setAudioAppendStart",
                                value: function(t) {
                                    this.transmuxer.setAudioAppendStart(Math.ceil(t.appendStart * 9e4))
                                }
                            }, {
                                key: "flush",
                                value: function(t) {
                                    this.transmuxer.flush()
                                }
                            }, {
                                key: "resetCaptions",
                                value: function() {
                                    this.transmuxer.resetCaptions()
                                }
                            }, {
                                key: "alignGopsWith",
                                value: function(t) {
                                    this.transmuxer.alignGopsWith(t.gopsToAlignWith.slice())
                                }
                            }]);
                            return e
                        }();
                        var h = function(t) {
                            t.onmessage = function(e) {
                                if (e.data.action === "init" && e.data.options) {
                                    this.messageHandlers = new c(e.data.options);
                                    return
                                }
                                if (!this.messageHandlers) {
                                    this.messageHandlers = new c
                                }
                                if (e.data && e.data.action && e.data.action !== "init") {
                                    if (this.messageHandlers[e.data.action]) {
                                        this.messageHandlers[e.data.action](e.data)
                                    }
                                }
                            }
                        };
                        n["default"] = function(e) {
                            return new h(e)
                        };
                        t.exports = n["default"]
                    }, {
                        "global/window": 32,
                        "mux.js/lib/mp4": 55
                    }],
                    74: [function(e, t, r) {
                        (function(t) {
                            "use strict";

                            function n(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var i = e("global/window");
                            var s = n(i);
                            var o = e("./flash-media-source");
                            var u = n(o);
                            var a = e("./html-media-source");
                            var f = n(a);
                            var l = typeof window !== "undefined" ? window["videojs"] : typeof t !== "undefined" ? t["videojs"] : null;
                            var c = n(l);
                            var h = 0;
                            var p = {
                                mode: "auto"
                            };
                            c["default"].mediaSources = {};
                            var d = function(t, n) {
                                var r = c["default"].mediaSources[t];
                                if (r) {
                                    r.trigger({
                                        type: "sourceopen",
                                        swfId: n
                                    })
                                } else {
                                    throw new Error("Media Source not found (Video.js)")
                                }
                            };
                            var v = function() {
                                return !!s["default"].MediaSource && !!s["default"].MediaSource.isTypeSupported && s["default"].MediaSource.isTypeSupported('video/mp4;codecs="avc1.4d400d,mp4a.40.2"')
                            };
                            var m = function(t) {
                                var n = c["default"].mergeOptions(p, t);
                                this.MediaSource = {
                                    open: d,
                                    supportsNativeMediaSources: v
                                };
                                if (n.mode === "html5" || n.mode === "auto" && v()) {
                                    return new f["default"]
                                } else if (c["default"].getTech("Flash")) {
                                    return new u["default"]
                                }
                                throw new Error("Cannot use Flash or Html5 to create a MediaSource for this video")
                            };
                            r.MediaSource = m;
                            m.open = d;
                            m.supportsNativeMediaSources = v;
                            var g = {
                                createObjectURL: function(t) {
                                    var n = "blob:vjs-media-source/";
                                    var r = undefined;
                                    if (t instanceof f["default"]) {
                                        r = s["default"].URL.createObjectURL(t.nativeMediaSource_);
                                        t.url_ = r;
                                        return r
                                    }
                                    if (!(t instanceof u["default"])) {
                                        r = s["default"].URL.createObjectURL(t);
                                        t.url_ = r;
                                        return r
                                    }
                                    r = n + h;
                                    h++;
                                    c["default"].mediaSources[r] = t;
                                    return r
                                }
                            };
                            r.URL = g;
                            c["default"].MediaSource = m;
                            c["default"].URL = g
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./flash-media-source": 68,
                        "./html-media-source": 71,
                        "global/window": 32
                    }],
                    75: [function(e, t, r) {
                        (function(t) {
                            "use strict";

                            function s(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function o(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }

                            function a(e, t) {
                                if (typeof t !== "function" && t !== null) {
                                    throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                                }
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: false,
                                        writable: true,
                                        configurable: true
                                    }
                                });
                                if (t)
                                    Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                            }
                            Object.defineProperty(r, "__esModule", {
                                value: true
                            });
                            var n = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var i = function(t, n, r) {
                                var i = true;
                                e: while (i) {
                                    var s = t,
                                        o = n,
                                        u = r;
                                    i = false;
                                    if (s === null)
                                        s = Function.prototype;
                                    var a = Object.getOwnPropertyDescriptor(s, o);
                                    if (a === undefined) {
                                        var f = Object.getPrototypeOf(s);
                                        if (f === null) {
                                            return undefined
                                        } else {
                                            t = f;
                                            n = o;
                                            r = u;
                                            i = true;
                                            a = f = undefined;
                                            continue e
                                        }
                                    } else if ("value" in a) {
                                        return a.value
                                    } else {
                                        var l = a.get;
                                        if (l === undefined) {
                                            return undefined
                                        }
                                        return l.call(u)
                                    }
                                }
                            };
                            var f = typeof window !== "undefined" ? window["videojs"] : typeof t !== "undefined" ? t["videojs"] : null;
                            var l = s(f);
                            var c = e("./create-text-tracks-if-necessary");
                            var h = s(c);
                            var p = e("./remove-cues-from-track");
                            var d = s(p);
                            var v = e("./add-text-track-data");
                            var m = e("webworkify");
                            var g = s(m);
                            var y = e("./transmuxer-worker");
                            var b = s(y);
                            var w = e("./codec-utils");
                            var E = function(t, n) {
                                var r = t.addSourceBuffer(n);
                                var i = Object.create(null);
                                i.updating = false;
                                i.realBuffer_ = r;
                                var s = function(t) {
                                    if (typeof r[t] === "function") {
                                        i[t] = function() {
                                            return r[t].apply(r, arguments)
                                        }
                                    } else if (typeof i[t] === "undefined") {
                                        Object.defineProperty(i, t, {
                                            get: function() {
                                                return r[t]
                                            },
                                            set: function(n) {
                                                return r[t] = n
                                            }
                                        })
                                    }
                                };
                                for (var o in r) {
                                    s(o)
                                }
                                return i
                            };
                            var S = function(t, n, r) {
                                if (!n || !t.length) {
                                    return []
                                }
                                var i = Math.ceil((n.currentTime() - r + 3) * 9e4);
                                var s = undefined;
                                for (s = 0; s < t.length; s++) {
                                    if (t[s].pts > i) {
                                        break
                                    }
                                }
                                return t.slice(s)
                            };
                            r.gopsSafeToAlignWith = S;
                            var x = function(t, n, r) {
                                if (!n.length) {
                                    return t
                                }
                                if (r) {
                                    return n.slice()
                                }
                                var i = n[0].pts;
                                var s = 0;
                                for (s; s < t.length; s++) {
                                    if (t[s].pts >= i) {
                                        break
                                    }
                                }
                                return t.slice(0, s).concat(n)
                            };
                            r.updateGopBuffer = x;
                            var T = function(t, n, r, i) {
                                var s = Math.ceil((n - i) * 9e4);
                                var o = Math.ceil((r - i) * 9e4);
                                var u = t.slice();
                                var a = t.length;
                                while (a--) {
                                    if (t[a].pts <= o) {
                                        break
                                    }
                                }
                                if (a === -1) {
                                    return u
                                }
                                var f = a + 1;
                                while (f--) {
                                    if (t[f].pts <= s) {
                                        break
                                    }
                                }
                                f = Math.max(f, 0);
                                u.splice(f, a - f + 1);
                                return u
                            };
                            r.removeGopBuffer = T;
                            var N = function(e) {
                                function t(e, n) {
                                    var r = this;
                                    o(this, t);
                                    i(Object.getPrototypeOf(t.prototype), "constructor", this).call(this, l["default"].EventTarget);
                                    this.timestampOffset_ = 0;
                                    this.pendingBuffers_ = [];
                                    this.bufferUpdating_ = false;
                                    this.mediaSource_ = e;
                                    this.codecs_ = n;
                                    this.audioCodec_ = null;
                                    this.videoCodec_ = null;
                                    this.audioDisabled_ = false;
                                    this.appendAudioInitSegment_ = true;
                                    this.gopBuffer_ = [];
                                    this.timeMapping_ = 0;
                                    this.safeAppend_ = l["default"].browser.IE_VERSION >= 11;
                                    var s = {
                                        remux: false,
                                        alignGopsAtEnd: this.safeAppend_
                                    };
                                    this.codecs_.forEach(function(e) {
                                        if ((0,
                                                w.isAudioCodec)(e)) {
                                            r.audioCodec_ = e
                                        } else if ((0,
                                                w.isVideoCodec)(e)) {
                                            r.videoCodec_ = e
                                        }
                                    });
                                    this.transmuxer_ = (0,
                                        g["default"])(b["default"]);
                                    this.transmuxer_.postMessage({
                                        action: "init",
                                        options: s
                                    });
                                    this.transmuxer_.onmessage = function(e) {
                                        if (e.data.action === "data") {
                                            return r.data_(e)
                                        }
                                        if (e.data.action === "done") {
                                            return r.done_(e)
                                        }
                                        if (e.data.action === "gopInfo") {
                                            return r.appendGopInfo_(e)
                                        }
                                    };
                                    Object.defineProperty(this, "timestampOffset", {
                                        get: function() {
                                            return this.timestampOffset_
                                        },
                                        set: function(t) {
                                            if (typeof t === "number" && t >= 0) {
                                                this.timestampOffset_ = t;
                                                this.appendAudioInitSegment_ = true;
                                                this.gopBuffer_.length = 0;
                                                this.timeMapping_ = 0;
                                                this.transmuxer_.postMessage({
                                                    action: "setTimestampOffset",
                                                    timestampOffset: t
                                                })
                                            }
                                        }
                                    });
                                    Object.defineProperty(this, "appendWindowStart", {
                                        get: function() {
                                            return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart
                                        },
                                        set: function(t) {
                                            if (this.videoBuffer_) {
                                                this.videoBuffer_.appendWindowStart = t
                                            }
                                            if (this.audioBuffer_) {
                                                this.audioBuffer_.appendWindowStart = t
                                            }
                                        }
                                    });
                                    Object.defineProperty(this, "updating", {
                                        get: function() {
                                            return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating)
                                        }
                                    });
                                    Object.defineProperty(this, "buffered", {
                                        get: function() {
                                            var t = null;
                                            var n = null;
                                            var r = 0;
                                            var i = [];
                                            var s = [];
                                            if (!this.videoBuffer_ && !this.audioBuffer_) {
                                                return l["default"].createTimeRange()
                                            }
                                            if (!this.videoBuffer_) {
                                                return this.audioBuffer_.buffered
                                            }
                                            if (!this.audioBuffer_) {
                                                return this.videoBuffer_.buffered
                                            }
                                            if (this.audioDisabled_) {
                                                return this.videoBuffer_.buffered
                                            }
                                            if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {
                                                return l["default"].createTimeRange()
                                            }
                                            var o = this.videoBuffer_.buffered;
                                            var u = this.audioBuffer_.buffered;
                                            var a = o.length;
                                            while (a--) {
                                                i.push({
                                                    time: o.start(a),
                                                    type: "start"
                                                });
                                                i.push({
                                                    time: o.end(a),
                                                    type: "end"
                                                })
                                            }
                                            a = u.length;
                                            while (a--) {
                                                i.push({
                                                    time: u.start(a),
                                                    type: "start"
                                                });
                                                i.push({
                                                    time: u.end(a),
                                                    type: "end"
                                                })
                                            }
                                            i.sort(function(e, t) {
                                                return e.time - t.time
                                            });
                                            for (a = 0; a < i.length; a++) {
                                                if (i[a].type === "start") {
                                                    r++;
                                                    if (r === 2) {
                                                        t = i[a].time
                                                    }
                                                } else if (i[a].type === "end") {
                                                    r--;
                                                    if (r === 1) {
                                                        n = i[a].time
                                                    }
                                                }
                                                if (t !== null && n !== null) {
                                                    s.push([t, n]);
                                                    t = null;
                                                    n = null
                                                }
                                            }
                                            return l["default"].createTimeRanges(s)
                                        }
                                    })
                                }
                                a(t, e);
                                n(t, [{
                                    key: "data_",
                                    value: function(t) {
                                        var n = t.data.segment;
                                        n.data = new Uint8Array(n.data, t.data.byteOffset, t.data.byteLength);
                                        n.initSegment = new Uint8Array(n.initSegment.data, n.initSegment.byteOffset, n.initSegment.byteLength);
                                        (0,
                                            h["default"])(this, this.mediaSource_, n);
                                        this.pendingBuffers_.push(n);
                                        return
                                    }
                                }, {
                                    key: "done_",
                                    value: function(t) {
                                        if (this.mediaSource_.readyState === "closed") {
                                            this.pendingBuffers_.length = 0;
                                            return
                                        }
                                        this.processPendingSegments_();
                                        return
                                    }
                                }, {
                                    key: "createRealSourceBuffers_",
                                    value: function() {
                                        var t = this;
                                        var n = ["audio", "video"];
                                        n.forEach(function(e) {
                                            if (!t[e + "Codec_"]) {
                                                return
                                            }
                                            if (t[e + "Buffer_"]) {
                                                return
                                            }
                                            var r = null;
                                            if (t.mediaSource_[e + "Buffer_"]) {
                                                r = t.mediaSource_[e + "Buffer_"];
                                                r.updating = false
                                            } else {
                                                var i = e + "Codec_";
                                                var s = e + '/mp4;codecs="' + t[i] + '"';
                                                r = E(t.mediaSource_.nativeMediaSource_, s);
                                                t.mediaSource_[e + "Buffer_"] = r
                                            }
                                            t[e + "Buffer_"] = r;
                                            ["update", "updatestart", "updateend"].forEach(function(i) {
                                                r.addEventListener(i, function() {
                                                    if (e === "audio" && t.audioDisabled_) {
                                                        return
                                                    }
                                                    if (i === "updateend") {
                                                        t[e + "Buffer_"].updating = false
                                                    }
                                                    var r = n.every(function(n) {
                                                        if (n === "audio" && t.audioDisabled_) {
                                                            return true
                                                        }
                                                        if (e !== n && t[n + "Buffer_"] && t[n + "Buffer_"].updating) {
                                                            return false
                                                        }
                                                        return true
                                                    });
                                                    if (r) {
                                                        return t.trigger(i)
                                                    }
                                                })
                                            })
                                        })
                                    }
                                }, {
                                    key: "appendBuffer",
                                    value: function(t) {
                                        this.bufferUpdating_ = true;
                                        if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {
                                            var n = this.audioBuffer_.buffered;
                                            this.transmuxer_.postMessage({
                                                action: "setAudioAppendStart",
                                                appendStart: n.end(n.length - 1)
                                            })
                                        }
                                        if (this.videoBuffer_) {
                                            this.transmuxer_.postMessage({
                                                action: "alignGopsWith",
                                                gopsToAlignWith: S(this.gopBuffer_, this.mediaSource_.player_, this.timeMapping_)
                                            })
                                        }
                                        this.transmuxer_.postMessage({
                                            action: "push",
                                            data: t.buffer,
                                            byteOffset: t.byteOffset,
                                            byteLength: t.byteLength
                                        }, [t.buffer]);
                                        this.transmuxer_.postMessage({
                                            action: "flush"
                                        })
                                    }
                                }, {
                                    key: "appendGopInfo_",
                                    value: function(t) {
                                        this.gopBuffer_ = x(this.gopBuffer_, t.data.gopInfo, this.safeAppend_)
                                    }
                                }, {
                                    key: "remove",
                                    value: function(t, n) {
                                        if (this.videoBuffer_) {
                                            this.videoBuffer_.updating = true;
                                            this.videoBuffer_.remove(t, n);
                                            this.gopBuffer_ = T(this.gopBuffer_, t, n, this.timeMapping_)
                                        }
                                        if (!this.audioDisabled_ && this.audioBuffer_) {
                                            this.audioBuffer_.updating = true;
                                            this.audioBuffer_.remove(t, n)
                                        }
                                        (0,
                                            d["default"])(t, n, this.metadataTrack_);
                                        if (this.inbandTextTracks_) {
                                            for (var r in this.inbandTextTracks_) {
                                                (0,
                                                    d["default"])(t, n, this.inbandTextTracks_[r])
                                            }
                                        }
                                    }
                                }, {
                                    key: "processPendingSegments_",
                                    value: function() {
                                        var t = {
                                            video: {
                                                segments: [],
                                                bytes: 0
                                            },
                                            audio: {
                                                segments: [],
                                                bytes: 0
                                            },
                                            captions: [],
                                            metadata: []
                                        };
                                        t = this.pendingBuffers_.reduce(function(e, t) {
                                            var n = t.type;
                                            var r = t.data;
                                            var i = t.initSegment;
                                            e[n].segments.push(r);
                                            e[n].bytes += r.byteLength;
                                            e[n].initSegment = i;
                                            if (t.captions) {
                                                e.captions = e.captions.concat(t.captions)
                                            }
                                            if (t.info) {
                                                e[n].info = t.info
                                            }
                                            if (t.metadata) {
                                                e.metadata = e.metadata.concat(t.metadata)
                                            }
                                            return e
                                        }, t);
                                        if (!this.videoBuffer_ && !this.audioBuffer_) {
                                            if (t.video.bytes === 0) {
                                                this.videoCodec_ = null
                                            }
                                            if (t.audio.bytes === 0) {
                                                this.audioCodec_ = null
                                            }
                                            this.createRealSourceBuffers_()
                                        }
                                        if (t.audio.info) {
                                            this.mediaSource_.trigger({
                                                type: "audioinfo",
                                                info: t.audio.info
                                            })
                                        }
                                        if (t.video.info) {
                                            this.mediaSource_.trigger({
                                                type: "videoinfo",
                                                info: t.video.info
                                            })
                                        }
                                        if (this.appendAudioInitSegment_) {
                                            if (!this.audioDisabled_ && this.audioBuffer_) {
                                                t.audio.segments.unshift(t.audio.initSegment);
                                                t.audio.bytes += t.audio.initSegment.byteLength
                                            }
                                            this.appendAudioInitSegment_ = false
                                        }
                                        var n = false;
                                        if (this.videoBuffer_ && t.video.bytes) {
                                            t.video.segments.unshift(t.video.initSegment);
                                            t.video.bytes += t.video.initSegment.byteLength;
                                            this.concatAndAppendSegments_(t.video, this.videoBuffer_);
                                            (0,
                                                v.addTextTrackData)(this, t.captions, t.metadata)
                                        } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {
                                            n = true
                                        }
                                        if (!this.audioDisabled_ && this.audioBuffer_) {
                                            this.concatAndAppendSegments_(t.audio, this.audioBuffer_)
                                        }
                                        this.pendingBuffers_.length = 0;
                                        if (n) {
                                            this.trigger("updateend")
                                        }
                                        this.bufferUpdating_ = false
                                    }
                                }, {
                                    key: "concatAndAppendSegments_",
                                    value: function(t, n) {
                                        var r = 0;
                                        var i = undefined;
                                        if (t.bytes) {
                                            i = new Uint8Array(t.bytes);
                                            t.segments.forEach(function(e) {
                                                i.set(e, r);
                                                r += e.byteLength
                                            });
                                            try {
                                                n.updating = true;
                                                n.appendBuffer(i)
                                            } catch (s) {
                                                if (this.mediaSource_.player_) {
                                                    this.mediaSource_.player_.error({
                                                        code: -3,
                                                        type: "APPEND_BUFFER_ERR",
                                                        message: s.message,
                                                        originalError: s
                                                    })
                                                }
                                            }
                                        }
                                    }
                                }, {
                                    key: "abort",
                                    value: function() {
                                        if (this.videoBuffer_) {
                                            this.videoBuffer_.abort()
                                        }
                                        if (!this.audioDisabled_ && this.audioBuffer_) {
                                            this.audioBuffer_.abort()
                                        }
                                        if (this.transmuxer_) {
                                            this.transmuxer_.postMessage({
                                                action: "reset"
                                            })
                                        }
                                        this.pendingBuffers_.length = 0;
                                        this.bufferUpdating_ = false
                                    }
                                }]);
                                return t
                            }(l["default"].EventTarget);
                            r["default"] = N
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./add-text-track-data": 64,
                        "./codec-utils": 65,
                        "./create-text-tracks-if-necessary": 66,
                        "./remove-cues-from-track": 72,
                        "./transmuxer-worker": 73,
                        webworkify: 76
                    }],
                    76: [function(e, t, n) {
                        var r = arguments[3];
                        var i = arguments[4];
                        var s = arguments[5];
                        var o = JSON.stringify;
                        t.exports = function(e) {
                            var t = [];
                            var n;
                            var u = Object.keys(s);
                            for (var a = 0, f = u.length; a < f; a++) {
                                var l = u[a];
                                if (s[l].exports === e) {
                                    n = l;
                                    break
                                }
                            }
                            if (!n) {
                                n = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);
                                var c = {};
                                for (var a = 0, f = u.length; a < f; a++) {
                                    var l = u[a];
                                    c[l] = l
                                }
                                i[n] = [Function(["require", "module", "exports"], "(" + e + ")(self)"), c]
                            }
                            var h = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);
                            var p = {};
                            p[n] = n;
                            i[h] = [Function(["require"], "require(" + o(n) + ")(self)"), p];
                            var d = "(" + r + ")({" + Object.keys(i).map(function(e) {
                                return o(e) + ":[" + i[e][0] + "," + o(i[e][1]) + "]"
                            }).join(",") + "},{},[" + o(h) + "])";
                            var v = window.URL || window.webkitURL || window.mozURL || window.msURL;
                            return new Worker(v.createObjectURL(new Blob([d], {
                                type: "text/javascript"
                            })))
                        }
                    }, {}],
                    77: [function(e, t, r) {
                        (function(n) {
                            "use strict";

                            function s(e) {
                                return e && e.__esModule ? e : {
                                    "default": e
                                }
                            }

                            function o(e, t) {
                                if (!(e instanceof t)) {
                                    throw new TypeError("Cannot call a class as a function")
                                }
                            }

                            function a(e, t) {
                                if (typeof t !== "function" && t !== null) {
                                    throw new TypeError("Super expression must either be null or a function, not " + (typeof t === "undefined" ? "undefined" : u(t)))
                                }
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: false,
                                        writable: true,
                                        configurable: true
                                    }
                                });
                                if (t)
                                    Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                            }
                            var r = function() {
                                function e(e, t) {
                                    for (var n = 0; n < t.length; n++) {
                                        var r = t[n];
                                        r.enumerable = r.enumerable || false;
                                        r.configurable = true;
                                        if ("value" in r)
                                            r.writable = true;
                                        Object.defineProperty(e, r.key, r)
                                    }
                                }
                                return function(t, n, r) {
                                    if (n)
                                        e(t.prototype, n);
                                    if (r)
                                        e(t, r);
                                    return t
                                }
                            }();
                            var i = function(t, n, r) {
                                var i = true;
                                e: while (i) {
                                    var s = t,
                                        o = n,
                                        u = r;
                                    i = false;
                                    if (s === null)
                                        s = Function.prototype;
                                    var a = Object.getOwnPropertyDescriptor(s, o);
                                    if (a === undefined) {
                                        var f = Object.getPrototypeOf(s);
                                        if (f === null) {
                                            return undefined
                                        } else {
                                            t = f;
                                            n = o;
                                            r = u;
                                            i = true;
                                            a = f = undefined;
                                            continue e
                                        }
                                    } else if ("value" in a) {
                                        return a.value
                                    } else {
                                        var l = a.get;
                                        if (l === undefined) {
                                            return undefined
                                        }
                                        return l.call(u)
                                    }
                                }
                            };
                            var f = e("global/document");
                            var l = s(f);
                            var c = e("./playlist-loader");
                            var h = s(c);
                            var p = e("./playlist");
                            var d = s(p);
                            var v = e("./xhr");
                            var m = s(v);
                            var g = e("aes-decrypter");
                            var y = e("./bin-utils");
                            var b = s(y);
                            var w = e("videojs-contrib-media-sources");
                            var E = e("m3u8-parser");
                            var S = s(E);
                            var x = typeof window !== "undefined" ? window["videojs"] : typeof n !== "undefined" ? n["videojs"] : null;
                            var T = s(x);
                            var N = e("./master-playlist-controller");
                            var C = e("./config");
                            var k = s(C);
                            var L = e("./rendition-mixin");
                            var A = s(L);
                            var O = e("global/window");
                            var M = s(O);
                            var _ = e("./playback-watcher");
                            var D = s(_);
                            var P = e("./reload-source-on-error");
                            var H = s(P);
                            var B = e("./playlist-selectors.js");
                            var j = {
                                PlaylistLoader: h["default"],
                                Playlist: d["default"],
                                Decrypter: g.Decrypter,
                                AsyncStream: g.AsyncStream,
                                decrypt: g.decrypt,
                                utils: b["default"],
                                STANDARD_PLAYLIST_SELECTOR: B.lastBandwidthSelector,
                                INITIAL_PLAYLIST_SELECTOR: B.lowestBitrateCompatibleVariantSelector,
                                comparePlaylistBandwidth: B.comparePlaylistBandwidth,
                                comparePlaylistResolution: B.comparePlaylistResolution,
                                xhr: (0,
                                    m["default"])()
                            };
                            var F = 4194304;
                            ["GOAL_BUFFER_LENGTH", "MAX_GOAL_BUFFER_LENGTH", "GOAL_BUFFER_LENGTH_RATE", "BUFFER_LOW_WATER_LINE", "MAX_BUFFER_LOW_WATER_LINE", "BUFFER_LOW_WATER_LINE_RATE", "BANDWIDTH_VARIANCE"].forEach(function(e) {
                                Object.defineProperty(j, e, {
                                    get: function() {
                                        T["default"].log.warn("using Hls." + e + " is UNSAFE be sure you know what you are doing");
                                        return k["default"][e]
                                    },
                                    set: function(n) {
                                        T["default"].log.warn("using Hls." + e + " is UNSAFE be sure you know what you are doing");
                                        if (typeof n !== "number" || n < 0) {
                                            T["default"].log.warn("value of Hls." + e + " must be greater than or equal to 0");
                                            return
                                        }
                                        k["default"][e] = n
                                    }
                                })
                            });
                            var I = function(t, n) {
                                var r = n.media();
                                var i = -1;
                                for (var s = 0; s < t.length; s++) {
                                    if (t[s].id === r.uri) {
                                        i = s;
                                        break
                                    }
                                }
                                t.selectedIndex_ = i;
                                t.trigger({
                                    selectedIndex: i,
                                    type: "change"
                                })
                            };
                            var q = function(t, n) {
                                n.representations().forEach(function(e) {
                                    t.addQualityLevel(e)
                                });
                                I(t, n.playlists)
                            };
                            j.canPlaySource = function() {
                                return T["default"].log.warn("HLS is no longer a tech. Please remove it from " + "your player's techOrder.")
                            };
                            j.supportsNativeHls = function() {
                                var e = l["default"].createElement("video");
                                if (!T["default"].getTech("Html5").isSupported()) {
                                    return false
                                }
                                var t = ["application/vnd.apple.mpegurl", "audio/mpegurl", "audio/x-mpegurl", "application/x-mpegurl", "video/x-mpegurl", "video/mpegurl", "application/mpegurl"];
                                return t.some(function(t) {
                                    return /maybe|probably/i.test(e.canPlayType(t))
                                })
                            }();
                            j.isSupported = function() {
                                return T["default"].log.warn("HLS is no longer a tech. Please remove it from " + "your player's techOrder.")
                            };
                            var R = T["default"].getComponent("Component");
                            var U = function(e) {
                                function t(e, n, r) {
                                    var s = this;
                                    o(this, t);
                                    i(Object.getPrototypeOf(t.prototype), "constructor", this).call(this, n, r.hls);
                                    if (n.options_ && n.options_.playerId) {
                                        var u = (0,
                                            T["default"])(n.options_.playerId);
                                        if (!u.hasOwnProperty("hls")) {
                                            Object.defineProperty(u, "hls", {
                                                get: function() {
                                                    T["default"].log.warn("player.hls is deprecated. Use player.tech_.hls instead.");
                                                    n.trigger({
                                                        type: "usage",
                                                        name: "hls-player-access"
                                                    });
                                                    return s
                                                }
                                            })
                                        }
                                    }
                                    this.tech_ = n;
                                    this.source_ = e;
                                    this.stats = {};
                                    this.ignoreNextSeekingEvent_ = false;
                                    this.setOptions_();
                                    if (this.options_.overrideNative && (n.featuresNativeVideoTracks || n.featuresNativeAudioTracks)) {
                                        throw new Error("Overriding native HLS requires emulated tracks. " + "See https://git.io/vMpjB")
                                    }
                                    this.on(l["default"], ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"], function(e) {
                                        var t = l["default"].fullscreenElement || l["default"].webkitFullscreenElement || l["default"].mozFullScreenElement || l["default"].msFullscreenElement;
                                        if (t && t.contains(s.tech_.el())) {
                                            s.masterPlaylistController_.fastQualityChange_()
                                        }
                                    });
                                    this.on(this.tech_, "seeking", function() {
                                        if (this.ignoreNextSeekingEvent_) {
                                            this.ignoreNextSeekingEvent_ = false;
                                            return
                                        }
                                        this.setCurrentTime(this.tech_.currentTime())
                                    });
                                    this.on(this.tech_, "error", function() {
                                        if (this.masterPlaylistController_) {
                                            this.masterPlaylistController_.pauseLoading()
                                        }
                                    });
                                    this.on(this.tech_, "play", this.play)
                                }
                                a(t, e);
                                r(t, [{
                                    key: "setOptions_",
                                    value: function() {
                                        var t = this;
                                        this.options_.withCredentials = this.options_.withCredentials || false;
                                        if (typeof this.options_.blacklistDuration !== "number") {
                                            this.options_.blacklistDuration = 5 * 60
                                        }
                                        if (typeof this.options_.bandwidth !== "number") {
                                            this.options_.bandwidth = F
                                        }
                                        this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === F;
                                        ["withCredentials", "bandwidth"].forEach(function(e) {
                                            if (typeof t.source_[e] !== "undefined") {
                                                t.options_[e] = t.source_[e]
                                            }
                                        });
                                        this.bandwidth = this.options_.bandwidth
                                    }
                                }, {
                                    key: "src",
                                    value: function(t) {
                                        var n = this;
                                        if (!t) {
                                            return
                                        }
                                        this.setOptions_();
                                        this.options_.url = this.source_.src;
                                        this.options_.tech = this.tech_;
                                        this.options_.externHls = j;
                                        this.masterPlaylistController_ = new N.MasterPlaylistController(this.options_);
                                        this.playbackWatcher_ = new D["default"](T["default"].mergeOptions(this.options_, {
                                            seekable: function() {
                                                return n.seekable()
                                            }
                                        }));
                                        this.masterPlaylistController_.on("error", function() {
                                            var e = T["default"].players[n.tech_.options_.playerId];
                                            e.error(n.masterPlaylistController_.error)
                                        });
                                        this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : j.STANDARD_PLAYLIST_SELECTOR.bind(this);
                                        this.masterPlaylistController_.selectInitialPlaylist = j.INITIAL_PLAYLIST_SELECTOR.bind(this);
                                        this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;
                                        this.mediaSource = this.masterPlaylistController_.mediaSource;
                                        Object.defineProperties(this, {
                                            selectPlaylist: {
                                                get: function() {
                                                    return this.masterPlaylistController_.selectPlaylist
                                                },
                                                set: function(t) {
                                                    this.masterPlaylistController_.selectPlaylist = t.bind(this)
                                                }
                                            },
                                            throughput: {
                                                get: function() {
                                                    return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate
                                                },
                                                set: function(t) {
                                                    this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = t;
                                                    this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1
                                                }
                                            },
                                            bandwidth: {
                                                get: function() {
                                                    return this.masterPlaylistController_.mainSegmentLoader_.bandwidth
                                                },
                                                set: function(t) {
                                                    this.masterPlaylistController_.mainSegmentLoader_.bandwidth = t;
                                                    this.masterPlaylistController_.mainSegmentLoader_.throughput = {
                                                        rate: 0,
                                                        count: 0
                                                    }
                                                }
                                            },
                                            systemBandwidth: {
                                                get: function() {
                                                    var t = 1 / (this.bandwidth || 1);
                                                    var n = undefined;
                                                    if (this.throughput > 0) {
                                                        n = 1 / this.throughput
                                                    } else {
                                                        n = 0
                                                    }
                                                    var r = Math.floor(1 / (t + n));
                                                    return r
                                                },
                                                set: function() {
                                                    T["default"].log.error('The "systemBandwidth" property is read-only')
                                                }
                                            }
                                        });
                                        Object.defineProperties(this.stats, {
                                            bandwidth: {
                                                get: function() {
                                                    return n.bandwidth || 0
                                                },
                                                enumerable: true
                                            },
                                            mediaRequests: {
                                                get: function() {
                                                    return n.masterPlaylistController_.mediaRequests_() || 0
                                                },
                                                enumerable: true
                                            },
                                            mediaRequestsAborted: {
                                                get: function() {
                                                    return n.masterPlaylistController_.mediaRequestsAborted_() || 0
                                                },
                                                enumerable: true
                                            },
                                            mediaRequestsTimedout: {
                                                get: function() {
                                                    return n.masterPlaylistController_.mediaRequestsTimedout_() || 0
                                                },
                                                enumerable: true
                                            },
                                            mediaRequestsErrored: {
                                                get: function() {
                                                    return n.masterPlaylistController_.mediaRequestsErrored_() || 0
                                                },
                                                enumerable: true
                                            },
                                            mediaTransferDuration: {
                                                get: function() {
                                                    return n.masterPlaylistController_.mediaTransferDuration_() || 0
                                                },
                                                enumerable: true
                                            },
                                            mediaBytesTransferred: {
                                                get: function() {
                                                    return n.masterPlaylistController_.mediaBytesTransferred_() || 0
                                                },
                                                enumerable: true
                                            },
                                            mediaSecondsLoaded: {
                                                get: function() {
                                                    return n.masterPlaylistController_.mediaSecondsLoaded_() || 0
                                                },
                                                enumerable: true
                                            }
                                        });
                                        this.tech_.one("canplay", this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));
                                        this.masterPlaylistController_.on("selectedinitialmedia", function() {
                                            (0,
                                                A["default"])(n)
                                        });
                                        this.on(this.masterPlaylistController_, "progress", function() {
                                            this.tech_.trigger("progress")
                                        });
                                        this.on(this.masterPlaylistController_, "firstplay", function() {
                                            this.ignoreNextSeekingEvent_ = true
                                        });
                                        this.tech_.ready(function() {
                                            return n.setupQualityLevels_()
                                        });
                                        if (!this.tech_.el()) {
                                            return
                                        }
                                        this.tech_.src(T["default"].URL.createObjectURL(this.masterPlaylistController_.mediaSource))
                                    }
                                }, {
                                    key: "setupQualityLevels_",
                                    value: function() {
                                        var t = this;
                                        var n = T["default"].players[this.tech_.options_.playerId];
                                        if (n && n.qualityLevels) {
                                            this.qualityLevels_ = n.qualityLevels();
                                            this.masterPlaylistController_.on("selectedinitialmedia", function() {
                                                q(t.qualityLevels_, t)
                                            });
                                            this.playlists.on("mediachange", function() {
                                                I(t.qualityLevels_, t.playlists)
                                            })
                                        }
                                    }
                                }, {
                                    key: "play",
                                    value: function() {
                                        this.masterPlaylistController_.play()
                                    }
                                }, {
                                    key: "setCurrentTime",
                                    value: function(t) {
                                        this.masterPlaylistController_.setCurrentTime(t)
                                    }
                                }, {
                                    key: "duration",
                                    value: function() {
                                        return this.masterPlaylistController_.duration()
                                    }
                                }, {
                                    key: "seekable",
                                    value: function() {
                                        return this.masterPlaylistController_.seekable()
                                    }
                                }, {
                                    key: "dispose",
                                    value: function() {
                                        if (this.playbackWatcher_) {
                                            this.playbackWatcher_.dispose()
                                        }
                                        if (this.masterPlaylistController_) {
                                            this.masterPlaylistController_.dispose()
                                        }
                                        if (this.qualityLevels_) {
                                            this.qualityLevels_.dispose()
                                        }
                                        i(Object.getPrototypeOf(t.prototype), "dispose", this).call(this)
                                    }
                                }]);
                                return t
                            }(R);
                            var z = function X(e) {
                                return {
                                    canHandleSource: function(n) {
                                        var r = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                                        var i = T["default"].mergeOptions(T["default"].options, r);
                                        if (i.hls && i.hls.mode && i.hls.mode !== e) {
                                            return false
                                        }
                                        return X.canPlayType(n.type, i)
                                    },
                                    handleSource: function(n, r) {
                                        var i = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
                                        var s = T["default"].mergeOptions(T["default"].options, i, {
                                            hls: {
                                                mode: e
                                            }
                                        });
                                        if (e === "flash") {
                                            r.setTimeout(function() {
                                                r.trigger("loadstart")
                                            }, 1)
                                        }
                                        r.hls = new U(n, r, s);
                                        r.hls.xhr = (0,
                                            m["default"])();
                                        r.hls.src(n.src);
                                        return r.hls
                                    },
                                    canPlayType: function(t) {
                                        var n = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                                        var r = T["default"].mergeOptions(T["default"].options, n);
                                        if (X.canPlayType(t, r)) {
                                            return "maybe"
                                        }
                                        return ""
                                    }
                                }
                            };
                            z.canPlayType = function(e, t) {
                                if (T["default"].browser.IE_VERSION && T["default"].browser.IE_VERSION <= 10) {
                                    return false
                                }
                                var n = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;
                                if (!t.hls.overrideNative && j.supportsNativeHls) {
                                    return false
                                }
                                return n.test(e)
                            };
                            if (typeof T["default"].MediaSource === "undefined" || typeof T["default"].URL === "undefined") {
                                T["default"].MediaSource = w.MediaSource;
                                T["default"].URL = w.URL
                            }
                            var W = T["default"].getTech("Flash");
                            if (w.MediaSource.supportsNativeMediaSources()) {
                                T["default"].getTech("Html5").registerSourceHandler(z("html5"), 0)
                            }
                            if (M["default"].Uint8Array && W) {
                                W.registerSourceHandler(z("flash"))
                            }
                            T["default"].HlsHandler = U;
                            T["default"].HlsSourceHandler = z;
                            T["default"].Hls = j;
                            if (!T["default"].use) {
                                T["default"].registerComponent("Hls", j)
                            }
                            T["default"].m3u8 = S["default"];
                            T["default"].options.hls = T["default"].options.hls || {};
                            if (T["default"].registerPlugin) {
                                T["default"].registerPlugin("reloadSourceOnError", H["default"])
                            } else {
                                T["default"].plugin("reloadSourceOnError", H["default"])
                            }
                            t.exports = {
                                Hls: j,
                                HlsHandler: U,
                                HlsSourceHandler: z
                            }
                        }).call(this, typeof n !== "undefined" ? n : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }, {
                        "./bin-utils": 2,
                        "./config": 3,
                        "./master-playlist-controller": 5,
                        "./playback-watcher": 8,
                        "./playlist": 11,
                        "./playlist-loader": 9,
                        "./playlist-selectors.js": 10,
                        "./reload-source-on-error": 13,
                        "./rendition-mixin": 14,
                        "./xhr": 21,
                        "aes-decrypter": 25,
                        "global/document": 31,
                        "global/window": 32,
                        "m3u8-parser": 33,
                        "videojs-contrib-media-sources": 74
                    }]
                }, {}, [77])(77)
            })
        }).call(t, function() {
            return this
        }())
    },
    780: function(t, n, r) {
        r(393);
        r(503);
        r(505);
        r(504);
        r(654);
        r(506);
        r(392);
        $.provide("ptouch.sight.detail.TicketPrice");
        ptouch.sight.detail.TicketPrice = function(e) {
            this.context = window.context;
            this.pageContainer = e;
            this.container = this.pageContainer.find(".mp-ticket-container");
            this.window_ = $(window);
            this.moreButtonList = $.role("moreButton");
            this.ticketMainZoneList = $.role("TicketMainZone");
            this.ticketTypeTileList = $.role("TicketTypeTitle");
            this.ticketLinkList = $.role("TicketLink");
            this.scrollTop = this.window_.scrollTop();
            this.detailData = {};
            this.SupplierType = {
                TUAN: 1,
                VIP: 2,
                GENERAL: 3,
                CPC: 4
            }
        };
        $.extend(ptouch.sight.detail.TicketPrice.prototype, {
            init: function() {
                this.resetTicketLinks();
                this.bindEvents();
                this.openFirstTicket();
                this.openDetailWindow();
                this.addAnalysisParam()
            },
            resetTicketLinks: function() {
                var t = this.container.role("promoteArea"),
                    n = t.role("downloadAppBtn");
                if ($.env.platform == "app") {
                    var r = this.container.find("a");
                    ptouch.adaptAppLink(r);
                    this.adaptHyLink(r);
                    n.addClass("mp-promote-ablebtn")
                } else {
                    var i = false,
                        s = "//touch.qunar.com/client/?sScheme=0&scheme=" + encodeURIComponent("sight/detail?id=" + this.context.sightId);
                    for (var o = 0; o < n.length; o++) {
                        var u = n.eq(o),
                            a = u.attr("data-app");
                        if (a) {
                            i = true;
                            u.text("下载APP").addClass("mp-promote-disablebtn");
                            var f = u.closest("a"),
                                l = u.closest("[mp-role=TicketItem]");
                            f.attr("href", s);
                            l.attr("data-disabled", true)
                        } else {
                            u.addClass("mp-promote-ablebtn")
                        }
                    }
                    if (i) {
                        this.leftDownloadArea = $.role("appDownLeft");
                        this.leftDownloadArea.attr("href", s);
                        this.window_.listen("scroll", this.handleWindowScroll, this)
                    }
                }
            },
            handleWindowScroll: function(t) {
                if (!this.timeoutId_) {
                    this.timeoutId_ = setTimeout($.proxy(function() {
                        var e = $(window).scrollTop();
                        if (e < this.scrollTop_) {
                            this.leftDownloadArea.show()
                        } else {
                            this.leftDownloadArea.hide()
                        }
                        this.scrollTop_ = e;
                        this.timeoutId_ = null
                    }, this), 30)
                }
            },
            adaptHyLink: function(t) {
                for (var n = 0; n < t.length; n++) {
                    var r = t.eq(n),
                        i = r.attr("href");
                    if (i.indexOf("spu/onedaytour.htm") > -1 || i.indexOf("spu/onedaytour.htm") > -1) {
                        if (i.indexOf("http") != 0 && i.indexOf("https") != 0) {
                            if (i.indexOf("//") != 0) {
                                i = location.protocol + "//" + location.host + i
                            } else {
                                i = location.protocol + i
                            }
                        }
                        i = $.env.scheme + "://hy?url=" + encodeURIComponent(i) + "&type=navibar-none";
                        r.attr("href", i)
                    }
                }
            },
            bindEvents: function() {
                this.moreButtonList.listen("click", this.handleMoreButtonClick, this);
                this.ticketMainZoneList.listen("click", this.handleTicketMainZoneClick, this);
                this.ticketTypeTileList.listen("click", this.handleTicketTypeTitleClick, this);
                this.ticketLinkList.listen("click", this.handleOrderLinkClick, this)
            },
            handleMoreButtonClick: function(t) {
                var n = $(t.currentTarget);
                n.siblings().show();
                n.remove()
            },
            handleTicketMainZoneClick: function(t) {
                var n = $(t.currentTarget).parent(),
                    r = n.data("tickettype"),
                    i = n.find('[data-clktype="product-detail"]'),
                    s = n.find("[mp-role=TicketLink]").attr("href");
                if (i.length != 0) {
                    var o = i.closest("[mp-role=TicketItem]").attr("data-disabled");
                    if (!o) {
                        this.getProductDetail(i)
                    }
                } else {
                    if (r && s) {
                        window.location.href = s
                    }
                }
            },
            getProductDetail: function(t) {
                var n = t.attr("data-pid");
                if (typeof this.detailData[n] != "undefined") {
                    this.detailData[n].show()
                } else {
                    this.detailData[n] = new ptouch.product.MiniDetail("sight_detail", n, null, true, null);
                    this.detailData[n].init();
                    $.listen(this.detailData[n], "clickBookBtn", this.handleProductMiniDetailBook, this)
                }
            },
            handleProductMiniDetailBook: function(t) {
                var n = t.productId,
                    r = '[data-pid="' + n + '"]',
                    i = this.ticketLinkList.filter(r),
                    s;
                for (var o = 0; o < i.length; o++) {
                    var u = i.eq(o),
                        a = u.closest("[mp-role=TicketItem]").attr("data-disabled");
                    if (!a) {
                        s = u;
                        break
                    }
                }
                this.preHandleOrderLinkClick(s)
            },
            preHandleOrderLinkClick: function(n) {
                if (this.context.isLogin === "true" && n.attr("data-inactivity") === "true") {
                    $.ajax({
                        type: "post",
                        dateType: "json",
                        data: {
                            redIds: n.attr("data-redid"),
                            t: +(new Date)
                        },
                        url: "/touch/canUseRedPacket.json",
                        success: function(r) {
                            if (r.ret) {
                                this.handleShowTouch2App(n)
                            } else {
                                this.handleTicketClick(n, e)
                            }
                        },
                        context: this
                    })
                } else {
                    this.handleTicketClick(n)
                }
            },
            handleShowTouch2App: function(t) {
                var n = this;
                n.initParm = {
                    type: "confirm",
                    title: "友情提示",
                    content: "使用去哪儿旅行客户端预订，可使用红包支付，享立减优惠",
                    okText: "直接预订",
                    cancelText: "使用客户端",
                    handleCancel: function() {
                        var n = t.attr("href"),
                            r = ptouch.getParam(n, "pid"),
                            i = ptouch.getParam(n, "priceId");
                        window.location.href = "http://touch.qunar.com/h5/client?bd_source=qunar&sScheme=0&scheme=" + encodeURIComponent("sight/booking?pid=" + r + "&productId=" + r + "&priceId=" + i + "&classify=1") + "&touchUrl=download"
                    },
                    handleOk: function() {
                        n.handleTicketClick(t);
                        n.bookingConfirm.destroy();
                        n.bookingConfirm = null
                    },
                    handleClose: function() {
                        n.bookingConfirm.destroy();
                        n.bookingConfirm = null
                    }
                };
                n.bookingConfirm = new ptouch.Dialog(n.initParm);
                n.bookingConfirm.show()
            },
            handleTicketClick: function(t) {
                var n = t.attr("data-suppliername"),
                    r = t.attr("data-suppliertype"),
                    i = t.attr("data-hasmob"),
                    s = t.attr("href");
                if (r == this.SupplierType.CPC && i) {
                    s = t.attr("data-moburl");
                    if (!this.alertPopup) {
                        var o = new ptouch.PopupPage("alert");
                        o.setTitle("预订提醒");
                        o.create("body");
                        this.alertPopup = o
                    }
                    this.alertPopup.setContent('<div style="margin-bottom:10px; background:white; padding:10px;">此门票由“' + n + "”提供预订服务。请务必阅读相关预订须知，并咨询“" + n + '”客服后购买门票。购票请记住"' + n + '"的售后联系方式。<br>对于您在“' + n + "”购买门票的行为，“去哪儿网”将不承担任何责任，具体请参见“去哪儿网”免责声明</div>" + '<div class="mp-group mp-intro-buttons"><div onclick="window.location.href=' + "'" + s + "'" + ';" class="mp-row mp-row-activable"><span class="light">前往"' + n + '"预订</span><i class="mp-row-arrow"></i></div></div>' + '<div class="mp-group mp-intro-buttons"><div onclick="window.location.href=' + "'" + "/touch/order/noduty.htm" + "'" + ';" class="mp-row mp-row-activable"><span class="light">查看"去哪儿网"免责声明</span><i class="mp-row-arrow"></i></div></div>');
                    ptouch.Route.getInstance().showPage("alert", this.alertPopup)
                } else {
                    if (t.attr("data-teamtype") == "0") {
                        this.selectCategory(t)
                    } else {
                        window.location.href = t.attr("href")
                    }
                }
            },
            openFirstTicket: function() {
                var t = $("[mp-role=TicketsGroup]");
                if (t.length == 1) {
                    var n = t.eq(0),
                        r = n.find("[mp-role=TicketItem]"),
                        i = n.parents("[mp-role=TicketTypeTitleLink]");
                    if (r.length > 0 && i.length == 0) {
                        n.parents("[mp-role=PriceListItem]").addClass("mp-ticket-list-expand")
                    }
                }
            },
            openDetailWindow: function() {
                var t = ptouch.getParamFromUrl("tid");
                if (t != "") {
                    var n = 0;
                    var r = null;
                    var i = this.container.find("[mp-role=PriceListItem]");
                    for (var s = 0; s < i.length; s++) {
                        var o = $(i[s]).data("typeid");
                        if (o == t) {
                            n = $(i[s]).offset().top;
                            this.window_.scrollTop(n);
                            r = $(i[s]);
                            break
                        }
                    }
                    if (r != null) {
                        r.find("[mp-role=TicketMainZone]").eq(0).click()
                    }
                }
            },
            addAnalysisParam: function() {
                var t = this.container.find("[mp-role=PriceListItem]"),
                    n, r, i, s, o, u, a = {};
                this.container.find("[mp-role=TicketLink]").each(function() {
                    n = $(this);
                    r = n.attr("href");
                    if (r) {
                        u = n.parents("[mp-role=PriceListItem]");
                        i = n.parents("[mp-role=TicketItem]").index() + 1;
                        o = u.attr("data-typeid");
                        s = t.index(u) + 1;
                        i && (a.pIndex = i);
                        s && (a.typeIndex = s);
                        o && (a.typeId = o);
                        r = ptouch.Analytics.makeAnalyticsLink(r, a);
                        n.attr("href", r)
                    }
                })
            },
            handleTicketTypeTitleClick: function(t) {
                $(t.currentTarget).parent().toggleClass("mp-ticket-list-expand")
            },
            handleOrderLinkClick: function(t) {
                t.preventDefault();
                var n = $(t.currentTarget),
                    r = n.role("downloadAppBtn").attr("data-app");
                if ($.env.platform != "app" && r) {
                    window.location.href = n.attr("href")
                } else {
                    this.preHandleOrderLinkClick(n)
                }
            },
            selectCategory: function(t) {
                if (!this.categoryPopup) {
                    this.categoryPopup = new ptouch.Dock("page-category");
                    this.categoryPopup.render("#main-page");
                    $(this.categoryPopup).listen("closeOneDock", this.handleCloseCategoryCover, this)
                }
                if (!this.categoryCoverElem) {
                    this.categoryCoverElem = $('<div class="mpg-mask"></div>');
                    this.pageContainer.append(this.categoryCoverElem);
                    this.categoryCoverElem.listen("click", this.handleCloseCategoryCover, this)
                }
                var n = t.attr("href");
                var r = t.attr("data-cashbackamount");
                if (r && r != "0") {
                    r = ""
                }
                var i = ptouch.getParam(n, "pid");
                var s = 0;
                var o = ptouch.getParam(n, "classify");
                if (!this.category) {
                    this.category = new ptouch.Category(ptouch.API_PRODUCT_CATEGORY);
                    $(this.category).listen("renderCategory", this.handleRenderCategory, this);
                    $(this.category).listen("categoryCloseCover", this.handleCloseCategoryCover, this);
                    $(this.category).listen("selectDate", $.proxy(this.category.dealBookBtnAndPrice, this.category))
                }
                this.category.showPromptMsg("加载中，请稍等");
                this.category.init(i, s, o, n, r)
            },
            handleRenderCategory: function(t) {
                this.categoryPopup.show();
                var n = t.target.data,
                    r = "";
                if (n) {
                    r = $(QTMPL.category.render(n));
                    var i = t.target.defaultDateMap;
                    if (i) {
                        var s = QTMPL.calendarcategory.render(i);
                        r.find("[data-type='CALENDAR']").append(s)
                    }
                } else {
                    r = '<div class="detail_des theme_dark" style="padding:10px;">暂无信息</div>'
                }
                this.categoryPopup.setContent(r);
                this.categoryCoverElem.show();
                this.category.attachEvent("#alldate");
                var o = $.role("dateshortcutkey");
                if (o.length) {
                    this.category.setDateShorKey(o.eq(0))
                } else {
                    this.category.openDatePanel()
                }
            },
            handleCloseCategoryCover: function(t) {
                $(document).trigger("closeAllDock");
                this.categoryCoverElem.hide();
                t.stopPropagation()
            }
        })
    }
})